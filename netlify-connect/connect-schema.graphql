"""Add date formatting options."""
directive @dateformat(formatString: String, locale: String, fromNow: Boolean, difference: String) on FIELD_DEFINITION

"""Link to node by foreign-key relation."""
directive @link(by: String! = "id", from: String, on: String) on FIELD_DEFINITION

"""Link to File node by relative path."""
directive @fileByRelativePath(from: String) on FIELD_DEFINITION

"""Proxy resolver from another field."""
directive @proxy(from: String!, fromNode: Boolean! = false) on FIELD_DEFINITION

"""Infer field types from field values."""
directive @infer on OBJECT

"""Do not infer field types from field values."""
directive @dontInfer on OBJECT

"""Define the mime-types handled by this type."""
directive @mimeTypes(
  """The mime-types handled by this type."""
  types: [String!]! = []
) on OBJECT

"""
Define parent-child relations between types. This is used to add `child*` and `children*` convenience fields like `childImageSharp`.
"""
directive @childOf(
  """
  A list of mime-types this type is a child of. Usually these are the mime-types handled by a transformer plugin.
  """
  mimeTypes: [String!]! = []

  """
  A list of types this type is a child of. Usually these are the types handled by a transformer plugin.
  """
  types: [String!]! = []
) on OBJECT

"""
DEPRECATED: Use interface inheritance instead, i.e. "interface Foo implements Node".

Adds root query fields for an interface. All implementing types must also implement the Node interface.
"""
directive @nodeInterface on INTERFACE

type Query {
  contentfulEntry(contentful_id: StringQueryOperatorInput, id: StringQueryOperatorInput, node_locale: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): ContentfulEntry
  allContentfulEntry(filter: ContentfulEntryFilterInput, sort: [ContentfulEntrySortInput], skip: Int, limit: Int): ContentfulEntryConnection!
  contentfulAsset(contentful_id: StringQueryOperatorInput, id: StringQueryOperatorInput, gatsbyImageData: GatsbyImageDataQueryOperatorInput, spaceId: StringQueryOperatorInput, createdAt: DateQueryOperatorInput, updatedAt: DateQueryOperatorInput, file: ContentfulAssetFileFilterInput, title: StringQueryOperatorInput, description: StringQueryOperatorInput, node_locale: StringQueryOperatorInput, sys: ContentfulAssetSysFilterInput, url: StringQueryOperatorInput, placeholderUrl: StringQueryOperatorInput, mimeType: StringQueryOperatorInput, filename: StringQueryOperatorInput, width: IntQueryOperatorInput, height: IntQueryOperatorInput, size: IntQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, filesize: IntQueryOperatorInput, publicUrl: StringQueryOperatorInput, resize: RemoteFileResizeFilterInput, gatsbyImage: GatsbyImageDataQueryOperatorInput): ContentfulAsset
  allContentfulAsset(filter: ContentfulAssetFilterInput, sort: [ContentfulAssetSortInput], skip: Int, limit: Int): ContentfulAssetConnection!
  contentfulPerson(contentful_id: StringQueryOperatorInput, id: StringQueryOperatorInput, node_locale: StringQueryOperatorInput, name: StringQueryOperatorInput, title: StringQueryOperatorInput, company: StringQueryOperatorInput, shortBio: ContentfulPersonShortBioFilterInput, email: StringQueryOperatorInput, phone: StringQueryOperatorInput, facebook: StringQueryOperatorInput, twitter: StringQueryOperatorInput, github: StringQueryOperatorInput, image: ContentfulAssetFilterInput, blog_post: ContentfulBlogPostFilterListInput, spaceId: StringQueryOperatorInput, createdAt: DateQueryOperatorInput, updatedAt: DateQueryOperatorInput, sys: ContentfulPersonSysFilterInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): ContentfulPerson
  allContentfulPerson(filter: ContentfulPersonFilterInput, sort: [ContentfulPersonSortInput], skip: Int, limit: Int): ContentfulPersonConnection!
  contentfulBlogPost(contentful_id: StringQueryOperatorInput, id: StringQueryOperatorInput, node_locale: StringQueryOperatorInput, title: StringQueryOperatorInput, slug: StringQueryOperatorInput, description: ContentfulBlogPostDescriptionFilterInput, body: ContentfulBlogPostBodyFilterInput, publishDate: DateQueryOperatorInput, tags: StringQueryOperatorInput, heroImage: ContentfulAssetFilterInput, author: ContentfulPersonFilterInput, spaceId: StringQueryOperatorInput, createdAt: DateQueryOperatorInput, updatedAt: DateQueryOperatorInput, sys: ContentfulBlogPostSysFilterInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): ContentfulBlogPost
  allContentfulBlogPost(filter: ContentfulBlogPostFilterInput, sort: [ContentfulBlogPostSortInput], skip: Int, limit: Int): ContentfulBlogPostConnection!
  contentfulBook(contentful_id: StringQueryOperatorInput, id: StringQueryOperatorInput, node_locale: StringQueryOperatorInput, title: StringQueryOperatorInput, publicationDate: DateQueryOperatorInput, isbn: StringQueryOperatorInput, description: ContentfulBookDescriptionFilterInput, coverImage: ContentfulAssetFilterInput, author: ContentfulAuthorFilterInput, spaceId: StringQueryOperatorInput, createdAt: DateQueryOperatorInput, updatedAt: DateQueryOperatorInput, sys: ContentfulBookSysFilterInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): ContentfulBook
  allContentfulBook(filter: ContentfulBookFilterInput, sort: [ContentfulBookSortInput], skip: Int, limit: Int): ContentfulBookConnection!
  contentfulAuthor(contentful_id: StringQueryOperatorInput, id: StringQueryOperatorInput, node_locale: StringQueryOperatorInput, name: StringQueryOperatorInput, bio: ContentfulAuthorBioFilterInput, avatar: ContentfulAssetFilterInput, book: ContentfulBookFilterListInput, spaceId: StringQueryOperatorInput, createdAt: DateQueryOperatorInput, updatedAt: DateQueryOperatorInput, sys: ContentfulAuthorSysFilterInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): ContentfulAuthor
  allContentfulAuthor(filter: ContentfulAuthorFilterInput, sort: [ContentfulAuthorSortInput], skip: Int, limit: Int): ContentfulAuthorConnection!
  contentfulTag(name: StringQueryOperatorInput, contentful_id: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): ContentfulTag
  allContentfulTag(filter: ContentfulTagFilterInput, sort: [ContentfulTagSortInput], skip: Int, limit: Int): ContentfulTagConnection!
  drupalFileFile(drupal_id: StringQueryOperatorInput, drupal_internal__fid: IntQueryOperatorInput, langcode: StringQueryOperatorInput, filename: StringQueryOperatorInput, uri: DrupalFile__fileUriFilterInput, filemime: StringQueryOperatorInput, filesize: IntQueryOperatorInput, status: BooleanQueryOperatorInput, created: DateQueryOperatorInput, changed: DateQueryOperatorInput, mimeType: StringQueryOperatorInput, url: StringQueryOperatorInput, relationships: DrupalFile__fileRelationshipsFilterInput, uid: DrupalFile__fileUidFilterInput, placeholderUrl: StringQueryOperatorInput, width: IntQueryOperatorInput, height: IntQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, publicUrl: StringQueryOperatorInput, resize: RemoteFileResizeFilterInput, gatsbyImage: GatsbyImageDataQueryOperatorInput): DrupalFile__file
  allDrupalFileFile(filter: DrupalFile__fileFilterInput, sort: [DrupalFile__fileSortInput], skip: Int, limit: Int): DrupalFile__fileConnection!
  drupalFiles(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, mimeType: StringQueryOperatorInput, filename: StringQueryOperatorInput, filesize: IntQueryOperatorInput, width: IntQueryOperatorInput, height: IntQueryOperatorInput, publicUrl: StringQueryOperatorInput, resize: RemoteFileResizeFilterInput, gatsbyImage: GatsbyImageDataQueryOperatorInput): DrupalFiles
  allDrupalFiles(filter: DrupalFilesFilterInput, sort: [DrupalFilesSortInput], skip: Int, limit: Int): DrupalFilesConnection!
  drupalUserUser(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, display_name: StringQueryOperatorInput, relationships: DrupalUser__userRelationshipsFilterInput): DrupalUser__user
  allDrupalUserUser(filter: DrupalUser__userFilterInput, sort: [DrupalUser__userSortInput], skip: Int, limit: Int): DrupalUser__userConnection!
  drupalNodeDrupalTestContentType(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__nid: IntQueryOperatorInput, drupal_internal__vid: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_timestamp: DateQueryOperatorInput, status: BooleanQueryOperatorInput, title: StringQueryOperatorInput, created: DateQueryOperatorInput, changed: DateQueryOperatorInput, promote: BooleanQueryOperatorInput, sticky: BooleanQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, path: DrupalNode__drupal_test_content_typePathFilterInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, body: DrupalNode__drupal_test_content_typeBodyFilterInput, field_list_text_field: StringQueryOperatorInput, relationships: DrupalNode__drupal_test_content_typeRelationshipsFilterInput, node_type: DrupalNode__drupal_test_content_typeNode_typeFilterInput, revision_uid: DrupalNode__drupal_test_content_typeRevision_uidFilterInput, uid: DrupalNode__drupal_test_content_typeUidFilterInput): DrupalNode__drupal_test_content_type
  allDrupalNodeDrupalTestContentType(filter: DrupalNode__drupal_test_content_typeFilterInput, sort: [DrupalNode__drupal_test_content_typeSortInput], skip: Int, limit: Int): DrupalNode__drupal_test_content_typeConnection!
  drupalNodeTypeNodeType(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, langcode: StringQueryOperatorInput, status: BooleanQueryOperatorInput, dependencies: DrupalNode_type__node_typeDependenciesFilterInput, third_party_settings: DrupalNode_type__node_typeThird_party_settingsFilterInput, name: StringQueryOperatorInput, drupal_internal__type: StringQueryOperatorInput, description: StringQueryOperatorInput, help: StringQueryOperatorInput, new_revision: BooleanQueryOperatorInput, preview_mode: IntQueryOperatorInput, display_submitted: BooleanQueryOperatorInput, relationships: DrupalNode_type__node_typeRelationshipsFilterInput): DrupalNode_type__node_type
  allDrupalNodeTypeNodeType(filter: DrupalNode_type__node_typeFilterInput, sort: [DrupalNode_type__node_typeSortInput], skip: Int, limit: Int): DrupalNode_type__node_typeConnection!
  drupalNodeUser(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__nid: IntQueryOperatorInput, drupal_internal__vid: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_timestamp: DateQueryOperatorInput, status: BooleanQueryOperatorInput, title: StringQueryOperatorInput, created: DateQueryOperatorInput, changed: DateQueryOperatorInput, promote: BooleanQueryOperatorInput, sticky: BooleanQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, body: DrupalNode__userBodyFilterInput, relationships: DrupalNode__userRelationshipsFilterInput, node_type: DrupalNode__userNode_typeFilterInput, revision_uid: DrupalNode__userRevision_uidFilterInput, uid: DrupalNode__userUidFilterInput): DrupalNode__user
  allDrupalNodeUser(filter: DrupalNode__userFilterInput, sort: [DrupalNode__userSortInput], skip: Int, limit: Int): DrupalNode__userConnection!
  drupalNodeNikContentType(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__nid: IntQueryOperatorInput, drupal_internal__vid: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_timestamp: DateQueryOperatorInput, status: BooleanQueryOperatorInput, title: StringQueryOperatorInput, created: DateQueryOperatorInput, changed: DateQueryOperatorInput, promote: BooleanQueryOperatorInput, sticky: BooleanQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, field_accordian_text: DrupalNode__nik_content_typeField_accordian_textFilterInput, field_boolean_test: BooleanQueryOperatorInput, field_boolean_test_list: BooleanQueryOperatorInput, field_contentstack_product: StringQueryOperatorInput, field_date: DateQueryOperatorInput, field_email: StringQueryOperatorInput, field_hello: StringQueryOperatorInput, field_link: DrupalNode__nik_content_typeField_linkFilterInput, field_list_text_field: StringQueryOperatorInput, field_test_body: DrupalNode__nik_content_typeField_test_bodyFilterListInput, field_test_object: DrupalNode__nik_content_typeField_test_objectFilterInput, field_test_text_plain: StringQueryOperatorInput, field_text_plain_list: StringQueryOperatorInput, field_timestamp: DateQueryOperatorInput, relationships: DrupalNode__nik_content_typeRelationshipsFilterInput, node_type: DrupalNode__nik_content_typeNode_typeFilterInput, revision_uid: DrupalNode__nik_content_typeRevision_uidFilterInput, uid: DrupalNode__nik_content_typeUidFilterInput, field_adf: DrupalNode__nik_content_typeField_adfFilterInput, field_list_union_type: DrupalNode__nik_content_typeField_list_union_typeFilterListInput, field_test_content: DrupalNode__nik_content_typeField_test_contentFilterInput, field_list_reference: DrupalNode__nik_content_typeField_list_referenceFilterListInput, field_image_reference: DrupalNode__nik_content_typeField_image_referenceFilterInput, field_list_file_image: DrupalNode__nik_content_typeField_list_file_imageFilterListInput, field_other_reference_revision: DrupalNode__nik_content_typeField_other_reference_revisionFilterInput, field_paragraph: DrupalNode__nik_content_typeField_paragraphFilterListInput, field_single_paragraph: DrupalNode__nik_content_typeField_single_paragraphFilterInput, field_single_reference: DrupalNode__nik_content_typeField_single_referenceFilterInput, field_union_single_reference: DrupalNode__nik_content_typeField_union_single_referenceFilterInput): DrupalNode__nik_content_type
  allDrupalNodeNikContentType(filter: DrupalNode__nik_content_typeFilterInput, sort: [DrupalNode__nik_content_typeSortInput], skip: Int, limit: Int): DrupalNode__nik_content_typeConnection!
  drupalTaxonomyTermCi(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__tid: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, description: DrupalTaxonomy_term__ciDescriptionFilterInput, weight: IntQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, content_translation_created: DateQueryOperatorInput, relationships: DrupalTaxonomy_term__ciRelationshipsFilterInput, vid: DrupalTaxonomy_term__ciVidFilterInput, content_translation_uid: DrupalTaxonomy_term__ciContent_translation_uidFilterInput): DrupalTaxonomy_term__ci
  allDrupalTaxonomyTermCi(filter: DrupalTaxonomy_term__ciFilterInput, sort: [DrupalTaxonomy_term__ciSortInput], skip: Int, limit: Int): DrupalTaxonomy_term__ciConnection!
  drupalTaxonomyVocabularyTaxonomyVocabulary(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, langcode: StringQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, drupal_internal__vid: StringQueryOperatorInput, description: StringQueryOperatorInput, weight: IntQueryOperatorInput, relationships: DrupalTaxonomy_vocabulary__taxonomy_vocabularyRelationshipsFilterInput): DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  allDrupalTaxonomyVocabularyTaxonomyVocabulary(filter: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput, sort: [DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput], skip: Int, limit: Int): DrupalTaxonomy_vocabulary__taxonomy_vocabularyConnection!
  drupalTaxonomyTermRej(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__tid: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, description: DrupalTaxonomy_term__rejDescriptionFilterInput, weight: IntQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, content_translation_created: DateQueryOperatorInput, relationships: DrupalTaxonomy_term__rejRelationshipsFilterInput, vid: DrupalTaxonomy_term__rejVidFilterInput, content_translation_uid: DrupalTaxonomy_term__rejContent_translation_uidFilterInput): DrupalTaxonomy_term__rej
  allDrupalTaxonomyTermRej(filter: DrupalTaxonomy_term__rejFilterInput, sort: [DrupalTaxonomy_term__rejSortInput], skip: Int, limit: Int): DrupalTaxonomy_term__rejConnection!
  drupalTaxonomyTermNoui(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__tid: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, description: DrupalTaxonomy_term__nouiDescriptionFilterInput, weight: IntQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, content_translation_created: DateQueryOperatorInput, relationships: DrupalTaxonomy_term__nouiRelationshipsFilterInput, vid: DrupalTaxonomy_term__nouiVidFilterInput, content_translation_uid: DrupalTaxonomy_term__nouiContent_translation_uidFilterInput): DrupalTaxonomy_term__noui
  allDrupalTaxonomyTermNoui(filter: DrupalTaxonomy_term__nouiFilterInput, sort: [DrupalTaxonomy_term__nouiSortInput], skip: Int, limit: Int): DrupalTaxonomy_term__nouiConnection!
  drupalTaxonomyTermChest(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__tid: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, description: DrupalTaxonomy_term__chestDescriptionFilterInput, weight: IntQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, content_translation_created: DateQueryOperatorInput, relationships: DrupalTaxonomy_term__chestRelationshipsFilterInput, vid: DrupalTaxonomy_term__chestVidFilterInput, content_translation_uid: DrupalTaxonomy_term__chestContent_translation_uidFilterInput): DrupalTaxonomy_term__chest
  allDrupalTaxonomyTermChest(filter: DrupalTaxonomy_term__chestFilterInput, sort: [DrupalTaxonomy_term__chestSortInput], skip: Int, limit: Int): DrupalTaxonomy_term__chestConnection!
  drupalTaxonomyTermDevup(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__tid: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, description: DrupalTaxonomy_term__devupDescriptionFilterInput, weight: IntQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, content_translation_created: DateQueryOperatorInput, relationships: DrupalTaxonomy_term__devupRelationshipsFilterInput, vid: DrupalTaxonomy_term__devupVidFilterInput, content_translation_uid: DrupalTaxonomy_term__devupContent_translation_uidFilterInput): DrupalTaxonomy_term__devup
  allDrupalTaxonomyTermDevup(filter: DrupalTaxonomy_term__devupFilterInput, sort: [DrupalTaxonomy_term__devupSortInput], skip: Int, limit: Int): DrupalTaxonomy_term__devupConnection!
  drupalTaxonomyTermTestingTaxonomy(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__tid: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, description: DrupalTaxonomy_term__testing_taxonomyDescriptionFilterInput, weight: IntQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, content_translation_created: DateQueryOperatorInput, relationships: DrupalTaxonomy_term__testing_taxonomyRelationshipsFilterInput, vid: DrupalTaxonomy_term__testing_taxonomyVidFilterInput, content_translation_uid: DrupalTaxonomy_term__testing_taxonomyContent_translation_uidFilterInput): DrupalTaxonomy_term__testing_taxonomy
  allDrupalTaxonomyTermTestingTaxonomy(filter: DrupalTaxonomy_term__testing_taxonomyFilterInput, sort: [DrupalTaxonomy_term__testing_taxonomySortInput], skip: Int, limit: Int): DrupalTaxonomy_term__testing_taxonomyConnection!
  drupalTaxonomyTermCishuswalus(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__tid: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, description: DrupalTaxonomy_term__cishuswalusDescriptionFilterInput, weight: IntQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, content_translation_created: DateQueryOperatorInput, relationships: DrupalTaxonomy_term__cishuswalusRelationshipsFilterInput, vid: DrupalTaxonomy_term__cishuswalusVidFilterInput, content_translation_uid: DrupalTaxonomy_term__cishuswalusContent_translation_uidFilterInput): DrupalTaxonomy_term__cishuswalus
  allDrupalTaxonomyTermCishuswalus(filter: DrupalTaxonomy_term__cishuswalusFilterInput, sort: [DrupalTaxonomy_term__cishuswalusSortInput], skip: Int, limit: Int): DrupalTaxonomy_term__cishuswalusConnection!
  drupalTaxonomyTermTi(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__tid: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, description: DrupalTaxonomy_term__tiDescriptionFilterInput, weight: IntQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, content_translation_created: DateQueryOperatorInput, relationships: DrupalTaxonomy_term__tiRelationshipsFilterInput, vid: DrupalTaxonomy_term__tiVidFilterInput, content_translation_uid: DrupalTaxonomy_term__tiContent_translation_uidFilterInput): DrupalTaxonomy_term__ti
  allDrupalTaxonomyTermTi(filter: DrupalTaxonomy_term__tiFilterInput, sort: [DrupalTaxonomy_term__tiSortInput], skip: Int, limit: Int): DrupalTaxonomy_term__tiConnection!
  drupalTaxonomyTermHiwrewru(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__tid: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, description: DrupalTaxonomy_term__hiwrewruDescriptionFilterInput, weight: IntQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, content_translation_created: DateQueryOperatorInput, relationships: DrupalTaxonomy_term__hiwrewruRelationshipsFilterInput, vid: DrupalTaxonomy_term__hiwrewruVidFilterInput, content_translation_uid: DrupalTaxonomy_term__hiwrewruContent_translation_uidFilterInput): DrupalTaxonomy_term__hiwrewru
  allDrupalTaxonomyTermHiwrewru(filter: DrupalTaxonomy_term__hiwrewruFilterInput, sort: [DrupalTaxonomy_term__hiwrewruSortInput], skip: Int, limit: Int): DrupalTaxonomy_term__hiwrewruConnection!
  drupalTaxonomyTermUutr(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__tid: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, description: DrupalTaxonomy_term__uutrDescriptionFilterInput, weight: IntQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, content_translation_created: DateQueryOperatorInput, relationships: DrupalTaxonomy_term__uutrRelationshipsFilterInput, vid: DrupalTaxonomy_term__uutrVidFilterInput, content_translation_uid: DrupalTaxonomy_term__uutrContent_translation_uidFilterInput): DrupalTaxonomy_term__uutr
  allDrupalTaxonomyTermUutr(filter: DrupalTaxonomy_term__uutrFilterInput, sort: [DrupalTaxonomy_term__uutrSortInput], skip: Int, limit: Int): DrupalTaxonomy_term__uutrConnection!
  drupalTaxonomyTermDrouawipas(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__tid: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, description: DrupalTaxonomy_term__drouawipasDescriptionFilterInput, weight: IntQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, content_translation_created: DateQueryOperatorInput, relationships: DrupalTaxonomy_term__drouawipasRelationshipsFilterInput, vid: DrupalTaxonomy_term__drouawipasVidFilterInput, content_translation_uid: DrupalTaxonomy_term__drouawipasContent_translation_uidFilterInput): DrupalTaxonomy_term__drouawipas
  allDrupalTaxonomyTermDrouawipas(filter: DrupalTaxonomy_term__drouawipasFilterInput, sort: [DrupalTaxonomy_term__drouawipasSortInput], skip: Int, limit: Int): DrupalTaxonomy_term__drouawipasConnection!
  drupalTaxonomyTermShitabreko(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__tid: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, description: DrupalTaxonomy_term__shitabrekoDescriptionFilterInput, weight: IntQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, content_translation_created: DateQueryOperatorInput, relationships: DrupalTaxonomy_term__shitabrekoRelationshipsFilterInput, vid: DrupalTaxonomy_term__shitabrekoVidFilterInput, content_translation_uid: DrupalTaxonomy_term__shitabrekoContent_translation_uidFilterInput): DrupalTaxonomy_term__shitabreko
  allDrupalTaxonomyTermShitabreko(filter: DrupalTaxonomy_term__shitabrekoFilterInput, sort: [DrupalTaxonomy_term__shitabrekoSortInput], skip: Int, limit: Int): DrupalTaxonomy_term__shitabrekoConnection!
  drupalTaxonomyTermTri(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__tid: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, description: DrupalTaxonomy_term__triDescriptionFilterInput, weight: IntQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, content_translation_created: DateQueryOperatorInput, relationships: DrupalTaxonomy_term__triRelationshipsFilterInput, vid: DrupalTaxonomy_term__triVidFilterInput, content_translation_uid: DrupalTaxonomy_term__triContent_translation_uidFilterInput): DrupalTaxonomy_term__tri
  allDrupalTaxonomyTermTri(filter: DrupalTaxonomy_term__triFilterInput, sort: [DrupalTaxonomy_term__triSortInput], skip: Int, limit: Int): DrupalTaxonomy_term__triConnection!
  drupalTaxonomyTermStu(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__tid: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, description: DrupalTaxonomy_term__stuDescriptionFilterInput, weight: IntQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, content_translation_created: DateQueryOperatorInput, relationships: DrupalTaxonomy_term__stuRelationshipsFilterInput, vid: DrupalTaxonomy_term__stuVidFilterInput, content_translation_uid: DrupalTaxonomy_term__stuContent_translation_uidFilterInput): DrupalTaxonomy_term__stu
  allDrupalTaxonomyTermStu(filter: DrupalTaxonomy_term__stuFilterInput, sort: [DrupalTaxonomy_term__stuSortInput], skip: Int, limit: Int): DrupalTaxonomy_term__stuConnection!
  drupalTaxonomyTermVaswo(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__tid: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, description: DrupalTaxonomy_term__vaswoDescriptionFilterInput, weight: IntQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, content_translation_created: DateQueryOperatorInput, relationships: DrupalTaxonomy_term__vaswoRelationshipsFilterInput, vid: DrupalTaxonomy_term__vaswoVidFilterInput, content_translation_uid: DrupalTaxonomy_term__vaswoContent_translation_uidFilterInput): DrupalTaxonomy_term__vaswo
  allDrupalTaxonomyTermVaswo(filter: DrupalTaxonomy_term__vaswoFilterInput, sort: [DrupalTaxonomy_term__vaswoSortInput], skip: Int, limit: Int): DrupalTaxonomy_term__vaswoConnection!
  drupalTaxonomyTermLomolaf(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__tid: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, description: DrupalTaxonomy_term__lomolafDescriptionFilterInput, weight: IntQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, content_translation_created: DateQueryOperatorInput, relationships: DrupalTaxonomy_term__lomolafRelationshipsFilterInput, vid: DrupalTaxonomy_term__lomolafVidFilterInput, content_translation_uid: DrupalTaxonomy_term__lomolafContent_translation_uidFilterInput): DrupalTaxonomy_term__lomolaf
  allDrupalTaxonomyTermLomolaf(filter: DrupalTaxonomy_term__lomolafFilterInput, sort: [DrupalTaxonomy_term__lomolafSortInput], skip: Int, limit: Int): DrupalTaxonomy_term__lomolafConnection!
  drupalTaxonomyTermClas(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__tid: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, description: DrupalTaxonomy_term__clasDescriptionFilterInput, weight: IntQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, content_translation_created: DateQueryOperatorInput, relationships: DrupalTaxonomy_term__clasRelationshipsFilterInput, vid: DrupalTaxonomy_term__clasVidFilterInput, content_translation_uid: DrupalTaxonomy_term__clasContent_translation_uidFilterInput): DrupalTaxonomy_term__clas
  allDrupalTaxonomyTermClas(filter: DrupalTaxonomy_term__clasFilterInput, sort: [DrupalTaxonomy_term__clasSortInput], skip: Int, limit: Int): DrupalTaxonomy_term__clasConnection!
  drupalTaxonomyTermTraw(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__tid: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, description: DrupalTaxonomy_term__trawDescriptionFilterInput, weight: IntQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, content_translation_created: DateQueryOperatorInput, relationships: DrupalTaxonomy_term__trawRelationshipsFilterInput, vid: DrupalTaxonomy_term__trawVidFilterInput, content_translation_uid: DrupalTaxonomy_term__trawContent_translation_uidFilterInput): DrupalTaxonomy_term__traw
  allDrupalTaxonomyTermTraw(filter: DrupalTaxonomy_term__trawFilterInput, sort: [DrupalTaxonomy_term__trawSortInput], skip: Int, limit: Int): DrupalTaxonomy_term__trawConnection!
  drupalTaxonomyTermUasufrotru(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__tid: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, description: DrupalTaxonomy_term__uasufrotruDescriptionFilterInput, weight: IntQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, content_translation_created: DateQueryOperatorInput, relationships: DrupalTaxonomy_term__uasufrotruRelationshipsFilterInput, vid: DrupalTaxonomy_term__uasufrotruVidFilterInput, content_translation_uid: DrupalTaxonomy_term__uasufrotruContent_translation_uidFilterInput): DrupalTaxonomy_term__uasufrotru
  allDrupalTaxonomyTermUasufrotru(filter: DrupalTaxonomy_term__uasufrotruFilterInput, sort: [DrupalTaxonomy_term__uasufrotruSortInput], skip: Int, limit: Int): DrupalTaxonomy_term__uasufrotruConnection!
  drupalTaxonomyTermUiprawrunati(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__tid: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, description: DrupalTaxonomy_term__uiprawrunatiDescriptionFilterInput, weight: IntQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, content_translation_created: DateQueryOperatorInput, relationships: DrupalTaxonomy_term__uiprawrunatiRelationshipsFilterInput, vid: DrupalTaxonomy_term__uiprawrunatiVidFilterInput, content_translation_uid: DrupalTaxonomy_term__uiprawrunatiContent_translation_uidFilterInput): DrupalTaxonomy_term__uiprawrunati
  allDrupalTaxonomyTermUiprawrunati(filter: DrupalTaxonomy_term__uiprawrunatiFilterInput, sort: [DrupalTaxonomy_term__uiprawrunatiSortInput], skip: Int, limit: Int): DrupalTaxonomy_term__uiprawrunatiConnection!
  drupalTaxonomyTermSlochat(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__tid: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, description: DrupalTaxonomy_term__slochatDescriptionFilterInput, weight: IntQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, content_translation_created: DateQueryOperatorInput, relationships: DrupalTaxonomy_term__slochatRelationshipsFilterInput, vid: DrupalTaxonomy_term__slochatVidFilterInput, content_translation_uid: DrupalTaxonomy_term__slochatContent_translation_uidFilterInput): DrupalTaxonomy_term__slochat
  allDrupalTaxonomyTermSlochat(filter: DrupalTaxonomy_term__slochatFilterInput, sort: [DrupalTaxonomy_term__slochatSortInput], skip: Int, limit: Int): DrupalTaxonomy_term__slochatConnection!
  drupalTaxonomyTermCl(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__tid: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, description: DrupalTaxonomy_term__clDescriptionFilterInput, weight: IntQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, content_translation_created: DateQueryOperatorInput, relationships: DrupalTaxonomy_term__clRelationshipsFilterInput, vid: DrupalTaxonomy_term__clVidFilterInput, content_translation_uid: DrupalTaxonomy_term__clContent_translation_uidFilterInput): DrupalTaxonomy_term__cl
  allDrupalTaxonomyTermCl(filter: DrupalTaxonomy_term__clFilterInput, sort: [DrupalTaxonomy_term__clSortInput], skip: Int, limit: Int): DrupalTaxonomy_term__clConnection!
  drupalTaxonomyTermGestep(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__tid: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, description: DrupalTaxonomy_term__gestepDescriptionFilterInput, weight: IntQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, content_translation_created: DateQueryOperatorInput, relationships: DrupalTaxonomy_term__gestepRelationshipsFilterInput, vid: DrupalTaxonomy_term__gestepVidFilterInput, content_translation_uid: DrupalTaxonomy_term__gestepContent_translation_uidFilterInput): DrupalTaxonomy_term__gestep
  allDrupalTaxonomyTermGestep(filter: DrupalTaxonomy_term__gestepFilterInput, sort: [DrupalTaxonomy_term__gestepSortInput], skip: Int, limit: Int): DrupalTaxonomy_term__gestepConnection!
  drupalTaxonomyTermBelatub(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__tid: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, description: DrupalTaxonomy_term__belatubDescriptionFilterInput, weight: IntQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, content_translation_created: DateQueryOperatorInput, relationships: DrupalTaxonomy_term__belatubRelationshipsFilterInput, vid: DrupalTaxonomy_term__belatubVidFilterInput, content_translation_uid: DrupalTaxonomy_term__belatubContent_translation_uidFilterInput): DrupalTaxonomy_term__belatub
  allDrupalTaxonomyTermBelatub(filter: DrupalTaxonomy_term__belatubFilterInput, sort: [DrupalTaxonomy_term__belatubSortInput], skip: Int, limit: Int): DrupalTaxonomy_term__belatubConnection!
  drupalNodePage(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__nid: IntQueryOperatorInput, drupal_internal__vid: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_timestamp: DateQueryOperatorInput, status: BooleanQueryOperatorInput, title: StringQueryOperatorInput, created: DateQueryOperatorInput, changed: DateQueryOperatorInput, promote: BooleanQueryOperatorInput, sticky: BooleanQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, body: DrupalNode__pageBodyFilterInput, field_title: DrupalNode__pageField_titleFilterInput, relationships: DrupalNode__pageRelationshipsFilterInput, node_type: DrupalNode__pageNode_typeFilterInput, revision_uid: DrupalNode__pageRevision_uidFilterInput, uid: DrupalNode__pageUidFilterInput): DrupalNode__page
  allDrupalNodePage(filter: DrupalNode__pageFilterInput, sort: [DrupalNode__pageSortInput], skip: Int, limit: Int): DrupalNode__pageConnection!
  drupalNodeTestPage(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__nid: IntQueryOperatorInput, drupal_internal__vid: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_timestamp: DateQueryOperatorInput, status: BooleanQueryOperatorInput, title: StringQueryOperatorInput, created: DateQueryOperatorInput, changed: DateQueryOperatorInput, promote: BooleanQueryOperatorInput, sticky: BooleanQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, body: DrupalNode__test_pageBodyFilterInput, field_test_field: StringQueryOperatorInput, relationships: DrupalNode__test_pageRelationshipsFilterInput, node_type: DrupalNode__test_pageNode_typeFilterInput, revision_uid: DrupalNode__test_pageRevision_uidFilterInput, uid: DrupalNode__test_pageUidFilterInput, field_reference_list: DrupalNode__test_pageField_reference_listFilterListInput): DrupalNode__test_page
  allDrupalNodeTestPage(filter: DrupalNode__test_pageFilterInput, sort: [DrupalNode__test_pageSortInput], skip: Int, limit: Int): DrupalNode__test_pageConnection!
  drupalNodeProductPage(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__nid: IntQueryOperatorInput, drupal_internal__vid: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_timestamp: DateQueryOperatorInput, status: BooleanQueryOperatorInput, title: StringQueryOperatorInput, created: DateQueryOperatorInput, changed: DateQueryOperatorInput, promote: BooleanQueryOperatorInput, sticky: BooleanQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, path: DrupalNode__product_pagePathFilterInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, field_contentstack_id: StringQueryOperatorInput, field_description: StringQueryOperatorInput, relationships: DrupalNode__product_pageRelationshipsFilterInput, node_type: DrupalNode__product_pageNode_typeFilterInput, revision_uid: DrupalNode__product_pageRevision_uidFilterInput, uid: DrupalNode__product_pageUidFilterInput): DrupalNode__product_page
  allDrupalNodeProductPage(filter: DrupalNode__product_pageFilterInput, sort: [DrupalNode__product_pageSortInput], skip: Int, limit: Int): DrupalNode__product_pageConnection!
  drupalMediaImage(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__mid: IntQueryOperatorInput, drupal_internal__vid: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, created: DateQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, path: DrupalMedia__imagePathFilterInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, relationships: DrupalMedia__imageRelationshipsFilterInput, bundle: DrupalMedia__imageBundleFilterInput, uid: DrupalMedia__imageUidFilterInput, thumbnail: DrupalMedia__imageThumbnailFilterInput, field_media_image: DrupalMedia__imageField_media_imageFilterInput): DrupalMedia__image
  allDrupalMediaImage(filter: DrupalMedia__imageFilterInput, sort: [DrupalMedia__imageSortInput], skip: Int, limit: Int): DrupalMedia__imageConnection!
  drupalMediaTypeMediaType(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, label: StringQueryOperatorInput, relationships: DrupalMedia_type__media_typeRelationshipsFilterInput): DrupalMedia_type__media_type
  allDrupalMediaTypeMediaType(filter: DrupalMedia_type__media_typeFilterInput, sort: [DrupalMedia_type__media_typeSortInput], skip: Int, limit: Int): DrupalMedia_type__media_typeConnection!
  drupalMediaDocument(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__mid: IntQueryOperatorInput, drupal_internal__vid: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, created: DateQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, relationships: DrupalMedia__documentRelationshipsFilterInput, bundle: DrupalMedia__documentBundleFilterInput, uid: DrupalMedia__documentUidFilterInput, thumbnail: DrupalMedia__documentThumbnailFilterInput, field_media_document: DrupalMedia__documentField_media_documentFilterInput): DrupalMedia__document
  allDrupalMediaDocument(filter: DrupalMedia__documentFilterInput, sort: [DrupalMedia__documentSortInput], skip: Int, limit: Int): DrupalMedia__documentConnection!
  drupalMediaVideo(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__mid: IntQueryOperatorInput, drupal_internal__vid: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, created: DateQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, relationships: DrupalMedia__videoRelationshipsFilterInput, bundle: DrupalMedia__videoBundleFilterInput, uid: DrupalMedia__videoUidFilterInput, thumbnail: DrupalMedia__videoThumbnailFilterInput, field_media_video_file: DrupalMedia__videoField_media_video_fileFilterInput): DrupalMedia__video
  allDrupalMediaVideo(filter: DrupalMedia__videoFilterInput, sort: [DrupalMedia__videoSortInput], skip: Int, limit: Int): DrupalMedia__videoConnection!
  drupalMediaRemoteVideo(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__mid: IntQueryOperatorInput, drupal_internal__vid: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, created: DateQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, field_media_oembed_video: StringQueryOperatorInput, relationships: DrupalMedia__remote_videoRelationshipsFilterInput, bundle: DrupalMedia__remote_videoBundleFilterInput, uid: DrupalMedia__remote_videoUidFilterInput, thumbnail: DrupalMedia__remote_videoThumbnailFilterInput): DrupalMedia__remote_video
  allDrupalMediaRemoteVideo(filter: DrupalMedia__remote_videoFilterInput, sort: [DrupalMedia__remote_videoSortInput], skip: Int, limit: Int): DrupalMedia__remote_videoConnection!
  drupalMediaAudio(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__mid: IntQueryOperatorInput, drupal_internal__vid: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, status: BooleanQueryOperatorInput, name: StringQueryOperatorInput, created: DateQueryOperatorInput, changed: DateQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, relationships: DrupalMedia__audioRelationshipsFilterInput, bundle: DrupalMedia__audioBundleFilterInput, uid: DrupalMedia__audioUidFilterInput, thumbnail: DrupalMedia__audioThumbnailFilterInput, field_media_audio_file: DrupalMedia__audioField_media_audio_fileFilterInput): DrupalMedia__audio
  allDrupalMediaAudio(filter: DrupalMedia__audioFilterInput, sort: [DrupalMedia__audioSortInput], skip: Int, limit: Int): DrupalMedia__audioConnection!
  drupalBlockContentBasic(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__id: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, revision_created: DateQueryOperatorInput, revision_log: StringQueryOperatorInput, status: BooleanQueryOperatorInput, info: StringQueryOperatorInput, changed: DateQueryOperatorInput, reusable: BooleanQueryOperatorInput, default_langcode: BooleanQueryOperatorInput, revision_translation_affected: BooleanQueryOperatorInput, content_translation_source: StringQueryOperatorInput, content_translation_outdated: BooleanQueryOperatorInput, content_translation_created: DateQueryOperatorInput, relationships: DrupalBlock_content__basicRelationshipsFilterInput, block_content_type: DrupalBlock_content__basicBlock_content_typeFilterInput, content_translation_uid: DrupalBlock_content__basicContent_translation_uidFilterInput): DrupalBlock_content__basic
  allDrupalBlockContentBasic(filter: DrupalBlock_content__basicFilterInput, sort: [DrupalBlock_content__basicSortInput], skip: Int, limit: Int): DrupalBlock_content__basicConnection!
  drupalBlockContentTypeBlockContentType(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, langcode: StringQueryOperatorInput, status: BooleanQueryOperatorInput, drupal_internal__id: StringQueryOperatorInput, label: StringQueryOperatorInput, revision: IntQueryOperatorInput, description: StringQueryOperatorInput, relationships: DrupalBlock_content_type__block_content_typeRelationshipsFilterInput): DrupalBlock_content_type__block_content_type
  allDrupalBlockContentTypeBlockContentType(filter: DrupalBlock_content_type__block_content_typeFilterInput, sort: [DrupalBlock_content_type__block_content_typeSortInput], skip: Int, limit: Int): DrupalBlock_content_type__block_content_typeConnection!
  drupalSearchPageSearchPage(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, langcode: StringQueryOperatorInput, status: BooleanQueryOperatorInput, dependencies: DrupalSearch_page__search_pageDependenciesFilterInput, drupal_internal__id: StringQueryOperatorInput, label: StringQueryOperatorInput, path: StringQueryOperatorInput, weight: IntQueryOperatorInput, plugin: StringQueryOperatorInput): DrupalSearch_page__search_page
  allDrupalSearchPageSearchPage(filter: DrupalSearch_page__search_pageFilterInput, sort: [DrupalSearch_page__search_pageSortInput], skip: Int, limit: Int): DrupalSearch_page__search_pageConnection!
  drupalPathAliasPathAlias(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__id: IntQueryOperatorInput, drupal_internal__revision_id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, path: StringQueryOperatorInput, alias: StringQueryOperatorInput, status: BooleanQueryOperatorInput): DrupalPath_alias__path_alias
  allDrupalPathAliasPathAlias(filter: DrupalPath_alias__path_aliasFilterInput, sort: [DrupalPath_alias__path_aliasSortInput], skip: Int, limit: Int): DrupalPath_alias__path_aliasConnection!
  drupalParagraphsTypeParagraphsType(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, label: StringQueryOperatorInput): DrupalParagraphs_type__paragraphs_type
  allDrupalParagraphsTypeParagraphsType(filter: DrupalParagraphs_type__paragraphs_typeFilterInput, sort: [DrupalParagraphs_type__paragraphs_typeSortInput], skip: Int, limit: Int): DrupalParagraphs_type__paragraphs_typeConnection!
  drupalMenuMenu(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, label: StringQueryOperatorInput): DrupalMenu__menu
  allDrupalMenuMenu(filter: DrupalMenu__menuFilterInput, sort: [DrupalMenu__menuSortInput], skip: Int, limit: Int): DrupalMenu__menuConnection!
  drupalGatsbyLogEntityGatsbyLogEntity(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, drupal_internal__id: IntQueryOperatorInput, langcode: StringQueryOperatorInput, entity_uuid: StringQueryOperatorInput, title: StringQueryOperatorInput, entity: StringQueryOperatorInput, bundle: StringQueryOperatorInput, action: StringQueryOperatorInput, published: BooleanQueryOperatorInput, preview: BooleanQueryOperatorInput, json: StringQueryOperatorInput, created: DateQueryOperatorInput): DrupalGatsby_log_entity__gatsby_log_entity
  allDrupalGatsbyLogEntityGatsbyLogEntity(filter: DrupalGatsby_log_entity__gatsby_log_entityFilterInput, sort: [DrupalGatsby_log_entity__gatsby_log_entitySortInput], skip: Int, limit: Int): DrupalGatsby_log_entity__gatsby_log_entityConnection!
  drupalDateFormatDateFormat(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, label: StringQueryOperatorInput): DrupalDate_format__date_format
  allDrupalDateFormatDateFormat(filter: DrupalDate_format__date_formatFilterInput, sort: [DrupalDate_format__date_formatSortInput], skip: Int, limit: Int): DrupalDate_format__date_formatConnection!
  drupalBaseFieldOverrideBaseFieldOverride(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, drupal_id: StringQueryOperatorInput, langcode: StringQueryOperatorInput, status: BooleanQueryOperatorInput, dependencies: DrupalBase_field_override__base_field_overrideDependenciesFilterInput, drupal_internal__id: StringQueryOperatorInput, field_name: StringQueryOperatorInput, entity_type: StringQueryOperatorInput, bundle: StringQueryOperatorInput, label: StringQueryOperatorInput, description: StringQueryOperatorInput, required: BooleanQueryOperatorInput, translatable: BooleanQueryOperatorInput, default_value: DrupalBase_field_override__base_field_overrideDefault_valueFilterListInput, default_value_callback: StringQueryOperatorInput, settings: DrupalBase_field_override__base_field_overrideSettingsFilterInput, field_type: StringQueryOperatorInput): DrupalBase_field_override__base_field_override
  allDrupalBaseFieldOverrideBaseFieldOverride(filter: DrupalBase_field_override__base_field_overrideFilterInput, sort: [DrupalBase_field_override__base_field_overrideSortInput], skip: Int, limit: Int): DrupalBase_field_override__base_field_overrideConnection!
  contentstackProductPage(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, uid: StringQueryOperatorInput, _version: IntQueryOperatorInput, locale: StringQueryOperatorInput, created_at: DateQueryOperatorInput, created_by: StringQueryOperatorInput, image: Contentstack_assetsFilterInput, price: StringQueryOperatorInput, sku: StringQueryOperatorInput, title: StringQueryOperatorInput, updated_at: DateQueryOperatorInput, updated_by: StringQueryOperatorInput, publish_details: Contentstack_product_pagePublish_detailsFilterInput, cslp__meta: JSONQueryOperatorInput): Contentstack_product_page
  allContentstackProductPage(filter: Contentstack_product_pageFilterInput, sort: [Contentstack_product_pageSortInput], skip: Int, limit: Int): Contentstack_product_pageConnection!
  contentstackAssets(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, _version: IntQueryOperatorInput, is_dir: BooleanQueryOperatorInput, uid: StringQueryOperatorInput, asset_id: StringQueryOperatorInput, content_type: StringQueryOperatorInput, created_at: DateQueryOperatorInput, created_by: StringQueryOperatorInput, dimension: Contentstack_assetsDimensionFilterInput, file_size: StringQueryOperatorInput, filename: StringQueryOperatorInput, parent_uid: StringQueryOperatorInput, title: StringQueryOperatorInput, updated_at: DateQueryOperatorInput, updated_by: StringQueryOperatorInput, publish_details: Contentstack_assetsPublish_detailsFilterInput, url: StringQueryOperatorInput, description: StringQueryOperatorInput): Contentstack_assets
  allContentstackAssets(filter: Contentstack_assetsFilterInput, sort: [Contentstack_assetsSortInput], skip: Int, limit: Int): Contentstack_assetsConnection!
  contentstackPage(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, _version: IntQueryOperatorInput, locale: StringQueryOperatorInput, uid: StringQueryOperatorInput, created_at: DateQueryOperatorInput, created_by: StringQueryOperatorInput, page_components: Contentstack_pagePage_componentsFilterListInput, seo: Contentstack_pageSeoFilterInput, title: StringQueryOperatorInput, updated_at: DateQueryOperatorInput, updated_by: StringQueryOperatorInput, url: StringQueryOperatorInput, publish_details: Contentstack_pagePublish_detailsFilterInput, cslp__meta: JSONQueryOperatorInput): Contentstack_page
  allContentstackPage(filter: Contentstack_pageFilterInput, sort: [Contentstack_pageSortInput], skip: Int, limit: Int): Contentstack_pageConnection!
  contentstackBlogPost(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, _version: IntQueryOperatorInput, locale: StringQueryOperatorInput, uid: StringQueryOperatorInput, author: Contentstack_authorFilterListInput, body: Contentstack_blog_postBodyFilterInput, created_at: DateQueryOperatorInput, created_by: StringQueryOperatorInput, date: DateQueryOperatorInput, featured_image: Contentstack_assetsFilterInput, is_archived: BooleanQueryOperatorInput, related_post: Contentstack_blog_postFilterListInput, seo: Contentstack_blog_postSeoFilterInput, title: StringQueryOperatorInput, updated_at: DateQueryOperatorInput, updated_by: StringQueryOperatorInput, url: StringQueryOperatorInput, publish_details: Contentstack_blog_postPublish_detailsFilterInput, cslp__meta: JSONQueryOperatorInput): Contentstack_blog_post
  allContentstackBlogPost(filter: Contentstack_blog_postFilterInput, sort: [Contentstack_blog_postSortInput], skip: Int, limit: Int): Contentstack_blog_postConnection!
  contentstackAuthor(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, _version: IntQueryOperatorInput, locale: StringQueryOperatorInput, uid: StringQueryOperatorInput, bio: StringQueryOperatorInput, created_at: DateQueryOperatorInput, created_by: StringQueryOperatorInput, picture: Contentstack_assetsFilterInput, title: StringQueryOperatorInput, updated_at: DateQueryOperatorInput, updated_by: StringQueryOperatorInput, publish_details: Contentstack_authorPublish_detailsFilterInput, cslp__meta: JSONQueryOperatorInput): Contentstack_author
  allContentstackAuthor(filter: Contentstack_authorFilterInput, sort: [Contentstack_authorSortInput], skip: Int, limit: Int): Contentstack_authorConnection!
  contentstackHeader(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, _version: IntQueryOperatorInput, locale: StringQueryOperatorInput, uid: StringQueryOperatorInput, created_at: DateQueryOperatorInput, created_by: StringQueryOperatorInput, logo: Contentstack_assetsFilterInput, navigation_menu: Contentstack_headerNavigation_menuFilterListInput, notification_bar: Contentstack_headerNotification_barFilterInput, title: StringQueryOperatorInput, updated_at: DateQueryOperatorInput, updated_by: StringQueryOperatorInput, publish_details: Contentstack_headerPublish_detailsFilterInput, cslp__meta: JSONQueryOperatorInput): Contentstack_header
  allContentstackHeader(filter: Contentstack_headerFilterInput, sort: [Contentstack_headerSortInput], skip: Int, limit: Int): Contentstack_headerConnection!
  contentstackFooter(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, _version: IntQueryOperatorInput, locale: StringQueryOperatorInput, uid: StringQueryOperatorInput, copyright: Contentstack_footerCopyrightFilterInput, created_at: DateQueryOperatorInput, created_by: StringQueryOperatorInput, logo: Contentstack_assetsFilterInput, navigation: Contentstack_footerNavigationFilterInput, social: Contentstack_footerSocialFilterInput, title: StringQueryOperatorInput, updated_at: DateQueryOperatorInput, updated_by: StringQueryOperatorInput, publish_details: Contentstack_footerPublish_detailsFilterInput, cslp__meta: JSONQueryOperatorInput): Contentstack_footer
  allContentstackFooter(filter: Contentstack_footerFilterInput, sort: [Contentstack_footerSortInput], skip: Int, limit: Int): Contentstack_footerConnection!
  contentstackContentTypes(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, title: StringQueryOperatorInput, uid: StringQueryOperatorInput, schema: ContentstackContentTypesSchemaFilterListInput, options: ContentstackContentTypesOptionsFilterInput, DEFAULT_ACL: ContentstackContentTypesDEFAULT_ACLFilterInput, SYS_ACL: ContentstackContentTypesSYS_ACLFilterInput, created_at: DateQueryOperatorInput, updated_at: DateQueryOperatorInput, inbuilt_class: BooleanQueryOperatorInput, description: StringQueryOperatorInput, abilities: ContentstackContentTypesAbilitiesFilterInput, maintain_revisions: BooleanQueryOperatorInput, _version: IntQueryOperatorInput): ContentstackContentTypes
  allContentstackContentTypes(filter: ContentstackContentTypesFilterInput, sort: [ContentstackContentTypesSortInput], skip: Int, limit: Int): ContentstackContentTypesConnection!
  contentfulContentType(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, name: StringQueryOperatorInput, displayField: StringQueryOperatorInput, description: StringQueryOperatorInput, sys: ContentfulContentTypeSysFilterInput): ContentfulContentType
  allContentfulContentType(filter: ContentfulContentTypeFilterInput, sort: [ContentfulContentTypeSortInput], skip: Int, limit: Int): ContentfulContentTypeConnection!
}

""""""
interface ContentfulEntry implements Node {
  contentful_id: String!
  id: ID!
  node_locale: String!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

"""Node Interface"""
interface Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

""""""
type Internal {
  content: String
  contentDigest: String!
  description: String
  fieldOwners: [String]
  ignoreType: Boolean
  mediaType: String
  owner: String!
  type: String!
  contentFilePath: String
}

""""""
input StringQueryOperatorInput {
  eq: String
  ne: String
  in: [String]
  nin: [String]
  regex: String
  glob: String
}

""""""
input NodeFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
}

""""""
input InternalFilterInput {
  content: StringQueryOperatorInput
  contentDigest: StringQueryOperatorInput
  description: StringQueryOperatorInput
  fieldOwners: StringQueryOperatorInput
  ignoreType: BooleanQueryOperatorInput
  mediaType: StringQueryOperatorInput
  owner: StringQueryOperatorInput
  type: StringQueryOperatorInput
  contentFilePath: StringQueryOperatorInput
}

""""""
input BooleanQueryOperatorInput {
  eq: Boolean
  ne: Boolean
  in: [Boolean]
  nin: [Boolean]
}

""""""
input NodeFilterListInput {
  elemMatch: NodeFilterInput
}

""""""
type ContentfulEntryConnection {
  totalCount: Int!
  edges: [ContentfulEntryEdge!]!
  nodes: [ContentfulEntry!]!
  pageInfo: PageInfo!
  distinct(field: ContentfulEntryFieldSelector!): [String!]!
  max(field: ContentfulEntryFieldSelector!): Float
  min(field: ContentfulEntryFieldSelector!): Float
  sum(field: ContentfulEntryFieldSelector!): Float
  group(skip: Int, limit: Int, field: ContentfulEntryFieldSelector!): [ContentfulEntryGroupConnection!]!
}

""""""
type ContentfulEntryEdge {
  next: ContentfulEntry
  node: ContentfulEntry!
  previous: ContentfulEntry
}

""""""
type PageInfo {
  currentPage: Int!
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  itemCount: Int!
  pageCount: Int!
  perPage: Int
  totalCount: Int!
}

""""""
input ContentfulEntryFieldSelector {
  contentful_id: FieldSelectorEnum
  id: FieldSelectorEnum
  node_locale: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
}

""""""
enum FieldSelectorEnum {
  SELECT
}

""""""
input NodeFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
}

""""""
input InternalFieldSelector {
  content: FieldSelectorEnum
  contentDigest: FieldSelectorEnum
  description: FieldSelectorEnum
  fieldOwners: FieldSelectorEnum
  ignoreType: FieldSelectorEnum
  mediaType: FieldSelectorEnum
  owner: FieldSelectorEnum
  type: FieldSelectorEnum
  contentFilePath: FieldSelectorEnum
}

""""""
type ContentfulEntryGroupConnection {
  totalCount: Int!
  edges: [ContentfulEntryEdge!]!
  nodes: [ContentfulEntry!]!
  pageInfo: PageInfo!
  distinct(field: ContentfulEntryFieldSelector!): [String!]!
  max(field: ContentfulEntryFieldSelector!): Float
  min(field: ContentfulEntryFieldSelector!): Float
  sum(field: ContentfulEntryFieldSelector!): Float
  group(skip: Int, limit: Int, field: ContentfulEntryFieldSelector!): [ContentfulEntryGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
input ContentfulEntryFilterInput {
  contentful_id: StringQueryOperatorInput
  id: StringQueryOperatorInput
  node_locale: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
}

""""""
input ContentfulEntrySortInput {
  contentful_id: SortOrderEnum
  id: SortOrderEnum
  node_locale: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
}

""""""
enum SortOrderEnum {
  ASC
  DESC
}

""""""
input NodeSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
}

""""""
input InternalSortInput {
  content: SortOrderEnum
  contentDigest: SortOrderEnum
  description: SortOrderEnum
  fieldOwners: SortOrderEnum
  ignoreType: SortOrderEnum
  mediaType: SortOrderEnum
  owner: SortOrderEnum
  type: SortOrderEnum
  contentFilePath: SortOrderEnum
}

""""""
type ContentfulAsset implements ContentfulReference & Node & RemoteFile {
  contentful_id: String!
  id: ID!
  spaceId: String
  createdAt(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  updatedAt(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  file: ContentfulAssetFile
  title: String
  description: String
  node_locale: String
  sys: ContentfulAssetSys
  url: String
  placeholderUrl: String
  mimeType: String!
  filename: String!
  width: Int
  height: Int
  size: Int
  parent: Node
  children: [Node!]!
  internal: Internal!
  filesize: Int
  publicUrl: String!
  resize(
    width: Int
    height: Int
    aspectRatio: Float
    fit: RemoteFileFit = COVER

    "\nThe image formats to generate. Valid values are AUTO (meaning the same format as the source image), JPG, PNG, WEBP and AVIF.\nThe default value is [AUTO, WEBP, AVIF], and you should rarely need to change this. Take care if you specify JPG or PNG when you do\nnot know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying\nboth PNG and JPG is not supported and will be ignored."
    format: RemoteFileFormat = AUTO
    cropFocus: [RemoteFileCropFocus]
    quality: Int = 75
  ): RemoteFileResize

  """
  Data used in the <GatsbyImage /> component. See https://gatsby.dev/img for more info.
  """
  gatsbyImage(
    "\nThe layout for the image.\nFIXED: A static image sized, that does not resize according to the screen width\nFULL_WIDTH: The image resizes to fit its container. Pass a \"sizes\" option if it isn't going to be the full width of the screen.\nCONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.\n"
    layout: RemoteFileLayout = CONSTRAINED

    "\nThe display width of the generated image for layout = FIXED, and the display width of the largest image for layout = CONSTRAINED.\nThe actual largest image resolution will be this value multiplied by the largest value in outputPixelDensities\nIgnored if layout = FLUID.\n"
    width: Int

    "\nIf set, the height of the generated image. If omitted, it is calculated from the supplied width, matching the aspect ratio of the source image."
    height: Int

    """Setting "placeholder" is not supported in Netlify Connect"""
    placeholder: RemoteFilePlaceholder = NONE @deprecated(reason: "Setting \"placeholder\" is not supported in Netlify Connect")

    "\nIf set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.\nIf neither width or height is provided, height will be set based on the intrinsic width of the source image.\n"
    aspectRatio: Float

    "\nThe image formats to generate. Valid values are AUTO (meaning the same format as the source image), JPG, PNG, WEBP and AVIF.\nThe default value is [AUTO, WEBP, AVIF], and you should rarely need to change this. Take care if you specify JPG or PNG when you do\nnot know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying\nboth PNG and JPG is not supported and will be ignored.\n"
    formats: [RemoteFileFormat!] = [AUTO, WEBP, AVIF]

    "\nA list of image pixel densities to generate for FIXED and CONSTRAINED images. You should rarely need to change this. It will never generate images larger than the source, and will always include a 1x image.\nDefault is [ 1, 2 ] for fixed images, meaning 1x, 2x, and [0.25, 0.5, 1, 2] for fluid. In this case, an image with a fluid layout and width = 400 would generate images at 100, 200, 400 and 800px wide.\n"
    outputPixelDensities: [Float] = [0.25, 0.5, 1, 2]

    "\nSpecifies the image widths to generate. You should rarely need to change this. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,\nbased on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].\nIt will never generate any images larger than the source.\n"
    breakpoints: [Int] = [750, 1080, 1366, 1920]

    "\nThe \"sizes\" property, passed to the img tag. This describes the display size of the image.\nThis does not affect the generated images, but is used by the browser to decide which images to download. You can leave this blank for fixed images, or if the responsive image\ncontainer will be the full width of the screen. In these cases we will generate an appropriate value.\n"
    sizes: String

    """
    Background color applied to the wrapper, or when "letterboxing" an image to another aspect ratio.
    """
    backgroundColor: String
    fit: RemoteFileFit = COVER
    cropFocus: [RemoteFileCropFocus]
    quality: Int = 75
  ): GatsbyImageData
}

""""""
interface ContentfulReference {
  contentful_id: String!
  id: ID!
}

"""Remote Interface"""
interface RemoteFile {
  id: ID!
  mimeType: String!
  filename: String!
  filesize: Int
  width: Int
  height: Int
  publicUrl: String!
  resize(
    width: Int
    height: Int
    aspectRatio: Float
    fit: RemoteFileFit = COVER

    "\nThe image formats to generate. Valid values are AUTO (meaning the same format as the source image), JPG, PNG, WEBP and AVIF.\nThe default value is [AUTO, WEBP, AVIF], and you should rarely need to change this. Take care if you specify JPG or PNG when you do\nnot know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying\nboth PNG and JPG is not supported and will be ignored."
    format: RemoteFileFormat = AUTO
    cropFocus: [RemoteFileCropFocus]
    quality: Int = 75
  ): RemoteFileResize

  """
  Data used in the <GatsbyImage /> component. See https://gatsby.dev/img for more info.
  """
  gatsbyImage(
    "\nThe layout for the image.\nFIXED: A static image sized, that does not resize according to the screen width\nFULL_WIDTH: The image resizes to fit its container. Pass a \"sizes\" option if it isn't going to be the full width of the screen.\nCONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.\n"
    layout: RemoteFileLayout = CONSTRAINED

    "\nThe display width of the generated image for layout = FIXED, and the display width of the largest image for layout = CONSTRAINED.\nThe actual largest image resolution will be this value multiplied by the largest value in outputPixelDensities\nIgnored if layout = FLUID.\n"
    width: Int

    "\nIf set, the height of the generated image. If omitted, it is calculated from the supplied width, matching the aspect ratio of the source image."
    height: Int

    """Setting "placeholder" is not supported in Netlify Connect"""
    placeholder: RemoteFilePlaceholder = NONE @deprecated(reason: "Setting \"placeholder\" is not supported in Netlify Connect")

    "\nIf set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.\nIf neither width or height is provided, height will be set based on the intrinsic width of the source image.\n"
    aspectRatio: Float

    "\nThe image formats to generate. Valid values are AUTO (meaning the same format as the source image), JPG, PNG, WEBP and AVIF.\nThe default value is [AUTO, WEBP, AVIF], and you should rarely need to change this. Take care if you specify JPG or PNG when you do\nnot know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying\nboth PNG and JPG is not supported and will be ignored.\n"
    formats: [RemoteFileFormat!] = [AUTO, WEBP, AVIF]

    "\nA list of image pixel densities to generate for FIXED and CONSTRAINED images. You should rarely need to change this. It will never generate images larger than the source, and will always include a 1x image.\nDefault is [ 1, 2 ] for fixed images, meaning 1x, 2x, and [0.25, 0.5, 1, 2] for fluid. In this case, an image with a fluid layout and width = 400 would generate images at 100, 200, 400 and 800px wide.\n"
    outputPixelDensities: [Float] = [0.25, 0.5, 1, 2]

    "\nSpecifies the image widths to generate. You should rarely need to change this. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,\nbased on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].\nIt will never generate any images larger than the source.\n"
    breakpoints: [Int] = [750, 1080, 1366, 1920]

    "\nThe \"sizes\" property, passed to the img tag. This describes the display size of the image.\nThis does not affect the generated images, but is used by the browser to decide which images to download. You can leave this blank for fixed images, or if the responsive image\ncontainer will be the full width of the screen. In these cases we will generate an appropriate value.\n"
    sizes: String

    """
    Background color applied to the wrapper, or when "letterboxing" an image to another aspect ratio.
    """
    backgroundColor: String
    fit: RemoteFileFit = COVER
    cropFocus: [RemoteFileCropFocus]
    quality: Int = 75
  ): GatsbyImageData
}

""""""
type RemoteFileResize {
  width: Int
  height: Int
  src: String
}

""""""
enum RemoteFileFit {
  COVER
  FILL
  OUTSIDE
  CONTAIN
}

""""""
enum RemoteFileFormat {
  AUTO
  JPG
  PNG
  WEBP
  AVIF
}

""""""
enum RemoteFileCropFocus {
  CENTER
  TOP
  RIGHT
  BOTTOM
  LEFT
  ENTROPY
  EDGES
  FACES
}

scalar GatsbyImageData

""""""
enum RemoteFileLayout {
  FIXED
  FULL_WIDTH
  CONSTRAINED
}

""""""
enum RemoteFilePlaceholder {
  DOMINANT_COLOR
  BLURRED
  TRACED_SVG
  NONE
}

"""
A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

""""""
type ContentfulAssetFile {
  url: String
  details: ContentfulAssetFileDetails
  fileName: String
  contentType: String
}

""""""
type ContentfulAssetFileDetails {
  size: Int
  image: ContentfulAssetFileDetailsImage
}

""""""
type ContentfulAssetFileDetailsImage {
  width: Int
  height: Int
}

""""""
type ContentfulAssetSys {
  type: String
  revision: Int
}

""""""
input GatsbyImageDataQueryOperatorInput {
  eq: GatsbyImageData
  ne: GatsbyImageData
  in: [GatsbyImageData]
  nin: [GatsbyImageData]
}

""""""
input DateQueryOperatorInput {
  eq: Date
  ne: Date
  gt: Date
  gte: Date
  lt: Date
  lte: Date
  in: [Date]
  nin: [Date]
}

""""""
input ContentfulAssetFileFilterInput {
  url: StringQueryOperatorInput
  details: ContentfulAssetFileDetailsFilterInput
  fileName: StringQueryOperatorInput
  contentType: StringQueryOperatorInput
}

""""""
input ContentfulAssetFileDetailsFilterInput {
  size: IntQueryOperatorInput
  image: ContentfulAssetFileDetailsImageFilterInput
}

""""""
input IntQueryOperatorInput {
  eq: Int
  ne: Int
  gt: Int
  gte: Int
  lt: Int
  lte: Int
  in: [Int]
  nin: [Int]
}

""""""
input ContentfulAssetFileDetailsImageFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

""""""
input ContentfulAssetSysFilterInput {
  type: StringQueryOperatorInput
  revision: IntQueryOperatorInput
}

""""""
input RemoteFileResizeFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  src: StringQueryOperatorInput
}

""""""
type ContentfulAssetConnection {
  totalCount: Int!
  edges: [ContentfulAssetEdge!]!
  nodes: [ContentfulAsset!]!
  pageInfo: PageInfo!
  distinct(field: ContentfulAssetFieldSelector!): [String!]!
  max(field: ContentfulAssetFieldSelector!): Float
  min(field: ContentfulAssetFieldSelector!): Float
  sum(field: ContentfulAssetFieldSelector!): Float
  group(skip: Int, limit: Int, field: ContentfulAssetFieldSelector!): [ContentfulAssetGroupConnection!]!
}

""""""
type ContentfulAssetEdge {
  next: ContentfulAsset
  node: ContentfulAsset!
  previous: ContentfulAsset
}

""""""
input ContentfulAssetFieldSelector {
  contentful_id: FieldSelectorEnum
  id: FieldSelectorEnum
  gatsbyImageData: FieldSelectorEnum
  spaceId: FieldSelectorEnum
  createdAt: FieldSelectorEnum
  updatedAt: FieldSelectorEnum
  file: ContentfulAssetFileFieldSelector
  title: FieldSelectorEnum
  description: FieldSelectorEnum
  node_locale: FieldSelectorEnum
  sys: ContentfulAssetSysFieldSelector
  url: FieldSelectorEnum
  placeholderUrl: FieldSelectorEnum
  mimeType: FieldSelectorEnum
  filename: FieldSelectorEnum
  width: FieldSelectorEnum
  height: FieldSelectorEnum
  size: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  filesize: FieldSelectorEnum
  publicUrl: FieldSelectorEnum
  resize: RemoteFileResizeFieldSelector
  gatsbyImage: FieldSelectorEnum
}

""""""
input ContentfulAssetFileFieldSelector {
  url: FieldSelectorEnum
  details: ContentfulAssetFileDetailsFieldSelector
  fileName: FieldSelectorEnum
  contentType: FieldSelectorEnum
}

""""""
input ContentfulAssetFileDetailsFieldSelector {
  size: FieldSelectorEnum
  image: ContentfulAssetFileDetailsImageFieldSelector
}

""""""
input ContentfulAssetFileDetailsImageFieldSelector {
  width: FieldSelectorEnum
  height: FieldSelectorEnum
}

""""""
input ContentfulAssetSysFieldSelector {
  type: FieldSelectorEnum
  revision: FieldSelectorEnum
}

""""""
input RemoteFileResizeFieldSelector {
  width: FieldSelectorEnum
  height: FieldSelectorEnum
  src: FieldSelectorEnum
}

""""""
type ContentfulAssetGroupConnection {
  totalCount: Int!
  edges: [ContentfulAssetEdge!]!
  nodes: [ContentfulAsset!]!
  pageInfo: PageInfo!
  distinct(field: ContentfulAssetFieldSelector!): [String!]!
  max(field: ContentfulAssetFieldSelector!): Float
  min(field: ContentfulAssetFieldSelector!): Float
  sum(field: ContentfulAssetFieldSelector!): Float
  group(skip: Int, limit: Int, field: ContentfulAssetFieldSelector!): [ContentfulAssetGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
input ContentfulAssetFilterInput {
  contentful_id: StringQueryOperatorInput
  id: StringQueryOperatorInput
  gatsbyImageData: GatsbyImageDataQueryOperatorInput
  spaceId: StringQueryOperatorInput
  createdAt: DateQueryOperatorInput
  updatedAt: DateQueryOperatorInput
  file: ContentfulAssetFileFilterInput
  title: StringQueryOperatorInput
  description: StringQueryOperatorInput
  node_locale: StringQueryOperatorInput
  sys: ContentfulAssetSysFilterInput
  url: StringQueryOperatorInput
  placeholderUrl: StringQueryOperatorInput
  mimeType: StringQueryOperatorInput
  filename: StringQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  size: IntQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  filesize: IntQueryOperatorInput
  publicUrl: StringQueryOperatorInput
  resize: RemoteFileResizeFilterInput
  gatsbyImage: GatsbyImageDataQueryOperatorInput
}

""""""
input ContentfulAssetSortInput {
  contentful_id: SortOrderEnum
  id: SortOrderEnum
  gatsbyImageData: SortOrderEnum
  spaceId: SortOrderEnum
  createdAt: SortOrderEnum
  updatedAt: SortOrderEnum
  file: ContentfulAssetFileSortInput
  title: SortOrderEnum
  description: SortOrderEnum
  node_locale: SortOrderEnum
  sys: ContentfulAssetSysSortInput
  url: SortOrderEnum
  placeholderUrl: SortOrderEnum
  mimeType: SortOrderEnum
  filename: SortOrderEnum
  width: SortOrderEnum
  height: SortOrderEnum
  size: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  filesize: SortOrderEnum
  publicUrl: SortOrderEnum
  resize: RemoteFileResizeSortInput
  gatsbyImage: SortOrderEnum
}

""""""
input ContentfulAssetFileSortInput {
  url: SortOrderEnum
  details: ContentfulAssetFileDetailsSortInput
  fileName: SortOrderEnum
  contentType: SortOrderEnum
}

""""""
input ContentfulAssetFileDetailsSortInput {
  size: SortOrderEnum
  image: ContentfulAssetFileDetailsImageSortInput
}

""""""
input ContentfulAssetFileDetailsImageSortInput {
  width: SortOrderEnum
  height: SortOrderEnum
}

""""""
input ContentfulAssetSysSortInput {
  type: SortOrderEnum
  revision: SortOrderEnum
}

""""""
input RemoteFileResizeSortInput {
  width: SortOrderEnum
  height: SortOrderEnum
  src: SortOrderEnum
}

""""""
type ContentfulPerson implements ContentfulReference & ContentfulEntry & Node {
  contentful_id: String!
  id: ID!
  node_locale: String!
  name: String
  title: String
  company: String
  shortBio: ContentfulPersonShortBio
  email: String
  phone: String
  facebook: String
  twitter: String
  github: String
  image: ContentfulAsset
  blog_post: [ContentfulBlogPost]
  spaceId: String
  createdAt(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  updatedAt(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  sys: ContentfulPersonSys
  parent: Node
  children: [Node!]!
  internal: Internal!
}

""""""
type ContentfulPersonShortBio {
  raw: String
}

""""""
type ContentfulBlogPost implements ContentfulReference & ContentfulEntry & Node {
  contentful_id: String!
  id: ID!
  node_locale: String!
  title: String
  slug: String
  description: ContentfulBlogPostDescription
  body: ContentfulBlogPostBody
  publishDate(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  tags: [String]
  heroImage: ContentfulAsset
  author: ContentfulPerson
  spaceId: String
  createdAt(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  updatedAt(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  sys: ContentfulBlogPostSys
  parent: Node
  children: [Node!]!
  internal: Internal!
}

""""""
type ContentfulBlogPostDescription {
  raw: String
}

""""""
type ContentfulBlogPostBody {
  raw: String
}

""""""
type ContentfulBlogPostSys {
  type: String
  revision: Int
  contentType: ContentfulBlogPostSysContentType
}

""""""
type ContentfulBlogPostSysContentType {
  sys: ContentfulBlogPostSysContentTypeSys
}

""""""
type ContentfulBlogPostSysContentTypeSys {
  type: String
  linkType: String
  id: String
}

""""""
type ContentfulPersonSys {
  type: String
  revision: Int
  contentType: ContentfulPersonSysContentType
}

""""""
type ContentfulPersonSysContentType {
  sys: ContentfulPersonSysContentTypeSys
}

""""""
type ContentfulPersonSysContentTypeSys {
  type: String
  linkType: String
  id: String
}

""""""
input ContentfulPersonShortBioFilterInput {
  raw: StringQueryOperatorInput
}

""""""
input ContentfulBlogPostFilterListInput {
  elemMatch: ContentfulBlogPostFilterInput
}

""""""
input ContentfulBlogPostFilterInput {
  contentful_id: StringQueryOperatorInput
  id: StringQueryOperatorInput
  node_locale: StringQueryOperatorInput
  title: StringQueryOperatorInput
  slug: StringQueryOperatorInput
  description: ContentfulBlogPostDescriptionFilterInput
  body: ContentfulBlogPostBodyFilterInput
  publishDate: DateQueryOperatorInput
  tags: StringQueryOperatorInput
  heroImage: ContentfulAssetFilterInput
  author: ContentfulPersonFilterInput
  spaceId: StringQueryOperatorInput
  createdAt: DateQueryOperatorInput
  updatedAt: DateQueryOperatorInput
  sys: ContentfulBlogPostSysFilterInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
}

""""""
input ContentfulBlogPostDescriptionFilterInput {
  raw: StringQueryOperatorInput
}

""""""
input ContentfulBlogPostBodyFilterInput {
  raw: StringQueryOperatorInput
}

""""""
input ContentfulPersonFilterInput {
  contentful_id: StringQueryOperatorInput
  id: StringQueryOperatorInput
  node_locale: StringQueryOperatorInput
  name: StringQueryOperatorInput
  title: StringQueryOperatorInput
  company: StringQueryOperatorInput
  shortBio: ContentfulPersonShortBioFilterInput
  email: StringQueryOperatorInput
  phone: StringQueryOperatorInput
  facebook: StringQueryOperatorInput
  twitter: StringQueryOperatorInput
  github: StringQueryOperatorInput
  image: ContentfulAssetFilterInput
  blog_post: ContentfulBlogPostFilterInput
  spaceId: StringQueryOperatorInput
  createdAt: DateQueryOperatorInput
  updatedAt: DateQueryOperatorInput
  sys: ContentfulPersonSysFilterInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
}

""""""
input ContentfulPersonSysFilterInput {
  type: StringQueryOperatorInput
  revision: IntQueryOperatorInput
  contentType: ContentfulPersonSysContentTypeFilterInput
}

""""""
input ContentfulPersonSysContentTypeFilterInput {
  sys: ContentfulPersonSysContentTypeSysFilterInput
}

""""""
input ContentfulPersonSysContentTypeSysFilterInput {
  type: StringQueryOperatorInput
  linkType: StringQueryOperatorInput
  id: StringQueryOperatorInput
}

""""""
input ContentfulBlogPostSysFilterInput {
  type: StringQueryOperatorInput
  revision: IntQueryOperatorInput
  contentType: ContentfulBlogPostSysContentTypeFilterInput
}

""""""
input ContentfulBlogPostSysContentTypeFilterInput {
  sys: ContentfulBlogPostSysContentTypeSysFilterInput
}

""""""
input ContentfulBlogPostSysContentTypeSysFilterInput {
  type: StringQueryOperatorInput
  linkType: StringQueryOperatorInput
  id: StringQueryOperatorInput
}

""""""
type ContentfulPersonConnection {
  totalCount: Int!
  edges: [ContentfulPersonEdge!]!
  nodes: [ContentfulPerson!]!
  pageInfo: PageInfo!
  distinct(field: ContentfulPersonFieldSelector!): [String!]!
  max(field: ContentfulPersonFieldSelector!): Float
  min(field: ContentfulPersonFieldSelector!): Float
  sum(field: ContentfulPersonFieldSelector!): Float
  group(skip: Int, limit: Int, field: ContentfulPersonFieldSelector!): [ContentfulPersonGroupConnection!]!
}

""""""
type ContentfulPersonEdge {
  next: ContentfulPerson
  node: ContentfulPerson!
  previous: ContentfulPerson
}

""""""
input ContentfulPersonFieldSelector {
  contentful_id: FieldSelectorEnum
  id: FieldSelectorEnum
  node_locale: FieldSelectorEnum
  name: FieldSelectorEnum
  title: FieldSelectorEnum
  company: FieldSelectorEnum
  shortBio: ContentfulPersonShortBioFieldSelector
  email: FieldSelectorEnum
  phone: FieldSelectorEnum
  facebook: FieldSelectorEnum
  twitter: FieldSelectorEnum
  github: FieldSelectorEnum
  image: ContentfulAssetFieldSelector
  blog_post: ContentfulBlogPostFieldSelector
  spaceId: FieldSelectorEnum
  createdAt: FieldSelectorEnum
  updatedAt: FieldSelectorEnum
  sys: ContentfulPersonSysFieldSelector
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
}

""""""
input ContentfulPersonShortBioFieldSelector {
  raw: FieldSelectorEnum
}

""""""
input ContentfulBlogPostFieldSelector {
  contentful_id: FieldSelectorEnum
  id: FieldSelectorEnum
  node_locale: FieldSelectorEnum
  title: FieldSelectorEnum
  slug: FieldSelectorEnum
  description: ContentfulBlogPostDescriptionFieldSelector
  body: ContentfulBlogPostBodyFieldSelector
  publishDate: FieldSelectorEnum
  tags: FieldSelectorEnum
  heroImage: ContentfulAssetFieldSelector
  author: ContentfulPersonFieldSelector
  spaceId: FieldSelectorEnum
  createdAt: FieldSelectorEnum
  updatedAt: FieldSelectorEnum
  sys: ContentfulBlogPostSysFieldSelector
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
}

""""""
input ContentfulBlogPostDescriptionFieldSelector {
  raw: FieldSelectorEnum
}

""""""
input ContentfulBlogPostBodyFieldSelector {
  raw: FieldSelectorEnum
}

""""""
input ContentfulBlogPostSysFieldSelector {
  type: FieldSelectorEnum
  revision: FieldSelectorEnum
  contentType: ContentfulBlogPostSysContentTypeFieldSelector
}

""""""
input ContentfulBlogPostSysContentTypeFieldSelector {
  sys: ContentfulBlogPostSysContentTypeSysFieldSelector
}

""""""
input ContentfulBlogPostSysContentTypeSysFieldSelector {
  type: FieldSelectorEnum
  linkType: FieldSelectorEnum
  id: FieldSelectorEnum
}

""""""
input ContentfulPersonSysFieldSelector {
  type: FieldSelectorEnum
  revision: FieldSelectorEnum
  contentType: ContentfulPersonSysContentTypeFieldSelector
}

""""""
input ContentfulPersonSysContentTypeFieldSelector {
  sys: ContentfulPersonSysContentTypeSysFieldSelector
}

""""""
input ContentfulPersonSysContentTypeSysFieldSelector {
  type: FieldSelectorEnum
  linkType: FieldSelectorEnum
  id: FieldSelectorEnum
}

""""""
type ContentfulPersonGroupConnection {
  totalCount: Int!
  edges: [ContentfulPersonEdge!]!
  nodes: [ContentfulPerson!]!
  pageInfo: PageInfo!
  distinct(field: ContentfulPersonFieldSelector!): [String!]!
  max(field: ContentfulPersonFieldSelector!): Float
  min(field: ContentfulPersonFieldSelector!): Float
  sum(field: ContentfulPersonFieldSelector!): Float
  group(skip: Int, limit: Int, field: ContentfulPersonFieldSelector!): [ContentfulPersonGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
input ContentfulPersonSortInput {
  contentful_id: SortOrderEnum
  id: SortOrderEnum
  node_locale: SortOrderEnum
  name: SortOrderEnum
  title: SortOrderEnum
  company: SortOrderEnum
  shortBio: ContentfulPersonShortBioSortInput
  email: SortOrderEnum
  phone: SortOrderEnum
  facebook: SortOrderEnum
  twitter: SortOrderEnum
  github: SortOrderEnum
  image: ContentfulAssetSortInput
  blog_post: ContentfulBlogPostSortInput
  spaceId: SortOrderEnum
  createdAt: SortOrderEnum
  updatedAt: SortOrderEnum
  sys: ContentfulPersonSysSortInput
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
}

""""""
input ContentfulPersonShortBioSortInput {
  raw: SortOrderEnum
}

""""""
input ContentfulBlogPostSortInput {
  contentful_id: SortOrderEnum
  id: SortOrderEnum
  node_locale: SortOrderEnum
  title: SortOrderEnum
  slug: SortOrderEnum
  description: ContentfulBlogPostDescriptionSortInput
  body: ContentfulBlogPostBodySortInput
  publishDate: SortOrderEnum
  tags: SortOrderEnum
  heroImage: ContentfulAssetSortInput
  author: ContentfulPersonSortInput
  spaceId: SortOrderEnum
  createdAt: SortOrderEnum
  updatedAt: SortOrderEnum
  sys: ContentfulBlogPostSysSortInput
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
}

""""""
input ContentfulBlogPostDescriptionSortInput {
  raw: SortOrderEnum
}

""""""
input ContentfulBlogPostBodySortInput {
  raw: SortOrderEnum
}

""""""
input ContentfulBlogPostSysSortInput {
  type: SortOrderEnum
  revision: SortOrderEnum
  contentType: ContentfulBlogPostSysContentTypeSortInput
}

""""""
input ContentfulBlogPostSysContentTypeSortInput {
  sys: ContentfulBlogPostSysContentTypeSysSortInput
}

""""""
input ContentfulBlogPostSysContentTypeSysSortInput {
  type: SortOrderEnum
  linkType: SortOrderEnum
  id: SortOrderEnum
}

""""""
input ContentfulPersonSysSortInput {
  type: SortOrderEnum
  revision: SortOrderEnum
  contentType: ContentfulPersonSysContentTypeSortInput
}

""""""
input ContentfulPersonSysContentTypeSortInput {
  sys: ContentfulPersonSysContentTypeSysSortInput
}

""""""
input ContentfulPersonSysContentTypeSysSortInput {
  type: SortOrderEnum
  linkType: SortOrderEnum
  id: SortOrderEnum
}

""""""
type ContentfulBlogPostConnection {
  totalCount: Int!
  edges: [ContentfulBlogPostEdge!]!
  nodes: [ContentfulBlogPost!]!
  pageInfo: PageInfo!
  distinct(field: ContentfulBlogPostFieldSelector!): [String!]!
  max(field: ContentfulBlogPostFieldSelector!): Float
  min(field: ContentfulBlogPostFieldSelector!): Float
  sum(field: ContentfulBlogPostFieldSelector!): Float
  group(skip: Int, limit: Int, field: ContentfulBlogPostFieldSelector!): [ContentfulBlogPostGroupConnection!]!
}

""""""
type ContentfulBlogPostEdge {
  next: ContentfulBlogPost
  node: ContentfulBlogPost!
  previous: ContentfulBlogPost
}

""""""
type ContentfulBlogPostGroupConnection {
  totalCount: Int!
  edges: [ContentfulBlogPostEdge!]!
  nodes: [ContentfulBlogPost!]!
  pageInfo: PageInfo!
  distinct(field: ContentfulBlogPostFieldSelector!): [String!]!
  max(field: ContentfulBlogPostFieldSelector!): Float
  min(field: ContentfulBlogPostFieldSelector!): Float
  sum(field: ContentfulBlogPostFieldSelector!): Float
  group(skip: Int, limit: Int, field: ContentfulBlogPostFieldSelector!): [ContentfulBlogPostGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type ContentfulBook implements ContentfulReference & ContentfulEntry & Node {
  contentful_id: String!
  id: ID!
  node_locale: String!
  title: String
  publicationDate(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  isbn: String
  description: ContentfulBookDescription
  coverImage: ContentfulAsset
  author: ContentfulAuthor
  spaceId: String
  createdAt(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  updatedAt(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  sys: ContentfulBookSys
  parent: Node
  children: [Node!]!
  internal: Internal!
}

""""""
type ContentfulBookDescription {
  raw: String
}

""""""
type ContentfulAuthor implements ContentfulReference & ContentfulEntry & Node {
  contentful_id: String!
  id: ID!
  node_locale: String!
  name: String
  bio: ContentfulAuthorBio
  avatar: ContentfulAsset
  book: [ContentfulBook]
  spaceId: String
  createdAt(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  updatedAt(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  sys: ContentfulAuthorSys
  parent: Node
  children: [Node!]!
  internal: Internal!
}

""""""
type ContentfulAuthorBio {
  raw: String
}

""""""
type ContentfulAuthorSys {
  type: String
  revision: Int
  contentType: ContentfulAuthorSysContentType
}

""""""
type ContentfulAuthorSysContentType {
  sys: ContentfulAuthorSysContentTypeSys
}

""""""
type ContentfulAuthorSysContentTypeSys {
  type: String
  linkType: String
  id: String
}

""""""
type ContentfulBookSys {
  type: String
  revision: Int
  contentType: ContentfulBookSysContentType
}

""""""
type ContentfulBookSysContentType {
  sys: ContentfulBookSysContentTypeSys
}

""""""
type ContentfulBookSysContentTypeSys {
  type: String
  linkType: String
  id: String
}

""""""
input ContentfulBookDescriptionFilterInput {
  raw: StringQueryOperatorInput
}

""""""
input ContentfulAuthorFilterInput {
  contentful_id: StringQueryOperatorInput
  id: StringQueryOperatorInput
  node_locale: StringQueryOperatorInput
  name: StringQueryOperatorInput
  bio: ContentfulAuthorBioFilterInput
  avatar: ContentfulAssetFilterInput
  book: ContentfulBookFilterInput
  spaceId: StringQueryOperatorInput
  createdAt: DateQueryOperatorInput
  updatedAt: DateQueryOperatorInput
  sys: ContentfulAuthorSysFilterInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
}

""""""
input ContentfulAuthorBioFilterInput {
  raw: StringQueryOperatorInput
}

""""""
input ContentfulBookFilterInput {
  contentful_id: StringQueryOperatorInput
  id: StringQueryOperatorInput
  node_locale: StringQueryOperatorInput
  title: StringQueryOperatorInput
  publicationDate: DateQueryOperatorInput
  isbn: StringQueryOperatorInput
  description: ContentfulBookDescriptionFilterInput
  coverImage: ContentfulAssetFilterInput
  author: ContentfulAuthorFilterInput
  spaceId: StringQueryOperatorInput
  createdAt: DateQueryOperatorInput
  updatedAt: DateQueryOperatorInput
  sys: ContentfulBookSysFilterInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
}

""""""
input ContentfulBookSysFilterInput {
  type: StringQueryOperatorInput
  revision: IntQueryOperatorInput
  contentType: ContentfulBookSysContentTypeFilterInput
}

""""""
input ContentfulBookSysContentTypeFilterInput {
  sys: ContentfulBookSysContentTypeSysFilterInput
}

""""""
input ContentfulBookSysContentTypeSysFilterInput {
  type: StringQueryOperatorInput
  linkType: StringQueryOperatorInput
  id: StringQueryOperatorInput
}

""""""
input ContentfulAuthorSysFilterInput {
  type: StringQueryOperatorInput
  revision: IntQueryOperatorInput
  contentType: ContentfulAuthorSysContentTypeFilterInput
}

""""""
input ContentfulAuthorSysContentTypeFilterInput {
  sys: ContentfulAuthorSysContentTypeSysFilterInput
}

""""""
input ContentfulAuthorSysContentTypeSysFilterInput {
  type: StringQueryOperatorInput
  linkType: StringQueryOperatorInput
  id: StringQueryOperatorInput
}

""""""
type ContentfulBookConnection {
  totalCount: Int!
  edges: [ContentfulBookEdge!]!
  nodes: [ContentfulBook!]!
  pageInfo: PageInfo!
  distinct(field: ContentfulBookFieldSelector!): [String!]!
  max(field: ContentfulBookFieldSelector!): Float
  min(field: ContentfulBookFieldSelector!): Float
  sum(field: ContentfulBookFieldSelector!): Float
  group(skip: Int, limit: Int, field: ContentfulBookFieldSelector!): [ContentfulBookGroupConnection!]!
}

""""""
type ContentfulBookEdge {
  next: ContentfulBook
  node: ContentfulBook!
  previous: ContentfulBook
}

""""""
input ContentfulBookFieldSelector {
  contentful_id: FieldSelectorEnum
  id: FieldSelectorEnum
  node_locale: FieldSelectorEnum
  title: FieldSelectorEnum
  publicationDate: FieldSelectorEnum
  isbn: FieldSelectorEnum
  description: ContentfulBookDescriptionFieldSelector
  coverImage: ContentfulAssetFieldSelector
  author: ContentfulAuthorFieldSelector
  spaceId: FieldSelectorEnum
  createdAt: FieldSelectorEnum
  updatedAt: FieldSelectorEnum
  sys: ContentfulBookSysFieldSelector
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
}

""""""
input ContentfulBookDescriptionFieldSelector {
  raw: FieldSelectorEnum
}

""""""
input ContentfulAuthorFieldSelector {
  contentful_id: FieldSelectorEnum
  id: FieldSelectorEnum
  node_locale: FieldSelectorEnum
  name: FieldSelectorEnum
  bio: ContentfulAuthorBioFieldSelector
  avatar: ContentfulAssetFieldSelector
  book: ContentfulBookFieldSelector
  spaceId: FieldSelectorEnum
  createdAt: FieldSelectorEnum
  updatedAt: FieldSelectorEnum
  sys: ContentfulAuthorSysFieldSelector
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
}

""""""
input ContentfulAuthorBioFieldSelector {
  raw: FieldSelectorEnum
}

""""""
input ContentfulAuthorSysFieldSelector {
  type: FieldSelectorEnum
  revision: FieldSelectorEnum
  contentType: ContentfulAuthorSysContentTypeFieldSelector
}

""""""
input ContentfulAuthorSysContentTypeFieldSelector {
  sys: ContentfulAuthorSysContentTypeSysFieldSelector
}

""""""
input ContentfulAuthorSysContentTypeSysFieldSelector {
  type: FieldSelectorEnum
  linkType: FieldSelectorEnum
  id: FieldSelectorEnum
}

""""""
input ContentfulBookSysFieldSelector {
  type: FieldSelectorEnum
  revision: FieldSelectorEnum
  contentType: ContentfulBookSysContentTypeFieldSelector
}

""""""
input ContentfulBookSysContentTypeFieldSelector {
  sys: ContentfulBookSysContentTypeSysFieldSelector
}

""""""
input ContentfulBookSysContentTypeSysFieldSelector {
  type: FieldSelectorEnum
  linkType: FieldSelectorEnum
  id: FieldSelectorEnum
}

""""""
type ContentfulBookGroupConnection {
  totalCount: Int!
  edges: [ContentfulBookEdge!]!
  nodes: [ContentfulBook!]!
  pageInfo: PageInfo!
  distinct(field: ContentfulBookFieldSelector!): [String!]!
  max(field: ContentfulBookFieldSelector!): Float
  min(field: ContentfulBookFieldSelector!): Float
  sum(field: ContentfulBookFieldSelector!): Float
  group(skip: Int, limit: Int, field: ContentfulBookFieldSelector!): [ContentfulBookGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
input ContentfulBookSortInput {
  contentful_id: SortOrderEnum
  id: SortOrderEnum
  node_locale: SortOrderEnum
  title: SortOrderEnum
  publicationDate: SortOrderEnum
  isbn: SortOrderEnum
  description: ContentfulBookDescriptionSortInput
  coverImage: ContentfulAssetSortInput
  author: ContentfulAuthorSortInput
  spaceId: SortOrderEnum
  createdAt: SortOrderEnum
  updatedAt: SortOrderEnum
  sys: ContentfulBookSysSortInput
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
}

""""""
input ContentfulBookDescriptionSortInput {
  raw: SortOrderEnum
}

""""""
input ContentfulAuthorSortInput {
  contentful_id: SortOrderEnum
  id: SortOrderEnum
  node_locale: SortOrderEnum
  name: SortOrderEnum
  bio: ContentfulAuthorBioSortInput
  avatar: ContentfulAssetSortInput
  book: ContentfulBookSortInput
  spaceId: SortOrderEnum
  createdAt: SortOrderEnum
  updatedAt: SortOrderEnum
  sys: ContentfulAuthorSysSortInput
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
}

""""""
input ContentfulAuthorBioSortInput {
  raw: SortOrderEnum
}

""""""
input ContentfulAuthorSysSortInput {
  type: SortOrderEnum
  revision: SortOrderEnum
  contentType: ContentfulAuthorSysContentTypeSortInput
}

""""""
input ContentfulAuthorSysContentTypeSortInput {
  sys: ContentfulAuthorSysContentTypeSysSortInput
}

""""""
input ContentfulAuthorSysContentTypeSysSortInput {
  type: SortOrderEnum
  linkType: SortOrderEnum
  id: SortOrderEnum
}

""""""
input ContentfulBookSysSortInput {
  type: SortOrderEnum
  revision: SortOrderEnum
  contentType: ContentfulBookSysContentTypeSortInput
}

""""""
input ContentfulBookSysContentTypeSortInput {
  sys: ContentfulBookSysContentTypeSysSortInput
}

""""""
input ContentfulBookSysContentTypeSysSortInput {
  type: SortOrderEnum
  linkType: SortOrderEnum
  id: SortOrderEnum
}

""""""
input ContentfulBookFilterListInput {
  elemMatch: ContentfulBookFilterInput
}

""""""
type ContentfulAuthorConnection {
  totalCount: Int!
  edges: [ContentfulAuthorEdge!]!
  nodes: [ContentfulAuthor!]!
  pageInfo: PageInfo!
  distinct(field: ContentfulAuthorFieldSelector!): [String!]!
  max(field: ContentfulAuthorFieldSelector!): Float
  min(field: ContentfulAuthorFieldSelector!): Float
  sum(field: ContentfulAuthorFieldSelector!): Float
  group(skip: Int, limit: Int, field: ContentfulAuthorFieldSelector!): [ContentfulAuthorGroupConnection!]!
}

""""""
type ContentfulAuthorEdge {
  next: ContentfulAuthor
  node: ContentfulAuthor!
  previous: ContentfulAuthor
}

""""""
type ContentfulAuthorGroupConnection {
  totalCount: Int!
  edges: [ContentfulAuthorEdge!]!
  nodes: [ContentfulAuthor!]!
  pageInfo: PageInfo!
  distinct(field: ContentfulAuthorFieldSelector!): [String!]!
  max(field: ContentfulAuthorFieldSelector!): Float
  min(field: ContentfulAuthorFieldSelector!): Float
  sum(field: ContentfulAuthorFieldSelector!): Float
  group(skip: Int, limit: Int, field: ContentfulAuthorFieldSelector!): [ContentfulAuthorGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type ContentfulTag implements Node {
  name: String!
  contentful_id: String!
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

""""""
type ContentfulTagConnection {
  totalCount: Int!
  edges: [ContentfulTagEdge!]!
  nodes: [ContentfulTag!]!
  pageInfo: PageInfo!
  distinct(field: ContentfulTagFieldSelector!): [String!]!
  max(field: ContentfulTagFieldSelector!): Float
  min(field: ContentfulTagFieldSelector!): Float
  sum(field: ContentfulTagFieldSelector!): Float
  group(skip: Int, limit: Int, field: ContentfulTagFieldSelector!): [ContentfulTagGroupConnection!]!
}

""""""
type ContentfulTagEdge {
  next: ContentfulTag
  node: ContentfulTag!
  previous: ContentfulTag
}

""""""
input ContentfulTagFieldSelector {
  name: FieldSelectorEnum
  contentful_id: FieldSelectorEnum
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
}

""""""
type ContentfulTagGroupConnection {
  totalCount: Int!
  edges: [ContentfulTagEdge!]!
  nodes: [ContentfulTag!]!
  pageInfo: PageInfo!
  distinct(field: ContentfulTagFieldSelector!): [String!]!
  max(field: ContentfulTagFieldSelector!): Float
  min(field: ContentfulTagFieldSelector!): Float
  sum(field: ContentfulTagFieldSelector!): Float
  group(skip: Int, limit: Int, field: ContentfulTagFieldSelector!): [ContentfulTagGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
input ContentfulTagFilterInput {
  name: StringQueryOperatorInput
  contentful_id: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
}

""""""
input ContentfulTagSortInput {
  name: SortOrderEnum
  contentful_id: SortOrderEnum
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
}

""""""
type DrupalFile__file implements Node & RemoteFile {
  drupal_id: String
  drupal_internal__fid: Int
  langcode: String
  filename: String!
  uri: DrupalFile__fileUri
  filemime: String
  filesize: Int
  status: Boolean
  created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  mimeType: String!
  url: String
  relationships: DrupalFile__fileRelationships
  uid: DrupalFile__fileUid
  placeholderUrl: String
  width: Int
  height: Int
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  publicUrl: String!
  resize(
    width: Int
    height: Int
    aspectRatio: Float
    fit: RemoteFileFit = COVER

    "\nThe image formats to generate. Valid values are AUTO (meaning the same format as the source image), JPG, PNG, WEBP and AVIF.\nThe default value is [AUTO, WEBP, AVIF], and you should rarely need to change this. Take care if you specify JPG or PNG when you do\nnot know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying\nboth PNG and JPG is not supported and will be ignored."
    format: RemoteFileFormat = AUTO
    cropFocus: [RemoteFileCropFocus]
    quality: Int = 75
  ): RemoteFileResize

  """
  Data used in the <GatsbyImage /> component. See https://gatsby.dev/img for more info.
  """
  gatsbyImage(
    "\nThe layout for the image.\nFIXED: A static image sized, that does not resize according to the screen width\nFULL_WIDTH: The image resizes to fit its container. Pass a \"sizes\" option if it isn't going to be the full width of the screen.\nCONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.\n"
    layout: RemoteFileLayout = CONSTRAINED

    "\nThe display width of the generated image for layout = FIXED, and the display width of the largest image for layout = CONSTRAINED.\nThe actual largest image resolution will be this value multiplied by the largest value in outputPixelDensities\nIgnored if layout = FLUID.\n"
    width: Int

    "\nIf set, the height of the generated image. If omitted, it is calculated from the supplied width, matching the aspect ratio of the source image."
    height: Int

    """Setting "placeholder" is not supported in Netlify Connect"""
    placeholder: RemoteFilePlaceholder = NONE @deprecated(reason: "Setting \"placeholder\" is not supported in Netlify Connect")

    "\nIf set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.\nIf neither width or height is provided, height will be set based on the intrinsic width of the source image.\n"
    aspectRatio: Float

    "\nThe image formats to generate. Valid values are AUTO (meaning the same format as the source image), JPG, PNG, WEBP and AVIF.\nThe default value is [AUTO, WEBP, AVIF], and you should rarely need to change this. Take care if you specify JPG or PNG when you do\nnot know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying\nboth PNG and JPG is not supported and will be ignored.\n"
    formats: [RemoteFileFormat!] = [AUTO, WEBP, AVIF]

    "\nA list of image pixel densities to generate for FIXED and CONSTRAINED images. You should rarely need to change this. It will never generate images larger than the source, and will always include a 1x image.\nDefault is [ 1, 2 ] for fixed images, meaning 1x, 2x, and [0.25, 0.5, 1, 2] for fluid. In this case, an image with a fluid layout and width = 400 would generate images at 100, 200, 400 and 800px wide.\n"
    outputPixelDensities: [Float] = [0.25, 0.5, 1, 2]

    "\nSpecifies the image widths to generate. You should rarely need to change this. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,\nbased on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].\nIt will never generate any images larger than the source.\n"
    breakpoints: [Int] = [750, 1080, 1366, 1920]

    "\nThe \"sizes\" property, passed to the img tag. This describes the display size of the image.\nThis does not affect the generated images, but is used by the browser to decide which images to download. You can leave this blank for fixed images, or if the responsive image\ncontainer will be the full width of the screen. In these cases we will generate an appropriate value.\n"
    sizes: String

    """
    Background color applied to the wrapper, or when "letterboxing" an image to another aspect ratio.
    """
    backgroundColor: String
    fit: RemoteFileFit = COVER
    cropFocus: [RemoteFileCropFocus]
    quality: Int = 75
  ): GatsbyImageData
}

""""""
type DrupalFile__fileUri {
  value: String
  url: String
}

""""""
type DrupalFile__fileRelationships {
  uid: DrupalUser__user
  DrupalMedia__audio: [DrupalMedia__audio]
  DrupalMedia__image: [DrupalMedia__image]
  DrupalMedia__document: [DrupalMedia__document]
  DrupalNode__nik_content_type: [DrupalNode__nik_content_type]
  DrupalMedia__remote_video: [DrupalMedia__remote_video]
  DrupalMedia__video: [DrupalMedia__video]
}

""""""
type DrupalUser__user implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  display_name: String
  relationships: DrupalUser__userRelationships
}

""""""
type DrupalUser__userRelationships {
  DrupalNode__drupal_test_content_type: [DrupalNode__drupal_test_content_type]
  DrupalNode__page: [DrupalNode__page]
  DrupalNode__test_page: [DrupalNode__test_page]
  DrupalMedia__image: [DrupalMedia__image]
  DrupalNode__user: [DrupalNode__user]
  DrupalMedia__document: [DrupalMedia__document]
  DrupalNode__nik_content_type: [DrupalNode__nik_content_type]
  DrupalBlock_content__basic: [DrupalBlock_content__basic]
  DrupalFile__file: [DrupalFile__file]
  DrupalNode__product_page: [DrupalNode__product_page]
  DrupalTaxonomy_term__belatub: [DrupalTaxonomy_term__belatub]
  DrupalTaxonomy_term__chest: [DrupalTaxonomy_term__chest]
  DrupalTaxonomy_term__ci: [DrupalTaxonomy_term__ci]
  DrupalTaxonomy_term__cishuswalus: [DrupalTaxonomy_term__cishuswalus]
  DrupalTaxonomy_term__cl: [DrupalTaxonomy_term__cl]
  DrupalTaxonomy_term__clas: [DrupalTaxonomy_term__clas]
  DrupalTaxonomy_term__devup: [DrupalTaxonomy_term__devup]
  DrupalTaxonomy_term__drouawipas: [DrupalTaxonomy_term__drouawipas]
  DrupalTaxonomy_term__gestep: [DrupalTaxonomy_term__gestep]
  DrupalTaxonomy_term__hiwrewru: [DrupalTaxonomy_term__hiwrewru]
  DrupalTaxonomy_term__lomolaf: [DrupalTaxonomy_term__lomolaf]
  DrupalTaxonomy_term__noui: [DrupalTaxonomy_term__noui]
  DrupalTaxonomy_term__rej: [DrupalTaxonomy_term__rej]
  DrupalTaxonomy_term__shitabreko: [DrupalTaxonomy_term__shitabreko]
  DrupalTaxonomy_term__slochat: [DrupalTaxonomy_term__slochat]
  DrupalTaxonomy_term__stu: [DrupalTaxonomy_term__stu]
  DrupalTaxonomy_term__testing_taxonomy: [DrupalTaxonomy_term__testing_taxonomy]
  DrupalTaxonomy_term__ti: [DrupalTaxonomy_term__ti]
  DrupalTaxonomy_term__traw: [DrupalTaxonomy_term__traw]
  DrupalTaxonomy_term__tri: [DrupalTaxonomy_term__tri]
  DrupalTaxonomy_term__uasufrotru: [DrupalTaxonomy_term__uasufrotru]
  DrupalTaxonomy_term__uiprawrunati: [DrupalTaxonomy_term__uiprawrunati]
  DrupalTaxonomy_term__uutr: [DrupalTaxonomy_term__uutr]
  DrupalTaxonomy_term__vaswo: [DrupalTaxonomy_term__vaswo]
  DrupalMedia__remote_video: [DrupalMedia__remote_video]
  DrupalMedia__audio: [DrupalMedia__audio]
  DrupalMedia__video: [DrupalMedia__video]
}

""""""
type DrupalNode__drupal_test_content_type implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__nid: Int
  drupal_internal__vid: Int
  langcode: String
  revision_timestamp(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  title: String
  created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  promote: Boolean
  sticky: Boolean
  default_langcode: Boolean
  revision_translation_affected: Boolean
  path: DrupalNode__drupal_test_content_typePath
  content_translation_source: String
  content_translation_outdated: Boolean
  body: DrupalNode__drupal_test_content_typeBody
  field_list_text_field: [String]
  relationships: DrupalNode__drupal_test_content_typeRelationships
  node_type: DrupalNode__drupal_test_content_typeNode_type
  revision_uid: DrupalNode__drupal_test_content_typeRevision_uid
  uid: DrupalNode__drupal_test_content_typeUid
}

""""""
type DrupalNode__drupal_test_content_typePath {
  langcode: String
}

""""""
type DrupalNode__drupal_test_content_typeBody {
  value: String
  format: String
  processed: String
  summary: String
}

""""""
type DrupalNode__drupal_test_content_typeRelationships {
  node_type: DrupalNode_type__node_type
  revision_uid: DrupalUser__user
  uid: DrupalUser__user
  DrupalNode__nik_content_type: [DrupalNode__nik_content_type]
}

""""""
type DrupalNode_type__node_type implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  langcode: String
  status: Boolean
  dependencies: DrupalNode_type__node_typeDependencies
  third_party_settings: DrupalNode_type__node_typeThird_party_settings
  name: String
  drupal_internal__type: String
  description: String
  help: String
  new_revision: Boolean
  preview_mode: Int
  display_submitted: Boolean
  relationships: DrupalNode_type__node_typeRelationships
}

""""""
type DrupalNode_type__node_typeDependencies {
  module: [String]
}

""""""
type DrupalNode_type__node_typeThird_party_settings {
  menu_ui: DrupalNode_type__node_typeThird_party_settingsMenu_ui
  gatsby: DrupalNode_type__node_typeThird_party_settingsGatsby
}

""""""
type DrupalNode_type__node_typeThird_party_settingsMenu_ui {
  available_menus: [String]
  parent: String
}

""""""
type DrupalNode_type__node_typeThird_party_settingsGatsby {
  preview: Boolean
}

""""""
type DrupalNode_type__node_typeRelationships {
  DrupalNode__user: [DrupalNode__user]
  DrupalNode__page: [DrupalNode__page]
  DrupalNode__product_page: [DrupalNode__product_page]
  DrupalNode__drupal_test_content_type: [DrupalNode__drupal_test_content_type]
  DrupalNode__nik_content_type: [DrupalNode__nik_content_type]
  DrupalNode__test_page: [DrupalNode__test_page]
}

""""""
type DrupalNode__user implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__nid: Int
  drupal_internal__vid: Int
  langcode: String
  revision_timestamp(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  title: String
  created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  promote: Boolean
  sticky: Boolean
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  body: DrupalNode__userBody
  relationships: DrupalNode__userRelationships
  node_type: DrupalNode__userNode_type
  revision_uid: DrupalNode__userRevision_uid
  uid: DrupalNode__userUid
}

""""""
type DrupalNode__userBody {
  value: String
  format: String
  processed: String
  summary: String
}

""""""
type DrupalNode__userRelationships {
  DrupalNode__nik_content_type: [DrupalNode__nik_content_type]
  node_type: DrupalNode_type__node_type
  revision_uid: DrupalUser__user
  uid: DrupalUser__user
}

""""""
type DrupalNode__nik_content_type implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__nid: Int
  drupal_internal__vid: Int
  langcode: String
  revision_timestamp(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  title: String
  created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  promote: Boolean
  sticky: Boolean
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  field_accordian_text: DrupalNode__nik_content_typeField_accordian_text
  field_boolean_test: Boolean
  field_boolean_test_list: [Boolean]
  field_contentstack_product: String
  field_date(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): [Date]
  field_email: String
  field_hello: [String]
  field_link: DrupalNode__nik_content_typeField_link
  field_list_text_field: [String]
  field_test_body: [DrupalNode__nik_content_typeField_test_body]
  field_test_object: DrupalNode__nik_content_typeField_test_object
  field_test_text_plain: String
  field_text_plain_list: [String]
  field_timestamp(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalNode__nik_content_typeRelationships
  node_type: DrupalNode__nik_content_typeNode_type
  revision_uid: DrupalNode__nik_content_typeRevision_uid
  uid: DrupalNode__nik_content_typeUid
  field_adf: DrupalNode__nik_content_typeField_adf
  field_list_union_type: [DrupalNode__nik_content_typeField_list_union_type]
  field_test_content: DrupalNode__nik_content_typeField_test_content
  field_list_reference: [DrupalNode__nik_content_typeField_list_reference]
  field_image_reference: DrupalNode__nik_content_typeField_image_reference
  field_list_file_image: [DrupalNode__nik_content_typeField_list_file_image]
  field_other_reference_revision: DrupalNode__nik_content_typeField_other_reference_revision
  field_paragraph: [DrupalNode__nik_content_typeField_paragraph]
  field_single_paragraph: DrupalNode__nik_content_typeField_single_paragraph
  field_single_reference: DrupalNode__nik_content_typeField_single_reference
  field_union_single_reference: DrupalNode__nik_content_typeField_union_single_reference
}

""""""
type DrupalNode__nik_content_typeField_accordian_text {
  value: String
  format: String
  processed: String
}

""""""
type DrupalNode__nik_content_typeField_link {
  uri: String
  title: String
}

""""""
type DrupalNode__nik_content_typeField_test_body {
  value: String
  format: String
  processed: String
  summary: String
}

""""""
type DrupalNode__nik_content_typeField_test_object {
  value: String
  format: String
  processed: String
  summary: String
}

""""""
type DrupalNode__nik_content_typeRelationships {
  node_type: DrupalNode_type__node_type
  revision_uid: DrupalUser__user
  uid: DrupalUser__user
  field_adf: DrupalTaxonomy_term__ciDrupalTaxonomy_term__drouawipasDrupalTaxonomy_term__gestepUnion
  field_list_file_image: [DrupalFile__file]
  field_list_reference: [DrupalNode__drupal_test_content_type]
  field_list_union_type: [DrupalNode__drupal_test_content_typeDrupalNode__nik_content_typeDrupalNode__pageDrupalNode__test_pageDrupalNode__userUnion]
  field_test_content: DrupalNode__drupal_test_content_typeDrupalNode__nik_content_typeDrupalNode__test_pageUnion
  DrupalNode__nik_content_type: [DrupalNode__nik_content_type]
  field_image_reference: DrupalFile__file
  field_other_reference_revision: DrupalNode__drupal_test_content_type
  field_single_reference: DrupalNode__drupal_test_content_type
  field_union_single_reference: DrupalNode__drupal_test_content_type
}

""""""
union DrupalTaxonomy_term__ciDrupalTaxonomy_term__drouawipasDrupalTaxonomy_term__gestepUnion = DrupalTaxonomy_term__ci | DrupalTaxonomy_term__drouawipas | DrupalTaxonomy_term__gestep

""""""
type DrupalTaxonomy_term__ci implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__tid: Int
  drupal_internal__revision_id: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  description: DrupalTaxonomy_term__ciDescription
  weight: Int
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  content_translation_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalTaxonomy_term__ciRelationships
  vid: DrupalTaxonomy_term__ciVid
  content_translation_uid: DrupalTaxonomy_term__ciContent_translation_uid
}

""""""
type DrupalTaxonomy_term__ciDescription {
  value: String
  processed: String
}

""""""
type DrupalTaxonomy_term__ciRelationships {
  DrupalNode__nik_content_type: [DrupalNode__nik_content_type]
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  parent: [DrupalTaxonomy_term__ci]
  content_translation_uid: DrupalUser__user
  DrupalTaxonomy_term__ci: [DrupalTaxonomy_term__ci]
}

""""""
type DrupalTaxonomy_vocabulary__taxonomy_vocabulary implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  langcode: String
  status: Boolean
  name: String
  drupal_internal__vid: String
  description: String
  weight: Int
  relationships: DrupalTaxonomy_vocabulary__taxonomy_vocabularyRelationships
}

""""""
type DrupalTaxonomy_vocabulary__taxonomy_vocabularyRelationships {
  DrupalTaxonomy_term__rej: [DrupalTaxonomy_term__rej]
  DrupalTaxonomy_term__noui: [DrupalTaxonomy_term__noui]
  DrupalTaxonomy_term__chest: [DrupalTaxonomy_term__chest]
  DrupalTaxonomy_term__devup: [DrupalTaxonomy_term__devup]
  DrupalTaxonomy_term__testing_taxonomy: [DrupalTaxonomy_term__testing_taxonomy]
  DrupalTaxonomy_term__cishuswalus: [DrupalTaxonomy_term__cishuswalus]
  DrupalTaxonomy_term__ti: [DrupalTaxonomy_term__ti]
  DrupalTaxonomy_term__hiwrewru: [DrupalTaxonomy_term__hiwrewru]
  DrupalTaxonomy_term__uutr: [DrupalTaxonomy_term__uutr]
  DrupalTaxonomy_term__drouawipas: [DrupalTaxonomy_term__drouawipas]
  DrupalTaxonomy_term__shitabreko: [DrupalTaxonomy_term__shitabreko]
  DrupalTaxonomy_term__tri: [DrupalTaxonomy_term__tri]
  DrupalTaxonomy_term__stu: [DrupalTaxonomy_term__stu]
  DrupalTaxonomy_term__vaswo: [DrupalTaxonomy_term__vaswo]
  DrupalTaxonomy_term__lomolaf: [DrupalTaxonomy_term__lomolaf]
  DrupalTaxonomy_term__clas: [DrupalTaxonomy_term__clas]
  DrupalTaxonomy_term__traw: [DrupalTaxonomy_term__traw]
  DrupalTaxonomy_term__uasufrotru: [DrupalTaxonomy_term__uasufrotru]
  DrupalTaxonomy_term__uiprawrunati: [DrupalTaxonomy_term__uiprawrunati]
  DrupalTaxonomy_term__slochat: [DrupalTaxonomy_term__slochat]
  DrupalTaxonomy_term__ci: [DrupalTaxonomy_term__ci]
  DrupalTaxonomy_term__cl: [DrupalTaxonomy_term__cl]
  DrupalTaxonomy_term__gestep: [DrupalTaxonomy_term__gestep]
  DrupalTaxonomy_term__belatub: [DrupalTaxonomy_term__belatub]
}

""""""
type DrupalTaxonomy_term__rej implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__tid: Int
  drupal_internal__revision_id: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  description: DrupalTaxonomy_term__rejDescription
  weight: Int
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  content_translation_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalTaxonomy_term__rejRelationships
  vid: DrupalTaxonomy_term__rejVid
  content_translation_uid: DrupalTaxonomy_term__rejContent_translation_uid
}

""""""
type DrupalTaxonomy_term__rejDescription {
  value: String
  processed: String
}

""""""
type DrupalTaxonomy_term__rejRelationships {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  content_translation_uid: DrupalUser__user
}

""""""
type DrupalTaxonomy_term__rejVid {
  drupal_internal__target_id: String
}

""""""
type DrupalTaxonomy_term__rejContent_translation_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalTaxonomy_term__noui implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__tid: Int
  drupal_internal__revision_id: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  description: DrupalTaxonomy_term__nouiDescription
  weight: Int
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  content_translation_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalTaxonomy_term__nouiRelationships
  vid: DrupalTaxonomy_term__nouiVid
  content_translation_uid: DrupalTaxonomy_term__nouiContent_translation_uid
}

""""""
type DrupalTaxonomy_term__nouiDescription {
  value: String
  processed: String
}

""""""
type DrupalTaxonomy_term__nouiRelationships {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  content_translation_uid: DrupalUser__user
}

""""""
type DrupalTaxonomy_term__nouiVid {
  drupal_internal__target_id: String
}

""""""
type DrupalTaxonomy_term__nouiContent_translation_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalTaxonomy_term__chest implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__tid: Int
  drupal_internal__revision_id: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  description: DrupalTaxonomy_term__chestDescription
  weight: Int
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  content_translation_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalTaxonomy_term__chestRelationships
  vid: DrupalTaxonomy_term__chestVid
  content_translation_uid: DrupalTaxonomy_term__chestContent_translation_uid
}

""""""
type DrupalTaxonomy_term__chestDescription {
  value: String
  processed: String
}

""""""
type DrupalTaxonomy_term__chestRelationships {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  parent: [DrupalTaxonomy_term__chest]
  content_translation_uid: DrupalUser__user
  DrupalTaxonomy_term__chest: [DrupalTaxonomy_term__chest]
}

""""""
type DrupalTaxonomy_term__chestVid {
  drupal_internal__target_id: String
}

""""""
type DrupalTaxonomy_term__chestContent_translation_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalTaxonomy_term__devup implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__tid: Int
  drupal_internal__revision_id: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  description: DrupalTaxonomy_term__devupDescription
  weight: Int
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  content_translation_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalTaxonomy_term__devupRelationships
  vid: DrupalTaxonomy_term__devupVid
  content_translation_uid: DrupalTaxonomy_term__devupContent_translation_uid
}

""""""
type DrupalTaxonomy_term__devupDescription {
  value: String
  processed: String
}

""""""
type DrupalTaxonomy_term__devupRelationships {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  content_translation_uid: DrupalUser__user
}

""""""
type DrupalTaxonomy_term__devupVid {
  drupal_internal__target_id: String
}

""""""
type DrupalTaxonomy_term__devupContent_translation_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalTaxonomy_term__testing_taxonomy implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__tid: Int
  drupal_internal__revision_id: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  description: DrupalTaxonomy_term__testing_taxonomyDescription
  weight: Int
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  content_translation_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalTaxonomy_term__testing_taxonomyRelationships
  vid: DrupalTaxonomy_term__testing_taxonomyVid
  content_translation_uid: DrupalTaxonomy_term__testing_taxonomyContent_translation_uid
}

""""""
type DrupalTaxonomy_term__testing_taxonomyDescription {
  value: String
  format: String
  processed: String
}

""""""
type DrupalTaxonomy_term__testing_taxonomyRelationships {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  parent: [DrupalTaxonomy_term__testing_taxonomy]
  content_translation_uid: DrupalUser__user
  DrupalTaxonomy_term__testing_taxonomy: [DrupalTaxonomy_term__testing_taxonomy]
}

""""""
type DrupalTaxonomy_term__testing_taxonomyVid {
  drupal_internal__target_id: String
}

""""""
type DrupalTaxonomy_term__testing_taxonomyContent_translation_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalTaxonomy_term__cishuswalus implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__tid: Int
  drupal_internal__revision_id: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  description: DrupalTaxonomy_term__cishuswalusDescription
  weight: Int
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  content_translation_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalTaxonomy_term__cishuswalusRelationships
  vid: DrupalTaxonomy_term__cishuswalusVid
  content_translation_uid: DrupalTaxonomy_term__cishuswalusContent_translation_uid
}

""""""
type DrupalTaxonomy_term__cishuswalusDescription {
  value: String
  processed: String
}

""""""
type DrupalTaxonomy_term__cishuswalusRelationships {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  parent: [DrupalTaxonomy_term__cishuswalus]
  content_translation_uid: DrupalUser__user
  DrupalTaxonomy_term__cishuswalus: [DrupalTaxonomy_term__cishuswalus]
}

""""""
type DrupalTaxonomy_term__cishuswalusVid {
  drupal_internal__target_id: String
}

""""""
type DrupalTaxonomy_term__cishuswalusContent_translation_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalTaxonomy_term__ti implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__tid: Int
  drupal_internal__revision_id: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  description: DrupalTaxonomy_term__tiDescription
  weight: Int
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  content_translation_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalTaxonomy_term__tiRelationships
  vid: DrupalTaxonomy_term__tiVid
  content_translation_uid: DrupalTaxonomy_term__tiContent_translation_uid
}

""""""
type DrupalTaxonomy_term__tiDescription {
  value: String
  processed: String
}

""""""
type DrupalTaxonomy_term__tiRelationships {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  content_translation_uid: DrupalUser__user
}

""""""
type DrupalTaxonomy_term__tiVid {
  drupal_internal__target_id: String
}

""""""
type DrupalTaxonomy_term__tiContent_translation_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalTaxonomy_term__hiwrewru implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__tid: Int
  drupal_internal__revision_id: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  description: DrupalTaxonomy_term__hiwrewruDescription
  weight: Int
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  content_translation_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalTaxonomy_term__hiwrewruRelationships
  vid: DrupalTaxonomy_term__hiwrewruVid
  content_translation_uid: DrupalTaxonomy_term__hiwrewruContent_translation_uid
}

""""""
type DrupalTaxonomy_term__hiwrewruDescription {
  value: String
  processed: String
}

""""""
type DrupalTaxonomy_term__hiwrewruRelationships {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  parent: [DrupalTaxonomy_term__hiwrewru]
  content_translation_uid: DrupalUser__user
  DrupalTaxonomy_term__hiwrewru: [DrupalTaxonomy_term__hiwrewru]
}

""""""
type DrupalTaxonomy_term__hiwrewruVid {
  drupal_internal__target_id: String
}

""""""
type DrupalTaxonomy_term__hiwrewruContent_translation_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalTaxonomy_term__uutr implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__tid: Int
  drupal_internal__revision_id: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  description: DrupalTaxonomy_term__uutrDescription
  weight: Int
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  content_translation_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalTaxonomy_term__uutrRelationships
  vid: DrupalTaxonomy_term__uutrVid
  content_translation_uid: DrupalTaxonomy_term__uutrContent_translation_uid
}

""""""
type DrupalTaxonomy_term__uutrDescription {
  value: String
  processed: String
}

""""""
type DrupalTaxonomy_term__uutrRelationships {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  parent: [DrupalTaxonomy_term__uutr]
  content_translation_uid: DrupalUser__user
  DrupalTaxonomy_term__uutr: [DrupalTaxonomy_term__uutr]
}

""""""
type DrupalTaxonomy_term__uutrVid {
  drupal_internal__target_id: String
}

""""""
type DrupalTaxonomy_term__uutrContent_translation_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalTaxonomy_term__drouawipas implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__tid: Int
  drupal_internal__revision_id: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  description: DrupalTaxonomy_term__drouawipasDescription
  weight: Int
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  content_translation_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalTaxonomy_term__drouawipasRelationships
  vid: DrupalTaxonomy_term__drouawipasVid
  content_translation_uid: DrupalTaxonomy_term__drouawipasContent_translation_uid
}

""""""
type DrupalTaxonomy_term__drouawipasDescription {
  value: String
  processed: String
}

""""""
type DrupalTaxonomy_term__drouawipasRelationships {
  DrupalNode__nik_content_type: [DrupalNode__nik_content_type]
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  content_translation_uid: DrupalUser__user
}

""""""
type DrupalTaxonomy_term__drouawipasVid {
  drupal_internal__target_id: String
}

""""""
type DrupalTaxonomy_term__drouawipasContent_translation_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalTaxonomy_term__shitabreko implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__tid: Int
  drupal_internal__revision_id: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  description: DrupalTaxonomy_term__shitabrekoDescription
  weight: Int
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  content_translation_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalTaxonomy_term__shitabrekoRelationships
  vid: DrupalTaxonomy_term__shitabrekoVid
  content_translation_uid: DrupalTaxonomy_term__shitabrekoContent_translation_uid
}

""""""
type DrupalTaxonomy_term__shitabrekoDescription {
  value: String
  processed: String
}

""""""
type DrupalTaxonomy_term__shitabrekoRelationships {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  parent: [DrupalTaxonomy_term__shitabreko]
  content_translation_uid: DrupalUser__user
  DrupalTaxonomy_term__shitabreko: [DrupalTaxonomy_term__shitabreko]
}

""""""
type DrupalTaxonomy_term__shitabrekoVid {
  drupal_internal__target_id: String
}

""""""
type DrupalTaxonomy_term__shitabrekoContent_translation_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalTaxonomy_term__tri implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__tid: Int
  drupal_internal__revision_id: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  description: DrupalTaxonomy_term__triDescription
  weight: Int
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  content_translation_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalTaxonomy_term__triRelationships
  vid: DrupalTaxonomy_term__triVid
  content_translation_uid: DrupalTaxonomy_term__triContent_translation_uid
}

""""""
type DrupalTaxonomy_term__triDescription {
  value: String
  processed: String
}

""""""
type DrupalTaxonomy_term__triRelationships {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  content_translation_uid: DrupalUser__user
}

""""""
type DrupalTaxonomy_term__triVid {
  drupal_internal__target_id: String
}

""""""
type DrupalTaxonomy_term__triContent_translation_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalTaxonomy_term__stu implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__tid: Int
  drupal_internal__revision_id: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  description: DrupalTaxonomy_term__stuDescription
  weight: Int
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  content_translation_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalTaxonomy_term__stuRelationships
  vid: DrupalTaxonomy_term__stuVid
  content_translation_uid: DrupalTaxonomy_term__stuContent_translation_uid
}

""""""
type DrupalTaxonomy_term__stuDescription {
  value: String
  processed: String
}

""""""
type DrupalTaxonomy_term__stuRelationships {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  parent: [DrupalTaxonomy_term__stu]
  content_translation_uid: DrupalUser__user
  DrupalTaxonomy_term__stu: [DrupalTaxonomy_term__stu]
}

""""""
type DrupalTaxonomy_term__stuVid {
  drupal_internal__target_id: String
}

""""""
type DrupalTaxonomy_term__stuContent_translation_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalTaxonomy_term__vaswo implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__tid: Int
  drupal_internal__revision_id: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  description: DrupalTaxonomy_term__vaswoDescription
  weight: Int
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  content_translation_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalTaxonomy_term__vaswoRelationships
  vid: DrupalTaxonomy_term__vaswoVid
  content_translation_uid: DrupalTaxonomy_term__vaswoContent_translation_uid
}

""""""
type DrupalTaxonomy_term__vaswoDescription {
  value: String
  processed: String
}

""""""
type DrupalTaxonomy_term__vaswoRelationships {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  content_translation_uid: DrupalUser__user
}

""""""
type DrupalTaxonomy_term__vaswoVid {
  drupal_internal__target_id: String
}

""""""
type DrupalTaxonomy_term__vaswoContent_translation_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalTaxonomy_term__lomolaf implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__tid: Int
  drupal_internal__revision_id: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  description: DrupalTaxonomy_term__lomolafDescription
  weight: Int
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  content_translation_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalTaxonomy_term__lomolafRelationships
  vid: DrupalTaxonomy_term__lomolafVid
  content_translation_uid: DrupalTaxonomy_term__lomolafContent_translation_uid
}

""""""
type DrupalTaxonomy_term__lomolafDescription {
  value: String
  processed: String
}

""""""
type DrupalTaxonomy_term__lomolafRelationships {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  parent: [DrupalTaxonomy_term__lomolaf]
  content_translation_uid: DrupalUser__user
  DrupalTaxonomy_term__lomolaf: [DrupalTaxonomy_term__lomolaf]
}

""""""
type DrupalTaxonomy_term__lomolafVid {
  drupal_internal__target_id: String
}

""""""
type DrupalTaxonomy_term__lomolafContent_translation_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalTaxonomy_term__clas implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__tid: Int
  drupal_internal__revision_id: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  description: DrupalTaxonomy_term__clasDescription
  weight: Int
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  content_translation_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalTaxonomy_term__clasRelationships
  vid: DrupalTaxonomy_term__clasVid
  content_translation_uid: DrupalTaxonomy_term__clasContent_translation_uid
}

""""""
type DrupalTaxonomy_term__clasDescription {
  value: String
  processed: String
}

""""""
type DrupalTaxonomy_term__clasRelationships {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  content_translation_uid: DrupalUser__user
}

""""""
type DrupalTaxonomy_term__clasVid {
  drupal_internal__target_id: String
}

""""""
type DrupalTaxonomy_term__clasContent_translation_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalTaxonomy_term__traw implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__tid: Int
  drupal_internal__revision_id: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  description: DrupalTaxonomy_term__trawDescription
  weight: Int
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  content_translation_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalTaxonomy_term__trawRelationships
  vid: DrupalTaxonomy_term__trawVid
  content_translation_uid: DrupalTaxonomy_term__trawContent_translation_uid
}

""""""
type DrupalTaxonomy_term__trawDescription {
  value: String
  processed: String
}

""""""
type DrupalTaxonomy_term__trawRelationships {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  content_translation_uid: DrupalUser__user
}

""""""
type DrupalTaxonomy_term__trawVid {
  drupal_internal__target_id: String
}

""""""
type DrupalTaxonomy_term__trawContent_translation_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalTaxonomy_term__uasufrotru implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__tid: Int
  drupal_internal__revision_id: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  description: DrupalTaxonomy_term__uasufrotruDescription
  weight: Int
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  content_translation_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalTaxonomy_term__uasufrotruRelationships
  vid: DrupalTaxonomy_term__uasufrotruVid
  content_translation_uid: DrupalTaxonomy_term__uasufrotruContent_translation_uid
}

""""""
type DrupalTaxonomy_term__uasufrotruDescription {
  value: String
  processed: String
}

""""""
type DrupalTaxonomy_term__uasufrotruRelationships {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  parent: [DrupalTaxonomy_term__uasufrotru]
  content_translation_uid: DrupalUser__user
  DrupalTaxonomy_term__uasufrotru: [DrupalTaxonomy_term__uasufrotru]
}

""""""
type DrupalTaxonomy_term__uasufrotruVid {
  drupal_internal__target_id: String
}

""""""
type DrupalTaxonomy_term__uasufrotruContent_translation_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalTaxonomy_term__uiprawrunati implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__tid: Int
  drupal_internal__revision_id: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  description: DrupalTaxonomy_term__uiprawrunatiDescription
  weight: Int
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  content_translation_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalTaxonomy_term__uiprawrunatiRelationships
  vid: DrupalTaxonomy_term__uiprawrunatiVid
  content_translation_uid: DrupalTaxonomy_term__uiprawrunatiContent_translation_uid
}

""""""
type DrupalTaxonomy_term__uiprawrunatiDescription {
  value: String
  processed: String
}

""""""
type DrupalTaxonomy_term__uiprawrunatiRelationships {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  parent: [DrupalTaxonomy_term__uiprawrunati]
  content_translation_uid: DrupalUser__user
  DrupalTaxonomy_term__uiprawrunati: [DrupalTaxonomy_term__uiprawrunati]
}

""""""
type DrupalTaxonomy_term__uiprawrunatiVid {
  drupal_internal__target_id: String
}

""""""
type DrupalTaxonomy_term__uiprawrunatiContent_translation_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalTaxonomy_term__slochat implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__tid: Int
  drupal_internal__revision_id: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  description: DrupalTaxonomy_term__slochatDescription
  weight: Int
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  content_translation_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalTaxonomy_term__slochatRelationships
  vid: DrupalTaxonomy_term__slochatVid
  content_translation_uid: DrupalTaxonomy_term__slochatContent_translation_uid
}

""""""
type DrupalTaxonomy_term__slochatDescription {
  value: String
  processed: String
}

""""""
type DrupalTaxonomy_term__slochatRelationships {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  content_translation_uid: DrupalUser__user
}

""""""
type DrupalTaxonomy_term__slochatVid {
  drupal_internal__target_id: String
}

""""""
type DrupalTaxonomy_term__slochatContent_translation_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalTaxonomy_term__cl implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__tid: Int
  drupal_internal__revision_id: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  description: DrupalTaxonomy_term__clDescription
  weight: Int
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  content_translation_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalTaxonomy_term__clRelationships
  vid: DrupalTaxonomy_term__clVid
  content_translation_uid: DrupalTaxonomy_term__clContent_translation_uid
}

""""""
type DrupalTaxonomy_term__clDescription {
  value: String
  processed: String
}

""""""
type DrupalTaxonomy_term__clRelationships {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  parent: [DrupalTaxonomy_term__cl]
  content_translation_uid: DrupalUser__user
  DrupalTaxonomy_term__cl: [DrupalTaxonomy_term__cl]
}

""""""
type DrupalTaxonomy_term__clVid {
  drupal_internal__target_id: String
}

""""""
type DrupalTaxonomy_term__clContent_translation_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalTaxonomy_term__gestep implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__tid: Int
  drupal_internal__revision_id: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  description: DrupalTaxonomy_term__gestepDescription
  weight: Int
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  content_translation_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalTaxonomy_term__gestepRelationships
  vid: DrupalTaxonomy_term__gestepVid
  content_translation_uid: DrupalTaxonomy_term__gestepContent_translation_uid
}

""""""
type DrupalTaxonomy_term__gestepDescription {
  value: String
  processed: String
}

""""""
type DrupalTaxonomy_term__gestepRelationships {
  DrupalNode__nik_content_type: [DrupalNode__nik_content_type]
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  content_translation_uid: DrupalUser__user
}

""""""
type DrupalTaxonomy_term__gestepVid {
  drupal_internal__target_id: String
}

""""""
type DrupalTaxonomy_term__gestepContent_translation_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalTaxonomy_term__belatub implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__tid: Int
  drupal_internal__revision_id: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  description: DrupalTaxonomy_term__belatubDescription
  weight: Int
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  content_translation_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalTaxonomy_term__belatubRelationships
  vid: DrupalTaxonomy_term__belatubVid
  content_translation_uid: DrupalTaxonomy_term__belatubContent_translation_uid
}

""""""
type DrupalTaxonomy_term__belatubDescription {
  value: String
  processed: String
}

""""""
type DrupalTaxonomy_term__belatubRelationships {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  parent: [DrupalTaxonomy_term__belatub]
  content_translation_uid: DrupalUser__user
  DrupalTaxonomy_term__belatub: [DrupalTaxonomy_term__belatub]
}

""""""
type DrupalTaxonomy_term__belatubVid {
  drupal_internal__target_id: String
}

""""""
type DrupalTaxonomy_term__belatubContent_translation_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalTaxonomy_term__ciVid {
  drupal_internal__target_id: String
}

""""""
type DrupalTaxonomy_term__ciContent_translation_uid {
  drupal_internal__target_id: Int
}

""""""
union DrupalNode__drupal_test_content_typeDrupalNode__nik_content_typeDrupalNode__pageDrupalNode__test_pageDrupalNode__userUnion = DrupalNode__drupal_test_content_type | DrupalNode__nik_content_type | DrupalNode__page | DrupalNode__test_page | DrupalNode__user

""""""
type DrupalNode__page implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__nid: Int
  drupal_internal__vid: Int
  langcode: String
  revision_timestamp(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  title: String
  created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  promote: Boolean
  sticky: Boolean
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  body: DrupalNode__pageBody
  field_title: DrupalNode__pageField_title
  relationships: DrupalNode__pageRelationships
  node_type: DrupalNode__pageNode_type
  revision_uid: DrupalNode__pageRevision_uid
  uid: DrupalNode__pageUid
}

""""""
type DrupalNode__pageBody {
  value: String
  format: String
  processed: String
  summary: String
}

""""""
type DrupalNode__pageField_title {
  value: String
  format: String
  processed: String
}

""""""
type DrupalNode__pageRelationships {
  node_type: DrupalNode_type__node_type
  revision_uid: DrupalUser__user
  uid: DrupalUser__user
  DrupalNode__nik_content_type: [DrupalNode__nik_content_type]
}

""""""
type DrupalNode__pageNode_type {
  drupal_internal__target_id: String
}

""""""
type DrupalNode__pageRevision_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalNode__pageUid {
  drupal_internal__target_id: Int
}

""""""
type DrupalNode__test_page implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__nid: Int
  drupal_internal__vid: Int
  langcode: String
  revision_timestamp(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  title: String
  created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  promote: Boolean
  sticky: Boolean
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  body: DrupalNode__test_pageBody
  field_test_field: String
  relationships: DrupalNode__test_pageRelationships
  node_type: DrupalNode__test_pageNode_type
  revision_uid: DrupalNode__test_pageRevision_uid
  uid: DrupalNode__test_pageUid
  field_reference_list: [DrupalNode__test_pageField_reference_list]
}

""""""
type DrupalNode__test_pageBody {
  value: String
  format: String
  processed: String
  summary: String
}

""""""
type DrupalNode__test_pageRelationships {
  node_type: DrupalNode_type__node_type
  revision_uid: DrupalUser__user
  uid: DrupalUser__user
  field_reference_list: [DrupalUser__user]
  DrupalNode__nik_content_type: [DrupalNode__nik_content_type]
}

""""""
type DrupalNode__test_pageNode_type {
  drupal_internal__target_id: String
}

""""""
type DrupalNode__test_pageRevision_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalNode__test_pageUid {
  drupal_internal__target_id: Int
}

""""""
type DrupalNode__test_pageField_reference_list {
  drupal_internal__target_id: Int
}

""""""
union DrupalNode__drupal_test_content_typeDrupalNode__nik_content_typeDrupalNode__test_pageUnion = DrupalNode__drupal_test_content_type | DrupalNode__nik_content_type | DrupalNode__test_page

""""""
type DrupalNode__nik_content_typeNode_type {
  drupal_internal__target_id: String
}

""""""
type DrupalNode__nik_content_typeRevision_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalNode__nik_content_typeUid {
  drupal_internal__target_id: Int
}

""""""
type DrupalNode__nik_content_typeField_adf {
  drupal_internal__target_id: Int
}

""""""
type DrupalNode__nik_content_typeField_list_union_type {
  drupal_internal__target_id: Int
  arity: Int
}

""""""
type DrupalNode__nik_content_typeField_test_content {
  drupal_internal__target_id: Int
}

""""""
type DrupalNode__nik_content_typeField_list_reference {
  drupal_internal__target_id: Int
}

""""""
type DrupalNode__nik_content_typeField_image_reference {
  alt: String
  title: String
  width: Int
  height: Int
  drupal_internal__target_id: Int
}

""""""
type DrupalNode__nik_content_typeField_list_file_image {
  alt: String
  title: String
  width: Int
  height: Int
  drupal_internal__target_id: Int
}

""""""
type DrupalNode__nik_content_typeField_other_reference_revision {
  target_revision_id: Int
  drupal_internal__target_id: Int
}

""""""
type DrupalNode__nik_content_typeField_paragraph {
  target_revision_id: Int
  drupal_internal__target_id: Int
}

""""""
type DrupalNode__nik_content_typeField_single_paragraph {
  target_revision_id: Int
  drupal_internal__target_id: Int
}

""""""
type DrupalNode__nik_content_typeField_single_reference {
  drupal_internal__target_id: Int
}

""""""
type DrupalNode__nik_content_typeField_union_single_reference {
  drupal_internal__target_id: Int
}

""""""
type DrupalNode__userNode_type {
  drupal_internal__target_id: String
}

""""""
type DrupalNode__userRevision_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalNode__userUid {
  drupal_internal__target_id: Int
}

""""""
type DrupalNode__product_page implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__nid: Int
  drupal_internal__vid: Int
  langcode: String
  revision_timestamp(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  title: String
  created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  promote: Boolean
  sticky: Boolean
  default_langcode: Boolean
  revision_translation_affected: Boolean
  path: DrupalNode__product_pagePath
  content_translation_source: String
  content_translation_outdated: Boolean
  field_contentstack_id: String
  field_description: String
  relationships: DrupalNode__product_pageRelationships
  node_type: DrupalNode__product_pageNode_type
  revision_uid: DrupalNode__product_pageRevision_uid
  uid: DrupalNode__product_pageUid
}

""""""
type DrupalNode__product_pagePath {
  langcode: String
}

""""""
type DrupalNode__product_pageRelationships {
  node_type: DrupalNode_type__node_type
  revision_uid: DrupalUser__user
  uid: DrupalUser__user
}

""""""
type DrupalNode__product_pageNode_type {
  drupal_internal__target_id: String
}

""""""
type DrupalNode__product_pageRevision_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalNode__product_pageUid {
  drupal_internal__target_id: Int
}

""""""
type DrupalNode__drupal_test_content_typeNode_type {
  drupal_internal__target_id: String
}

""""""
type DrupalNode__drupal_test_content_typeRevision_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalNode__drupal_test_content_typeUid {
  drupal_internal__target_id: Int
}

""""""
type DrupalMedia__image implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__mid: Int
  drupal_internal__vid: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  path: DrupalMedia__imagePath
  content_translation_source: String
  content_translation_outdated: Boolean
  relationships: DrupalMedia__imageRelationships
  bundle: DrupalMedia__imageBundle
  uid: DrupalMedia__imageUid
  thumbnail: DrupalMedia__imageThumbnail
  field_media_image: DrupalMedia__imageField_media_image
}

""""""
type DrupalMedia__imagePath {
  langcode: String
}

""""""
type DrupalMedia__imageRelationships {
  bundle: DrupalMedia_type__media_type
  uid: DrupalUser__user
  thumbnail: DrupalFile__file
  field_media_image: DrupalFile__file
}

""""""
type DrupalMedia_type__media_type implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  label: String
  relationships: DrupalMedia_type__media_typeRelationships
}

""""""
type DrupalMedia_type__media_typeRelationships {
  DrupalMedia__image: [DrupalMedia__image]
  DrupalMedia__document: [DrupalMedia__document]
  DrupalMedia__video: [DrupalMedia__video]
  DrupalMedia__remote_video: [DrupalMedia__remote_video]
  DrupalMedia__audio: [DrupalMedia__audio]
}

""""""
type DrupalMedia__document implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__mid: Int
  drupal_internal__vid: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  relationships: DrupalMedia__documentRelationships
  bundle: DrupalMedia__documentBundle
  uid: DrupalMedia__documentUid
  thumbnail: DrupalMedia__documentThumbnail
  field_media_document: DrupalMedia__documentField_media_document
}

""""""
type DrupalMedia__documentRelationships {
  bundle: DrupalMedia_type__media_type
  uid: DrupalUser__user
  thumbnail: DrupalFile__file
  field_media_document: DrupalFile__file
}

""""""
type DrupalMedia__documentBundle {
  drupal_internal__target_id: String
}

""""""
type DrupalMedia__documentUid {
  drupal_internal__target_id: Int
}

""""""
type DrupalMedia__documentThumbnail {
  alt: String
  width: Int
  height: Int
  drupal_internal__target_id: Int
}

""""""
type DrupalMedia__documentField_media_document {
  display: Boolean
  description: String
  drupal_internal__target_id: Int
}

""""""
type DrupalMedia__video implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__mid: Int
  drupal_internal__vid: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  relationships: DrupalMedia__videoRelationships
  bundle: DrupalMedia__videoBundle
  uid: DrupalMedia__videoUid
  thumbnail: DrupalMedia__videoThumbnail
  field_media_video_file: DrupalMedia__videoField_media_video_file
}

""""""
type DrupalMedia__videoRelationships {
  bundle: DrupalMedia_type__media_type
  uid: DrupalUser__user
  thumbnail: DrupalFile__file
  field_media_video_file: DrupalFile__file
}

""""""
type DrupalMedia__videoBundle {
  drupal_internal__target_id: String
}

""""""
type DrupalMedia__videoUid {
  drupal_internal__target_id: Int
}

""""""
type DrupalMedia__videoThumbnail {
  alt: String
  width: Int
  height: Int
  drupal_internal__target_id: Int
}

""""""
type DrupalMedia__videoField_media_video_file {
  display: Boolean
  description: String
  drupal_internal__target_id: Int
}

""""""
type DrupalMedia__remote_video implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__mid: Int
  drupal_internal__vid: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  field_media_oembed_video: String
  relationships: DrupalMedia__remote_videoRelationships
  bundle: DrupalMedia__remote_videoBundle
  uid: DrupalMedia__remote_videoUid
  thumbnail: DrupalMedia__remote_videoThumbnail
}

""""""
type DrupalMedia__remote_videoRelationships {
  bundle: DrupalMedia_type__media_type
  uid: DrupalUser__user
  thumbnail: DrupalFile__file
}

""""""
type DrupalMedia__remote_videoBundle {
  drupal_internal__target_id: String
}

""""""
type DrupalMedia__remote_videoUid {
  drupal_internal__target_id: Int
}

""""""
type DrupalMedia__remote_videoThumbnail {
  alt: String
  width: Int
  height: Int
  drupal_internal__target_id: Int
}

""""""
type DrupalMedia__audio implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__mid: Int
  drupal_internal__vid: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  status: Boolean
  name: String
  created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  relationships: DrupalMedia__audioRelationships
  bundle: DrupalMedia__audioBundle
  uid: DrupalMedia__audioUid
  thumbnail: DrupalMedia__audioThumbnail
  field_media_audio_file: DrupalMedia__audioField_media_audio_file
}

""""""
type DrupalMedia__audioRelationships {
  bundle: DrupalMedia_type__media_type
  uid: DrupalUser__user
  thumbnail: DrupalFile__file
  field_media_audio_file: DrupalFile__file
}

""""""
type DrupalMedia__audioBundle {
  drupal_internal__target_id: String
}

""""""
type DrupalMedia__audioUid {
  drupal_internal__target_id: Int
}

""""""
type DrupalMedia__audioThumbnail {
  alt: String
  width: Int
  height: Int
  drupal_internal__target_id: Int
}

""""""
type DrupalMedia__audioField_media_audio_file {
  display: Boolean
  description: String
  drupal_internal__target_id: Int
}

""""""
type DrupalMedia__imageBundle {
  drupal_internal__target_id: String
}

""""""
type DrupalMedia__imageUid {
  drupal_internal__target_id: Int
}

""""""
type DrupalMedia__imageThumbnail {
  alt: String
  width: Int
  height: Int
  drupal_internal__target_id: Int
}

""""""
type DrupalMedia__imageField_media_image {
  alt: String
  title: String
  width: Int
  height: Int
  drupal_internal__target_id: Int
}

""""""
type DrupalBlock_content__basic implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__id: Int
  drupal_internal__revision_id: Int
  langcode: String
  revision_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  revision_log: String
  status: Boolean
  info: String
  changed(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  reusable: Boolean
  default_langcode: Boolean
  revision_translation_affected: Boolean
  content_translation_source: String
  content_translation_outdated: Boolean
  content_translation_created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  relationships: DrupalBlock_content__basicRelationships
  block_content_type: DrupalBlock_content__basicBlock_content_type
  content_translation_uid: DrupalBlock_content__basicContent_translation_uid
}

""""""
type DrupalBlock_content__basicRelationships {
  block_content_type: DrupalBlock_content_type__block_content_type
  content_translation_uid: DrupalUser__user
}

""""""
type DrupalBlock_content_type__block_content_type implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  langcode: String
  status: Boolean
  drupal_internal__id: String
  label: String
  revision: Int
  description: String
  relationships: DrupalBlock_content_type__block_content_typeRelationships
}

""""""
type DrupalBlock_content_type__block_content_typeRelationships {
  DrupalBlock_content__basic: [DrupalBlock_content__basic]
}

""""""
type DrupalBlock_content__basicBlock_content_type {
  drupal_internal__target_id: String
}

""""""
type DrupalBlock_content__basicContent_translation_uid {
  drupal_internal__target_id: Int
}

""""""
type DrupalFile__fileUid {
  drupal_internal__target_id: Int
}

""""""
input DrupalFile__fileUriFilterInput {
  value: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

""""""
input DrupalFile__fileRelationshipsFilterInput {
  uid: DrupalUser__userFilterInput
  DrupalMedia__audio: DrupalMedia__audioFilterInput
  DrupalMedia__image: DrupalMedia__imageFilterInput
  DrupalMedia__document: DrupalMedia__documentFilterInput
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeFilterInput
  DrupalMedia__remote_video: DrupalMedia__remote_videoFilterInput
  DrupalMedia__video: DrupalMedia__videoFilterInput
}

""""""
input DrupalUser__userFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  display_name: StringQueryOperatorInput
  relationships: DrupalUser__userRelationshipsFilterInput
}

""""""
input DrupalUser__userRelationshipsFilterInput {
  DrupalNode__drupal_test_content_type: DrupalNode__drupal_test_content_typeFilterInput
  DrupalNode__page: DrupalNode__pageFilterInput
  DrupalNode__test_page: DrupalNode__test_pageFilterInput
  DrupalMedia__image: DrupalMedia__imageFilterInput
  DrupalNode__user: DrupalNode__userFilterInput
  DrupalMedia__document: DrupalMedia__documentFilterInput
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeFilterInput
  DrupalBlock_content__basic: DrupalBlock_content__basicFilterInput
  DrupalFile__file: DrupalFile__fileFilterInput
  DrupalNode__product_page: DrupalNode__product_pageFilterInput
  DrupalTaxonomy_term__belatub: DrupalTaxonomy_term__belatubFilterInput
  DrupalTaxonomy_term__chest: DrupalTaxonomy_term__chestFilterInput
  DrupalTaxonomy_term__ci: DrupalTaxonomy_term__ciFilterInput
  DrupalTaxonomy_term__cishuswalus: DrupalTaxonomy_term__cishuswalusFilterInput
  DrupalTaxonomy_term__cl: DrupalTaxonomy_term__clFilterInput
  DrupalTaxonomy_term__clas: DrupalTaxonomy_term__clasFilterInput
  DrupalTaxonomy_term__devup: DrupalTaxonomy_term__devupFilterInput
  DrupalTaxonomy_term__drouawipas: DrupalTaxonomy_term__drouawipasFilterInput
  DrupalTaxonomy_term__gestep: DrupalTaxonomy_term__gestepFilterInput
  DrupalTaxonomy_term__hiwrewru: DrupalTaxonomy_term__hiwrewruFilterInput
  DrupalTaxonomy_term__lomolaf: DrupalTaxonomy_term__lomolafFilterInput
  DrupalTaxonomy_term__noui: DrupalTaxonomy_term__nouiFilterInput
  DrupalTaxonomy_term__rej: DrupalTaxonomy_term__rejFilterInput
  DrupalTaxonomy_term__shitabreko: DrupalTaxonomy_term__shitabrekoFilterInput
  DrupalTaxonomy_term__slochat: DrupalTaxonomy_term__slochatFilterInput
  DrupalTaxonomy_term__stu: DrupalTaxonomy_term__stuFilterInput
  DrupalTaxonomy_term__testing_taxonomy: DrupalTaxonomy_term__testing_taxonomyFilterInput
  DrupalTaxonomy_term__ti: DrupalTaxonomy_term__tiFilterInput
  DrupalTaxonomy_term__traw: DrupalTaxonomy_term__trawFilterInput
  DrupalTaxonomy_term__tri: DrupalTaxonomy_term__triFilterInput
  DrupalTaxonomy_term__uasufrotru: DrupalTaxonomy_term__uasufrotruFilterInput
  DrupalTaxonomy_term__uiprawrunati: DrupalTaxonomy_term__uiprawrunatiFilterInput
  DrupalTaxonomy_term__uutr: DrupalTaxonomy_term__uutrFilterInput
  DrupalTaxonomy_term__vaswo: DrupalTaxonomy_term__vaswoFilterInput
  DrupalMedia__remote_video: DrupalMedia__remote_videoFilterInput
  DrupalMedia__audio: DrupalMedia__audioFilterInput
  DrupalMedia__video: DrupalMedia__videoFilterInput
}

""""""
input DrupalNode__drupal_test_content_typeFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__nid: IntQueryOperatorInput
  drupal_internal__vid: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_timestamp: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  title: StringQueryOperatorInput
  created: DateQueryOperatorInput
  changed: DateQueryOperatorInput
  promote: BooleanQueryOperatorInput
  sticky: BooleanQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  path: DrupalNode__drupal_test_content_typePathFilterInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  body: DrupalNode__drupal_test_content_typeBodyFilterInput
  field_list_text_field: StringQueryOperatorInput
  relationships: DrupalNode__drupal_test_content_typeRelationshipsFilterInput
  node_type: DrupalNode__drupal_test_content_typeNode_typeFilterInput
  revision_uid: DrupalNode__drupal_test_content_typeRevision_uidFilterInput
  uid: DrupalNode__drupal_test_content_typeUidFilterInput
}

""""""
input DrupalNode__drupal_test_content_typePathFilterInput {
  langcode: StringQueryOperatorInput
}

""""""
input DrupalNode__drupal_test_content_typeBodyFilterInput {
  value: StringQueryOperatorInput
  format: StringQueryOperatorInput
  processed: StringQueryOperatorInput
  summary: StringQueryOperatorInput
}

""""""
input DrupalNode__drupal_test_content_typeRelationshipsFilterInput {
  node_type: DrupalNode_type__node_typeFilterInput
  revision_uid: DrupalUser__userFilterInput
  uid: DrupalUser__userFilterInput
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeFilterInput
}

""""""
input DrupalNode_type__node_typeFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  langcode: StringQueryOperatorInput
  status: BooleanQueryOperatorInput
  dependencies: DrupalNode_type__node_typeDependenciesFilterInput
  third_party_settings: DrupalNode_type__node_typeThird_party_settingsFilterInput
  name: StringQueryOperatorInput
  drupal_internal__type: StringQueryOperatorInput
  description: StringQueryOperatorInput
  help: StringQueryOperatorInput
  new_revision: BooleanQueryOperatorInput
  preview_mode: IntQueryOperatorInput
  display_submitted: BooleanQueryOperatorInput
  relationships: DrupalNode_type__node_typeRelationshipsFilterInput
}

""""""
input DrupalNode_type__node_typeDependenciesFilterInput {
  module: StringQueryOperatorInput
}

""""""
input DrupalNode_type__node_typeThird_party_settingsFilterInput {
  menu_ui: DrupalNode_type__node_typeThird_party_settingsMenu_uiFilterInput
  gatsby: DrupalNode_type__node_typeThird_party_settingsGatsbyFilterInput
}

""""""
input DrupalNode_type__node_typeThird_party_settingsMenu_uiFilterInput {
  available_menus: StringQueryOperatorInput
  parent: StringQueryOperatorInput
}

""""""
input DrupalNode_type__node_typeThird_party_settingsGatsbyFilterInput {
  preview: BooleanQueryOperatorInput
}

""""""
input DrupalNode_type__node_typeRelationshipsFilterInput {
  DrupalNode__user: DrupalNode__userFilterInput
  DrupalNode__page: DrupalNode__pageFilterInput
  DrupalNode__product_page: DrupalNode__product_pageFilterInput
  DrupalNode__drupal_test_content_type: DrupalNode__drupal_test_content_typeFilterInput
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeFilterInput
  DrupalNode__test_page: DrupalNode__test_pageFilterInput
}

""""""
input DrupalNode__userFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__nid: IntQueryOperatorInput
  drupal_internal__vid: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_timestamp: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  title: StringQueryOperatorInput
  created: DateQueryOperatorInput
  changed: DateQueryOperatorInput
  promote: BooleanQueryOperatorInput
  sticky: BooleanQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  body: DrupalNode__userBodyFilterInput
  relationships: DrupalNode__userRelationshipsFilterInput
  node_type: DrupalNode__userNode_typeFilterInput
  revision_uid: DrupalNode__userRevision_uidFilterInput
  uid: DrupalNode__userUidFilterInput
}

""""""
input DrupalNode__userBodyFilterInput {
  value: StringQueryOperatorInput
  format: StringQueryOperatorInput
  processed: StringQueryOperatorInput
  summary: StringQueryOperatorInput
}

""""""
input DrupalNode__userRelationshipsFilterInput {
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeFilterInput
  node_type: DrupalNode_type__node_typeFilterInput
  revision_uid: DrupalUser__userFilterInput
  uid: DrupalUser__userFilterInput
}

""""""
input DrupalNode__nik_content_typeFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__nid: IntQueryOperatorInput
  drupal_internal__vid: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_timestamp: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  title: StringQueryOperatorInput
  created: DateQueryOperatorInput
  changed: DateQueryOperatorInput
  promote: BooleanQueryOperatorInput
  sticky: BooleanQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  field_accordian_text: DrupalNode__nik_content_typeField_accordian_textFilterInput
  field_boolean_test: BooleanQueryOperatorInput
  field_boolean_test_list: BooleanQueryOperatorInput
  field_contentstack_product: StringQueryOperatorInput
  field_date: DateQueryOperatorInput
  field_email: StringQueryOperatorInput
  field_hello: StringQueryOperatorInput
  field_link: DrupalNode__nik_content_typeField_linkFilterInput
  field_list_text_field: StringQueryOperatorInput
  field_test_body: DrupalNode__nik_content_typeField_test_bodyFilterInput
  field_test_object: DrupalNode__nik_content_typeField_test_objectFilterInput
  field_test_text_plain: StringQueryOperatorInput
  field_text_plain_list: StringQueryOperatorInput
  field_timestamp: DateQueryOperatorInput
  relationships: DrupalNode__nik_content_typeRelationshipsFilterInput
  node_type: DrupalNode__nik_content_typeNode_typeFilterInput
  revision_uid: DrupalNode__nik_content_typeRevision_uidFilterInput
  uid: DrupalNode__nik_content_typeUidFilterInput
  field_adf: DrupalNode__nik_content_typeField_adfFilterInput
  field_list_union_type: DrupalNode__nik_content_typeField_list_union_typeFilterInput
  field_test_content: DrupalNode__nik_content_typeField_test_contentFilterInput
  field_list_reference: DrupalNode__nik_content_typeField_list_referenceFilterInput
  field_image_reference: DrupalNode__nik_content_typeField_image_referenceFilterInput
  field_list_file_image: DrupalNode__nik_content_typeField_list_file_imageFilterInput
  field_other_reference_revision: DrupalNode__nik_content_typeField_other_reference_revisionFilterInput
  field_paragraph: DrupalNode__nik_content_typeField_paragraphFilterInput
  field_single_paragraph: DrupalNode__nik_content_typeField_single_paragraphFilterInput
  field_single_reference: DrupalNode__nik_content_typeField_single_referenceFilterInput
  field_union_single_reference: DrupalNode__nik_content_typeField_union_single_referenceFilterInput
}

""""""
input DrupalNode__nik_content_typeField_accordian_textFilterInput {
  value: StringQueryOperatorInput
  format: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalNode__nik_content_typeField_linkFilterInput {
  uri: StringQueryOperatorInput
  title: StringQueryOperatorInput
}

""""""
input DrupalNode__nik_content_typeField_test_bodyFilterInput {
  value: StringQueryOperatorInput
  format: StringQueryOperatorInput
  processed: StringQueryOperatorInput
  summary: StringQueryOperatorInput
}

""""""
input DrupalNode__nik_content_typeField_test_objectFilterInput {
  value: StringQueryOperatorInput
  format: StringQueryOperatorInput
  processed: StringQueryOperatorInput
  summary: StringQueryOperatorInput
}

""""""
input DrupalNode__nik_content_typeRelationshipsFilterInput {
  node_type: DrupalNode_type__node_typeFilterInput
  revision_uid: DrupalUser__userFilterInput
  uid: DrupalUser__userFilterInput
  field_list_file_image: DrupalFile__fileFilterInput
  field_list_reference: DrupalNode__drupal_test_content_typeFilterInput
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeFilterInput
  field_image_reference: DrupalFile__fileFilterInput
  field_other_reference_revision: DrupalNode__drupal_test_content_typeFilterInput
  field_single_reference: DrupalNode__drupal_test_content_typeFilterInput
  field_union_single_reference: DrupalNode__drupal_test_content_typeFilterInput
}

""""""
input DrupalFile__fileFilterInput {
  drupal_id: StringQueryOperatorInput
  drupal_internal__fid: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  filename: StringQueryOperatorInput
  uri: DrupalFile__fileUriFilterInput
  filemime: StringQueryOperatorInput
  filesize: IntQueryOperatorInput
  status: BooleanQueryOperatorInput
  created: DateQueryOperatorInput
  changed: DateQueryOperatorInput
  mimeType: StringQueryOperatorInput
  url: StringQueryOperatorInput
  relationships: DrupalFile__fileRelationshipsFilterInput
  uid: DrupalFile__fileUidFilterInput
  placeholderUrl: StringQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  publicUrl: StringQueryOperatorInput
  resize: RemoteFileResizeFilterInput
  gatsbyImage: GatsbyImageDataQueryOperatorInput
}

""""""
input DrupalFile__fileUidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalNode__nik_content_typeNode_typeFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalNode__nik_content_typeRevision_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalNode__nik_content_typeUidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalNode__nik_content_typeField_adfFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalNode__nik_content_typeField_list_union_typeFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
  arity: IntQueryOperatorInput
}

""""""
input DrupalNode__nik_content_typeField_test_contentFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalNode__nik_content_typeField_list_referenceFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalNode__nik_content_typeField_image_referenceFilterInput {
  alt: StringQueryOperatorInput
  title: StringQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalNode__nik_content_typeField_list_file_imageFilterInput {
  alt: StringQueryOperatorInput
  title: StringQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalNode__nik_content_typeField_other_reference_revisionFilterInput {
  target_revision_id: IntQueryOperatorInput
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalNode__nik_content_typeField_paragraphFilterInput {
  target_revision_id: IntQueryOperatorInput
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalNode__nik_content_typeField_single_paragraphFilterInput {
  target_revision_id: IntQueryOperatorInput
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalNode__nik_content_typeField_single_referenceFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalNode__nik_content_typeField_union_single_referenceFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalNode__userNode_typeFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalNode__userRevision_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalNode__userUidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalNode__pageFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__nid: IntQueryOperatorInput
  drupal_internal__vid: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_timestamp: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  title: StringQueryOperatorInput
  created: DateQueryOperatorInput
  changed: DateQueryOperatorInput
  promote: BooleanQueryOperatorInput
  sticky: BooleanQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  body: DrupalNode__pageBodyFilterInput
  field_title: DrupalNode__pageField_titleFilterInput
  relationships: DrupalNode__pageRelationshipsFilterInput
  node_type: DrupalNode__pageNode_typeFilterInput
  revision_uid: DrupalNode__pageRevision_uidFilterInput
  uid: DrupalNode__pageUidFilterInput
}

""""""
input DrupalNode__pageBodyFilterInput {
  value: StringQueryOperatorInput
  format: StringQueryOperatorInput
  processed: StringQueryOperatorInput
  summary: StringQueryOperatorInput
}

""""""
input DrupalNode__pageField_titleFilterInput {
  value: StringQueryOperatorInput
  format: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalNode__pageRelationshipsFilterInput {
  node_type: DrupalNode_type__node_typeFilterInput
  revision_uid: DrupalUser__userFilterInput
  uid: DrupalUser__userFilterInput
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeFilterInput
}

""""""
input DrupalNode__pageNode_typeFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalNode__pageRevision_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalNode__pageUidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalNode__product_pageFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__nid: IntQueryOperatorInput
  drupal_internal__vid: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_timestamp: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  title: StringQueryOperatorInput
  created: DateQueryOperatorInput
  changed: DateQueryOperatorInput
  promote: BooleanQueryOperatorInput
  sticky: BooleanQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  path: DrupalNode__product_pagePathFilterInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  field_contentstack_id: StringQueryOperatorInput
  field_description: StringQueryOperatorInput
  relationships: DrupalNode__product_pageRelationshipsFilterInput
  node_type: DrupalNode__product_pageNode_typeFilterInput
  revision_uid: DrupalNode__product_pageRevision_uidFilterInput
  uid: DrupalNode__product_pageUidFilterInput
}

""""""
input DrupalNode__product_pagePathFilterInput {
  langcode: StringQueryOperatorInput
}

""""""
input DrupalNode__product_pageRelationshipsFilterInput {
  node_type: DrupalNode_type__node_typeFilterInput
  revision_uid: DrupalUser__userFilterInput
  uid: DrupalUser__userFilterInput
}

""""""
input DrupalNode__product_pageNode_typeFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalNode__product_pageRevision_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalNode__product_pageUidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalNode__test_pageFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__nid: IntQueryOperatorInput
  drupal_internal__vid: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_timestamp: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  title: StringQueryOperatorInput
  created: DateQueryOperatorInput
  changed: DateQueryOperatorInput
  promote: BooleanQueryOperatorInput
  sticky: BooleanQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  body: DrupalNode__test_pageBodyFilterInput
  field_test_field: StringQueryOperatorInput
  relationships: DrupalNode__test_pageRelationshipsFilterInput
  node_type: DrupalNode__test_pageNode_typeFilterInput
  revision_uid: DrupalNode__test_pageRevision_uidFilterInput
  uid: DrupalNode__test_pageUidFilterInput
  field_reference_list: DrupalNode__test_pageField_reference_listFilterInput
}

""""""
input DrupalNode__test_pageBodyFilterInput {
  value: StringQueryOperatorInput
  format: StringQueryOperatorInput
  processed: StringQueryOperatorInput
  summary: StringQueryOperatorInput
}

""""""
input DrupalNode__test_pageRelationshipsFilterInput {
  node_type: DrupalNode_type__node_typeFilterInput
  revision_uid: DrupalUser__userFilterInput
  uid: DrupalUser__userFilterInput
  field_reference_list: DrupalUser__userFilterInput
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeFilterInput
}

""""""
input DrupalNode__test_pageNode_typeFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalNode__test_pageRevision_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalNode__test_pageUidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalNode__test_pageField_reference_listFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalNode__drupal_test_content_typeNode_typeFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalNode__drupal_test_content_typeRevision_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalNode__drupal_test_content_typeUidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalMedia__imageFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__mid: IntQueryOperatorInput
  drupal_internal__vid: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  created: DateQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  path: DrupalMedia__imagePathFilterInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  relationships: DrupalMedia__imageRelationshipsFilterInput
  bundle: DrupalMedia__imageBundleFilterInput
  uid: DrupalMedia__imageUidFilterInput
  thumbnail: DrupalMedia__imageThumbnailFilterInput
  field_media_image: DrupalMedia__imageField_media_imageFilterInput
}

""""""
input DrupalMedia__imagePathFilterInput {
  langcode: StringQueryOperatorInput
}

""""""
input DrupalMedia__imageRelationshipsFilterInput {
  bundle: DrupalMedia_type__media_typeFilterInput
  uid: DrupalUser__userFilterInput
  thumbnail: DrupalFile__fileFilterInput
  field_media_image: DrupalFile__fileFilterInput
}

""""""
input DrupalMedia_type__media_typeFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  label: StringQueryOperatorInput
  relationships: DrupalMedia_type__media_typeRelationshipsFilterInput
}

""""""
input DrupalMedia_type__media_typeRelationshipsFilterInput {
  DrupalMedia__image: DrupalMedia__imageFilterInput
  DrupalMedia__document: DrupalMedia__documentFilterInput
  DrupalMedia__video: DrupalMedia__videoFilterInput
  DrupalMedia__remote_video: DrupalMedia__remote_videoFilterInput
  DrupalMedia__audio: DrupalMedia__audioFilterInput
}

""""""
input DrupalMedia__documentFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__mid: IntQueryOperatorInput
  drupal_internal__vid: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  created: DateQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  relationships: DrupalMedia__documentRelationshipsFilterInput
  bundle: DrupalMedia__documentBundleFilterInput
  uid: DrupalMedia__documentUidFilterInput
  thumbnail: DrupalMedia__documentThumbnailFilterInput
  field_media_document: DrupalMedia__documentField_media_documentFilterInput
}

""""""
input DrupalMedia__documentRelationshipsFilterInput {
  bundle: DrupalMedia_type__media_typeFilterInput
  uid: DrupalUser__userFilterInput
  thumbnail: DrupalFile__fileFilterInput
  field_media_document: DrupalFile__fileFilterInput
}

""""""
input DrupalMedia__documentBundleFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalMedia__documentUidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalMedia__documentThumbnailFilterInput {
  alt: StringQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalMedia__documentField_media_documentFilterInput {
  display: BooleanQueryOperatorInput
  description: StringQueryOperatorInput
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalMedia__videoFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__mid: IntQueryOperatorInput
  drupal_internal__vid: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  created: DateQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  relationships: DrupalMedia__videoRelationshipsFilterInput
  bundle: DrupalMedia__videoBundleFilterInput
  uid: DrupalMedia__videoUidFilterInput
  thumbnail: DrupalMedia__videoThumbnailFilterInput
  field_media_video_file: DrupalMedia__videoField_media_video_fileFilterInput
}

""""""
input DrupalMedia__videoRelationshipsFilterInput {
  bundle: DrupalMedia_type__media_typeFilterInput
  uid: DrupalUser__userFilterInput
  thumbnail: DrupalFile__fileFilterInput
  field_media_video_file: DrupalFile__fileFilterInput
}

""""""
input DrupalMedia__videoBundleFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalMedia__videoUidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalMedia__videoThumbnailFilterInput {
  alt: StringQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalMedia__videoField_media_video_fileFilterInput {
  display: BooleanQueryOperatorInput
  description: StringQueryOperatorInput
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalMedia__remote_videoFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__mid: IntQueryOperatorInput
  drupal_internal__vid: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  created: DateQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  field_media_oembed_video: StringQueryOperatorInput
  relationships: DrupalMedia__remote_videoRelationshipsFilterInput
  bundle: DrupalMedia__remote_videoBundleFilterInput
  uid: DrupalMedia__remote_videoUidFilterInput
  thumbnail: DrupalMedia__remote_videoThumbnailFilterInput
}

""""""
input DrupalMedia__remote_videoRelationshipsFilterInput {
  bundle: DrupalMedia_type__media_typeFilterInput
  uid: DrupalUser__userFilterInput
  thumbnail: DrupalFile__fileFilterInput
}

""""""
input DrupalMedia__remote_videoBundleFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalMedia__remote_videoUidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalMedia__remote_videoThumbnailFilterInput {
  alt: StringQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalMedia__audioFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__mid: IntQueryOperatorInput
  drupal_internal__vid: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  created: DateQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  relationships: DrupalMedia__audioRelationshipsFilterInput
  bundle: DrupalMedia__audioBundleFilterInput
  uid: DrupalMedia__audioUidFilterInput
  thumbnail: DrupalMedia__audioThumbnailFilterInput
  field_media_audio_file: DrupalMedia__audioField_media_audio_fileFilterInput
}

""""""
input DrupalMedia__audioRelationshipsFilterInput {
  bundle: DrupalMedia_type__media_typeFilterInput
  uid: DrupalUser__userFilterInput
  thumbnail: DrupalFile__fileFilterInput
  field_media_audio_file: DrupalFile__fileFilterInput
}

""""""
input DrupalMedia__audioBundleFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalMedia__audioUidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalMedia__audioThumbnailFilterInput {
  alt: StringQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalMedia__audioField_media_audio_fileFilterInput {
  display: BooleanQueryOperatorInput
  description: StringQueryOperatorInput
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalMedia__imageBundleFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalMedia__imageUidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalMedia__imageThumbnailFilterInput {
  alt: StringQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalMedia__imageField_media_imageFilterInput {
  alt: StringQueryOperatorInput
  title: StringQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalBlock_content__basicFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__id: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  revision_log: StringQueryOperatorInput
  status: BooleanQueryOperatorInput
  info: StringQueryOperatorInput
  changed: DateQueryOperatorInput
  reusable: BooleanQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  content_translation_created: DateQueryOperatorInput
  relationships: DrupalBlock_content__basicRelationshipsFilterInput
  block_content_type: DrupalBlock_content__basicBlock_content_typeFilterInput
  content_translation_uid: DrupalBlock_content__basicContent_translation_uidFilterInput
}

""""""
input DrupalBlock_content__basicRelationshipsFilterInput {
  block_content_type: DrupalBlock_content_type__block_content_typeFilterInput
  content_translation_uid: DrupalUser__userFilterInput
}

""""""
input DrupalBlock_content_type__block_content_typeFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  langcode: StringQueryOperatorInput
  status: BooleanQueryOperatorInput
  drupal_internal__id: StringQueryOperatorInput
  label: StringQueryOperatorInput
  revision: IntQueryOperatorInput
  description: StringQueryOperatorInput
  relationships: DrupalBlock_content_type__block_content_typeRelationshipsFilterInput
}

""""""
input DrupalBlock_content_type__block_content_typeRelationshipsFilterInput {
  DrupalBlock_content__basic: DrupalBlock_content__basicFilterInput
}

""""""
input DrupalBlock_content__basicBlock_content_typeFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalBlock_content__basicContent_translation_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__belatubFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__tid: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  description: DrupalTaxonomy_term__belatubDescriptionFilterInput
  weight: IntQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  content_translation_created: DateQueryOperatorInput
  relationships: DrupalTaxonomy_term__belatubRelationshipsFilterInput
  vid: DrupalTaxonomy_term__belatubVidFilterInput
  content_translation_uid: DrupalTaxonomy_term__belatubContent_translation_uidFilterInput
}

""""""
input DrupalTaxonomy_term__belatubDescriptionFilterInput {
  value: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__belatubRelationshipsFilterInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput
  parent: DrupalTaxonomy_term__belatubFilterInput
  content_translation_uid: DrupalUser__userFilterInput
  DrupalTaxonomy_term__belatub: DrupalTaxonomy_term__belatubFilterInput
}

""""""
input DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  langcode: StringQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  drupal_internal__vid: StringQueryOperatorInput
  description: StringQueryOperatorInput
  weight: IntQueryOperatorInput
  relationships: DrupalTaxonomy_vocabulary__taxonomy_vocabularyRelationshipsFilterInput
}

""""""
input DrupalTaxonomy_vocabulary__taxonomy_vocabularyRelationshipsFilterInput {
  DrupalTaxonomy_term__rej: DrupalTaxonomy_term__rejFilterInput
  DrupalTaxonomy_term__noui: DrupalTaxonomy_term__nouiFilterInput
  DrupalTaxonomy_term__chest: DrupalTaxonomy_term__chestFilterInput
  DrupalTaxonomy_term__devup: DrupalTaxonomy_term__devupFilterInput
  DrupalTaxonomy_term__testing_taxonomy: DrupalTaxonomy_term__testing_taxonomyFilterInput
  DrupalTaxonomy_term__cishuswalus: DrupalTaxonomy_term__cishuswalusFilterInput
  DrupalTaxonomy_term__ti: DrupalTaxonomy_term__tiFilterInput
  DrupalTaxonomy_term__hiwrewru: DrupalTaxonomy_term__hiwrewruFilterInput
  DrupalTaxonomy_term__uutr: DrupalTaxonomy_term__uutrFilterInput
  DrupalTaxonomy_term__drouawipas: DrupalTaxonomy_term__drouawipasFilterInput
  DrupalTaxonomy_term__shitabreko: DrupalTaxonomy_term__shitabrekoFilterInput
  DrupalTaxonomy_term__tri: DrupalTaxonomy_term__triFilterInput
  DrupalTaxonomy_term__stu: DrupalTaxonomy_term__stuFilterInput
  DrupalTaxonomy_term__vaswo: DrupalTaxonomy_term__vaswoFilterInput
  DrupalTaxonomy_term__lomolaf: DrupalTaxonomy_term__lomolafFilterInput
  DrupalTaxonomy_term__clas: DrupalTaxonomy_term__clasFilterInput
  DrupalTaxonomy_term__traw: DrupalTaxonomy_term__trawFilterInput
  DrupalTaxonomy_term__uasufrotru: DrupalTaxonomy_term__uasufrotruFilterInput
  DrupalTaxonomy_term__uiprawrunati: DrupalTaxonomy_term__uiprawrunatiFilterInput
  DrupalTaxonomy_term__slochat: DrupalTaxonomy_term__slochatFilterInput
  DrupalTaxonomy_term__ci: DrupalTaxonomy_term__ciFilterInput
  DrupalTaxonomy_term__cl: DrupalTaxonomy_term__clFilterInput
  DrupalTaxonomy_term__gestep: DrupalTaxonomy_term__gestepFilterInput
  DrupalTaxonomy_term__belatub: DrupalTaxonomy_term__belatubFilterInput
}

""""""
input DrupalTaxonomy_term__rejFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__tid: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  description: DrupalTaxonomy_term__rejDescriptionFilterInput
  weight: IntQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  content_translation_created: DateQueryOperatorInput
  relationships: DrupalTaxonomy_term__rejRelationshipsFilterInput
  vid: DrupalTaxonomy_term__rejVidFilterInput
  content_translation_uid: DrupalTaxonomy_term__rejContent_translation_uidFilterInput
}

""""""
input DrupalTaxonomy_term__rejDescriptionFilterInput {
  value: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__rejRelationshipsFilterInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput
  content_translation_uid: DrupalUser__userFilterInput
}

""""""
input DrupalTaxonomy_term__rejVidFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__rejContent_translation_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__nouiFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__tid: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  description: DrupalTaxonomy_term__nouiDescriptionFilterInput
  weight: IntQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  content_translation_created: DateQueryOperatorInput
  relationships: DrupalTaxonomy_term__nouiRelationshipsFilterInput
  vid: DrupalTaxonomy_term__nouiVidFilterInput
  content_translation_uid: DrupalTaxonomy_term__nouiContent_translation_uidFilterInput
}

""""""
input DrupalTaxonomy_term__nouiDescriptionFilterInput {
  value: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__nouiRelationshipsFilterInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput
  content_translation_uid: DrupalUser__userFilterInput
}

""""""
input DrupalTaxonomy_term__nouiVidFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__nouiContent_translation_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__chestFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__tid: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  description: DrupalTaxonomy_term__chestDescriptionFilterInput
  weight: IntQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  content_translation_created: DateQueryOperatorInput
  relationships: DrupalTaxonomy_term__chestRelationshipsFilterInput
  vid: DrupalTaxonomy_term__chestVidFilterInput
  content_translation_uid: DrupalTaxonomy_term__chestContent_translation_uidFilterInput
}

""""""
input DrupalTaxonomy_term__chestDescriptionFilterInput {
  value: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__chestRelationshipsFilterInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput
  parent: DrupalTaxonomy_term__chestFilterInput
  content_translation_uid: DrupalUser__userFilterInput
  DrupalTaxonomy_term__chest: DrupalTaxonomy_term__chestFilterInput
}

""""""
input DrupalTaxonomy_term__chestVidFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__chestContent_translation_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__devupFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__tid: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  description: DrupalTaxonomy_term__devupDescriptionFilterInput
  weight: IntQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  content_translation_created: DateQueryOperatorInput
  relationships: DrupalTaxonomy_term__devupRelationshipsFilterInput
  vid: DrupalTaxonomy_term__devupVidFilterInput
  content_translation_uid: DrupalTaxonomy_term__devupContent_translation_uidFilterInput
}

""""""
input DrupalTaxonomy_term__devupDescriptionFilterInput {
  value: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__devupRelationshipsFilterInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput
  content_translation_uid: DrupalUser__userFilterInput
}

""""""
input DrupalTaxonomy_term__devupVidFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__devupContent_translation_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__testing_taxonomyFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__tid: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  description: DrupalTaxonomy_term__testing_taxonomyDescriptionFilterInput
  weight: IntQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  content_translation_created: DateQueryOperatorInput
  relationships: DrupalTaxonomy_term__testing_taxonomyRelationshipsFilterInput
  vid: DrupalTaxonomy_term__testing_taxonomyVidFilterInput
  content_translation_uid: DrupalTaxonomy_term__testing_taxonomyContent_translation_uidFilterInput
}

""""""
input DrupalTaxonomy_term__testing_taxonomyDescriptionFilterInput {
  value: StringQueryOperatorInput
  format: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__testing_taxonomyRelationshipsFilterInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput
  parent: DrupalTaxonomy_term__testing_taxonomyFilterInput
  content_translation_uid: DrupalUser__userFilterInput
  DrupalTaxonomy_term__testing_taxonomy: DrupalTaxonomy_term__testing_taxonomyFilterInput
}

""""""
input DrupalTaxonomy_term__testing_taxonomyVidFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__testing_taxonomyContent_translation_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__cishuswalusFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__tid: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  description: DrupalTaxonomy_term__cishuswalusDescriptionFilterInput
  weight: IntQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  content_translation_created: DateQueryOperatorInput
  relationships: DrupalTaxonomy_term__cishuswalusRelationshipsFilterInput
  vid: DrupalTaxonomy_term__cishuswalusVidFilterInput
  content_translation_uid: DrupalTaxonomy_term__cishuswalusContent_translation_uidFilterInput
}

""""""
input DrupalTaxonomy_term__cishuswalusDescriptionFilterInput {
  value: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__cishuswalusRelationshipsFilterInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput
  parent: DrupalTaxonomy_term__cishuswalusFilterInput
  content_translation_uid: DrupalUser__userFilterInput
  DrupalTaxonomy_term__cishuswalus: DrupalTaxonomy_term__cishuswalusFilterInput
}

""""""
input DrupalTaxonomy_term__cishuswalusVidFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__cishuswalusContent_translation_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__tiFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__tid: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  description: DrupalTaxonomy_term__tiDescriptionFilterInput
  weight: IntQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  content_translation_created: DateQueryOperatorInput
  relationships: DrupalTaxonomy_term__tiRelationshipsFilterInput
  vid: DrupalTaxonomy_term__tiVidFilterInput
  content_translation_uid: DrupalTaxonomy_term__tiContent_translation_uidFilterInput
}

""""""
input DrupalTaxonomy_term__tiDescriptionFilterInput {
  value: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__tiRelationshipsFilterInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput
  content_translation_uid: DrupalUser__userFilterInput
}

""""""
input DrupalTaxonomy_term__tiVidFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__tiContent_translation_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__hiwrewruFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__tid: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  description: DrupalTaxonomy_term__hiwrewruDescriptionFilterInput
  weight: IntQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  content_translation_created: DateQueryOperatorInput
  relationships: DrupalTaxonomy_term__hiwrewruRelationshipsFilterInput
  vid: DrupalTaxonomy_term__hiwrewruVidFilterInput
  content_translation_uid: DrupalTaxonomy_term__hiwrewruContent_translation_uidFilterInput
}

""""""
input DrupalTaxonomy_term__hiwrewruDescriptionFilterInput {
  value: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__hiwrewruRelationshipsFilterInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput
  parent: DrupalTaxonomy_term__hiwrewruFilterInput
  content_translation_uid: DrupalUser__userFilterInput
  DrupalTaxonomy_term__hiwrewru: DrupalTaxonomy_term__hiwrewruFilterInput
}

""""""
input DrupalTaxonomy_term__hiwrewruVidFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__hiwrewruContent_translation_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__uutrFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__tid: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  description: DrupalTaxonomy_term__uutrDescriptionFilterInput
  weight: IntQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  content_translation_created: DateQueryOperatorInput
  relationships: DrupalTaxonomy_term__uutrRelationshipsFilterInput
  vid: DrupalTaxonomy_term__uutrVidFilterInput
  content_translation_uid: DrupalTaxonomy_term__uutrContent_translation_uidFilterInput
}

""""""
input DrupalTaxonomy_term__uutrDescriptionFilterInput {
  value: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__uutrRelationshipsFilterInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput
  parent: DrupalTaxonomy_term__uutrFilterInput
  content_translation_uid: DrupalUser__userFilterInput
  DrupalTaxonomy_term__uutr: DrupalTaxonomy_term__uutrFilterInput
}

""""""
input DrupalTaxonomy_term__uutrVidFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__uutrContent_translation_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__drouawipasFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__tid: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  description: DrupalTaxonomy_term__drouawipasDescriptionFilterInput
  weight: IntQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  content_translation_created: DateQueryOperatorInput
  relationships: DrupalTaxonomy_term__drouawipasRelationshipsFilterInput
  vid: DrupalTaxonomy_term__drouawipasVidFilterInput
  content_translation_uid: DrupalTaxonomy_term__drouawipasContent_translation_uidFilterInput
}

""""""
input DrupalTaxonomy_term__drouawipasDescriptionFilterInput {
  value: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__drouawipasRelationshipsFilterInput {
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeFilterInput
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput
  content_translation_uid: DrupalUser__userFilterInput
}

""""""
input DrupalTaxonomy_term__drouawipasVidFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__drouawipasContent_translation_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__shitabrekoFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__tid: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  description: DrupalTaxonomy_term__shitabrekoDescriptionFilterInput
  weight: IntQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  content_translation_created: DateQueryOperatorInput
  relationships: DrupalTaxonomy_term__shitabrekoRelationshipsFilterInput
  vid: DrupalTaxonomy_term__shitabrekoVidFilterInput
  content_translation_uid: DrupalTaxonomy_term__shitabrekoContent_translation_uidFilterInput
}

""""""
input DrupalTaxonomy_term__shitabrekoDescriptionFilterInput {
  value: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__shitabrekoRelationshipsFilterInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput
  parent: DrupalTaxonomy_term__shitabrekoFilterInput
  content_translation_uid: DrupalUser__userFilterInput
  DrupalTaxonomy_term__shitabreko: DrupalTaxonomy_term__shitabrekoFilterInput
}

""""""
input DrupalTaxonomy_term__shitabrekoVidFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__shitabrekoContent_translation_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__triFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__tid: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  description: DrupalTaxonomy_term__triDescriptionFilterInput
  weight: IntQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  content_translation_created: DateQueryOperatorInput
  relationships: DrupalTaxonomy_term__triRelationshipsFilterInput
  vid: DrupalTaxonomy_term__triVidFilterInput
  content_translation_uid: DrupalTaxonomy_term__triContent_translation_uidFilterInput
}

""""""
input DrupalTaxonomy_term__triDescriptionFilterInput {
  value: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__triRelationshipsFilterInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput
  content_translation_uid: DrupalUser__userFilterInput
}

""""""
input DrupalTaxonomy_term__triVidFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__triContent_translation_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__stuFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__tid: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  description: DrupalTaxonomy_term__stuDescriptionFilterInput
  weight: IntQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  content_translation_created: DateQueryOperatorInput
  relationships: DrupalTaxonomy_term__stuRelationshipsFilterInput
  vid: DrupalTaxonomy_term__stuVidFilterInput
  content_translation_uid: DrupalTaxonomy_term__stuContent_translation_uidFilterInput
}

""""""
input DrupalTaxonomy_term__stuDescriptionFilterInput {
  value: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__stuRelationshipsFilterInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput
  parent: DrupalTaxonomy_term__stuFilterInput
  content_translation_uid: DrupalUser__userFilterInput
  DrupalTaxonomy_term__stu: DrupalTaxonomy_term__stuFilterInput
}

""""""
input DrupalTaxonomy_term__stuVidFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__stuContent_translation_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__vaswoFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__tid: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  description: DrupalTaxonomy_term__vaswoDescriptionFilterInput
  weight: IntQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  content_translation_created: DateQueryOperatorInput
  relationships: DrupalTaxonomy_term__vaswoRelationshipsFilterInput
  vid: DrupalTaxonomy_term__vaswoVidFilterInput
  content_translation_uid: DrupalTaxonomy_term__vaswoContent_translation_uidFilterInput
}

""""""
input DrupalTaxonomy_term__vaswoDescriptionFilterInput {
  value: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__vaswoRelationshipsFilterInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput
  content_translation_uid: DrupalUser__userFilterInput
}

""""""
input DrupalTaxonomy_term__vaswoVidFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__vaswoContent_translation_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__lomolafFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__tid: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  description: DrupalTaxonomy_term__lomolafDescriptionFilterInput
  weight: IntQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  content_translation_created: DateQueryOperatorInput
  relationships: DrupalTaxonomy_term__lomolafRelationshipsFilterInput
  vid: DrupalTaxonomy_term__lomolafVidFilterInput
  content_translation_uid: DrupalTaxonomy_term__lomolafContent_translation_uidFilterInput
}

""""""
input DrupalTaxonomy_term__lomolafDescriptionFilterInput {
  value: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__lomolafRelationshipsFilterInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput
  parent: DrupalTaxonomy_term__lomolafFilterInput
  content_translation_uid: DrupalUser__userFilterInput
  DrupalTaxonomy_term__lomolaf: DrupalTaxonomy_term__lomolafFilterInput
}

""""""
input DrupalTaxonomy_term__lomolafVidFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__lomolafContent_translation_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__clasFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__tid: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  description: DrupalTaxonomy_term__clasDescriptionFilterInput
  weight: IntQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  content_translation_created: DateQueryOperatorInput
  relationships: DrupalTaxonomy_term__clasRelationshipsFilterInput
  vid: DrupalTaxonomy_term__clasVidFilterInput
  content_translation_uid: DrupalTaxonomy_term__clasContent_translation_uidFilterInput
}

""""""
input DrupalTaxonomy_term__clasDescriptionFilterInput {
  value: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__clasRelationshipsFilterInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput
  content_translation_uid: DrupalUser__userFilterInput
}

""""""
input DrupalTaxonomy_term__clasVidFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__clasContent_translation_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__trawFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__tid: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  description: DrupalTaxonomy_term__trawDescriptionFilterInput
  weight: IntQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  content_translation_created: DateQueryOperatorInput
  relationships: DrupalTaxonomy_term__trawRelationshipsFilterInput
  vid: DrupalTaxonomy_term__trawVidFilterInput
  content_translation_uid: DrupalTaxonomy_term__trawContent_translation_uidFilterInput
}

""""""
input DrupalTaxonomy_term__trawDescriptionFilterInput {
  value: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__trawRelationshipsFilterInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput
  content_translation_uid: DrupalUser__userFilterInput
}

""""""
input DrupalTaxonomy_term__trawVidFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__trawContent_translation_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__uasufrotruFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__tid: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  description: DrupalTaxonomy_term__uasufrotruDescriptionFilterInput
  weight: IntQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  content_translation_created: DateQueryOperatorInput
  relationships: DrupalTaxonomy_term__uasufrotruRelationshipsFilterInput
  vid: DrupalTaxonomy_term__uasufrotruVidFilterInput
  content_translation_uid: DrupalTaxonomy_term__uasufrotruContent_translation_uidFilterInput
}

""""""
input DrupalTaxonomy_term__uasufrotruDescriptionFilterInput {
  value: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__uasufrotruRelationshipsFilterInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput
  parent: DrupalTaxonomy_term__uasufrotruFilterInput
  content_translation_uid: DrupalUser__userFilterInput
  DrupalTaxonomy_term__uasufrotru: DrupalTaxonomy_term__uasufrotruFilterInput
}

""""""
input DrupalTaxonomy_term__uasufrotruVidFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__uasufrotruContent_translation_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__uiprawrunatiFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__tid: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  description: DrupalTaxonomy_term__uiprawrunatiDescriptionFilterInput
  weight: IntQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  content_translation_created: DateQueryOperatorInput
  relationships: DrupalTaxonomy_term__uiprawrunatiRelationshipsFilterInput
  vid: DrupalTaxonomy_term__uiprawrunatiVidFilterInput
  content_translation_uid: DrupalTaxonomy_term__uiprawrunatiContent_translation_uidFilterInput
}

""""""
input DrupalTaxonomy_term__uiprawrunatiDescriptionFilterInput {
  value: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__uiprawrunatiRelationshipsFilterInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput
  parent: DrupalTaxonomy_term__uiprawrunatiFilterInput
  content_translation_uid: DrupalUser__userFilterInput
  DrupalTaxonomy_term__uiprawrunati: DrupalTaxonomy_term__uiprawrunatiFilterInput
}

""""""
input DrupalTaxonomy_term__uiprawrunatiVidFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__uiprawrunatiContent_translation_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__slochatFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__tid: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  description: DrupalTaxonomy_term__slochatDescriptionFilterInput
  weight: IntQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  content_translation_created: DateQueryOperatorInput
  relationships: DrupalTaxonomy_term__slochatRelationshipsFilterInput
  vid: DrupalTaxonomy_term__slochatVidFilterInput
  content_translation_uid: DrupalTaxonomy_term__slochatContent_translation_uidFilterInput
}

""""""
input DrupalTaxonomy_term__slochatDescriptionFilterInput {
  value: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__slochatRelationshipsFilterInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput
  content_translation_uid: DrupalUser__userFilterInput
}

""""""
input DrupalTaxonomy_term__slochatVidFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__slochatContent_translation_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__ciFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__tid: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  description: DrupalTaxonomy_term__ciDescriptionFilterInput
  weight: IntQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  content_translation_created: DateQueryOperatorInput
  relationships: DrupalTaxonomy_term__ciRelationshipsFilterInput
  vid: DrupalTaxonomy_term__ciVidFilterInput
  content_translation_uid: DrupalTaxonomy_term__ciContent_translation_uidFilterInput
}

""""""
input DrupalTaxonomy_term__ciDescriptionFilterInput {
  value: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__ciRelationshipsFilterInput {
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeFilterInput
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput
  parent: DrupalTaxonomy_term__ciFilterInput
  content_translation_uid: DrupalUser__userFilterInput
  DrupalTaxonomy_term__ci: DrupalTaxonomy_term__ciFilterInput
}

""""""
input DrupalTaxonomy_term__ciVidFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__ciContent_translation_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__clFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__tid: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  description: DrupalTaxonomy_term__clDescriptionFilterInput
  weight: IntQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  content_translation_created: DateQueryOperatorInput
  relationships: DrupalTaxonomy_term__clRelationshipsFilterInput
  vid: DrupalTaxonomy_term__clVidFilterInput
  content_translation_uid: DrupalTaxonomy_term__clContent_translation_uidFilterInput
}

""""""
input DrupalTaxonomy_term__clDescriptionFilterInput {
  value: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__clRelationshipsFilterInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput
  parent: DrupalTaxonomy_term__clFilterInput
  content_translation_uid: DrupalUser__userFilterInput
  DrupalTaxonomy_term__cl: DrupalTaxonomy_term__clFilterInput
}

""""""
input DrupalTaxonomy_term__clVidFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__clContent_translation_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__gestepFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__tid: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  revision_created: DateQueryOperatorInput
  status: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  description: DrupalTaxonomy_term__gestepDescriptionFilterInput
  weight: IntQueryOperatorInput
  changed: DateQueryOperatorInput
  default_langcode: BooleanQueryOperatorInput
  revision_translation_affected: BooleanQueryOperatorInput
  content_translation_source: StringQueryOperatorInput
  content_translation_outdated: BooleanQueryOperatorInput
  content_translation_created: DateQueryOperatorInput
  relationships: DrupalTaxonomy_term__gestepRelationshipsFilterInput
  vid: DrupalTaxonomy_term__gestepVidFilterInput
  content_translation_uid: DrupalTaxonomy_term__gestepContent_translation_uidFilterInput
}

""""""
input DrupalTaxonomy_term__gestepDescriptionFilterInput {
  value: StringQueryOperatorInput
  processed: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__gestepRelationshipsFilterInput {
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeFilterInput
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFilterInput
  content_translation_uid: DrupalUser__userFilterInput
}

""""""
input DrupalTaxonomy_term__gestepVidFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__gestepContent_translation_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__belatubVidFilterInput {
  drupal_internal__target_id: StringQueryOperatorInput
}

""""""
input DrupalTaxonomy_term__belatubContent_translation_uidFilterInput {
  drupal_internal__target_id: IntQueryOperatorInput
}

""""""
type DrupalFile__fileConnection {
  totalCount: Int!
  edges: [DrupalFile__fileEdge!]!
  nodes: [DrupalFile__file!]!
  pageInfo: PageInfo!
  distinct(field: DrupalFile__fileFieldSelector!): [String!]!
  max(field: DrupalFile__fileFieldSelector!): Float
  min(field: DrupalFile__fileFieldSelector!): Float
  sum(field: DrupalFile__fileFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalFile__fileFieldSelector!): [DrupalFile__fileGroupConnection!]!
}

""""""
type DrupalFile__fileEdge {
  next: DrupalFile__file
  node: DrupalFile__file!
  previous: DrupalFile__file
}

""""""
input DrupalFile__fileFieldSelector {
  drupal_id: FieldSelectorEnum
  drupal_internal__fid: FieldSelectorEnum
  langcode: FieldSelectorEnum
  filename: FieldSelectorEnum
  uri: DrupalFile__fileUriFieldSelector
  filemime: FieldSelectorEnum
  filesize: FieldSelectorEnum
  status: FieldSelectorEnum
  created: FieldSelectorEnum
  changed: FieldSelectorEnum
  mimeType: FieldSelectorEnum
  url: FieldSelectorEnum
  relationships: DrupalFile__fileRelationshipsFieldSelector
  uid: DrupalFile__fileUidFieldSelector
  placeholderUrl: FieldSelectorEnum
  width: FieldSelectorEnum
  height: FieldSelectorEnum
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  publicUrl: FieldSelectorEnum
  resize: RemoteFileResizeFieldSelector
  gatsbyImage: FieldSelectorEnum
}

""""""
input DrupalFile__fileUriFieldSelector {
  value: FieldSelectorEnum
  url: FieldSelectorEnum
}

""""""
input DrupalFile__fileRelationshipsFieldSelector {
  uid: DrupalUser__userFieldSelector
  DrupalMedia__audio: DrupalMedia__audioFieldSelector
  DrupalMedia__image: DrupalMedia__imageFieldSelector
  DrupalMedia__document: DrupalMedia__documentFieldSelector
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeFieldSelector
  DrupalMedia__remote_video: DrupalMedia__remote_videoFieldSelector
  DrupalMedia__video: DrupalMedia__videoFieldSelector
}

""""""
input DrupalUser__userFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  display_name: FieldSelectorEnum
  relationships: DrupalUser__userRelationshipsFieldSelector
}

""""""
input DrupalUser__userRelationshipsFieldSelector {
  DrupalNode__drupal_test_content_type: DrupalNode__drupal_test_content_typeFieldSelector
  DrupalNode__page: DrupalNode__pageFieldSelector
  DrupalNode__test_page: DrupalNode__test_pageFieldSelector
  DrupalMedia__image: DrupalMedia__imageFieldSelector
  DrupalNode__user: DrupalNode__userFieldSelector
  DrupalMedia__document: DrupalMedia__documentFieldSelector
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeFieldSelector
  DrupalBlock_content__basic: DrupalBlock_content__basicFieldSelector
  DrupalFile__file: DrupalFile__fileFieldSelector
  DrupalNode__product_page: DrupalNode__product_pageFieldSelector
  DrupalTaxonomy_term__belatub: DrupalTaxonomy_term__belatubFieldSelector
  DrupalTaxonomy_term__chest: DrupalTaxonomy_term__chestFieldSelector
  DrupalTaxonomy_term__ci: DrupalTaxonomy_term__ciFieldSelector
  DrupalTaxonomy_term__cishuswalus: DrupalTaxonomy_term__cishuswalusFieldSelector
  DrupalTaxonomy_term__cl: DrupalTaxonomy_term__clFieldSelector
  DrupalTaxonomy_term__clas: DrupalTaxonomy_term__clasFieldSelector
  DrupalTaxonomy_term__devup: DrupalTaxonomy_term__devupFieldSelector
  DrupalTaxonomy_term__drouawipas: DrupalTaxonomy_term__drouawipasFieldSelector
  DrupalTaxonomy_term__gestep: DrupalTaxonomy_term__gestepFieldSelector
  DrupalTaxonomy_term__hiwrewru: DrupalTaxonomy_term__hiwrewruFieldSelector
  DrupalTaxonomy_term__lomolaf: DrupalTaxonomy_term__lomolafFieldSelector
  DrupalTaxonomy_term__noui: DrupalTaxonomy_term__nouiFieldSelector
  DrupalTaxonomy_term__rej: DrupalTaxonomy_term__rejFieldSelector
  DrupalTaxonomy_term__shitabreko: DrupalTaxonomy_term__shitabrekoFieldSelector
  DrupalTaxonomy_term__slochat: DrupalTaxonomy_term__slochatFieldSelector
  DrupalTaxonomy_term__stu: DrupalTaxonomy_term__stuFieldSelector
  DrupalTaxonomy_term__testing_taxonomy: DrupalTaxonomy_term__testing_taxonomyFieldSelector
  DrupalTaxonomy_term__ti: DrupalTaxonomy_term__tiFieldSelector
  DrupalTaxonomy_term__traw: DrupalTaxonomy_term__trawFieldSelector
  DrupalTaxonomy_term__tri: DrupalTaxonomy_term__triFieldSelector
  DrupalTaxonomy_term__uasufrotru: DrupalTaxonomy_term__uasufrotruFieldSelector
  DrupalTaxonomy_term__uiprawrunati: DrupalTaxonomy_term__uiprawrunatiFieldSelector
  DrupalTaxonomy_term__uutr: DrupalTaxonomy_term__uutrFieldSelector
  DrupalTaxonomy_term__vaswo: DrupalTaxonomy_term__vaswoFieldSelector
  DrupalMedia__remote_video: DrupalMedia__remote_videoFieldSelector
  DrupalMedia__audio: DrupalMedia__audioFieldSelector
  DrupalMedia__video: DrupalMedia__videoFieldSelector
}

""""""
input DrupalNode__drupal_test_content_typeFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__nid: FieldSelectorEnum
  drupal_internal__vid: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_timestamp: FieldSelectorEnum
  status: FieldSelectorEnum
  title: FieldSelectorEnum
  created: FieldSelectorEnum
  changed: FieldSelectorEnum
  promote: FieldSelectorEnum
  sticky: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  path: DrupalNode__drupal_test_content_typePathFieldSelector
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  body: DrupalNode__drupal_test_content_typeBodyFieldSelector
  field_list_text_field: FieldSelectorEnum
  relationships: DrupalNode__drupal_test_content_typeRelationshipsFieldSelector
  node_type: DrupalNode__drupal_test_content_typeNode_typeFieldSelector
  revision_uid: DrupalNode__drupal_test_content_typeRevision_uidFieldSelector
  uid: DrupalNode__drupal_test_content_typeUidFieldSelector
}

""""""
input DrupalNode__drupal_test_content_typePathFieldSelector {
  langcode: FieldSelectorEnum
}

""""""
input DrupalNode__drupal_test_content_typeBodyFieldSelector {
  value: FieldSelectorEnum
  format: FieldSelectorEnum
  processed: FieldSelectorEnum
  summary: FieldSelectorEnum
}

""""""
input DrupalNode__drupal_test_content_typeRelationshipsFieldSelector {
  node_type: DrupalNode_type__node_typeFieldSelector
  revision_uid: DrupalUser__userFieldSelector
  uid: DrupalUser__userFieldSelector
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeFieldSelector
}

""""""
input DrupalNode_type__node_typeFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  status: FieldSelectorEnum
  dependencies: DrupalNode_type__node_typeDependenciesFieldSelector
  third_party_settings: DrupalNode_type__node_typeThird_party_settingsFieldSelector
  name: FieldSelectorEnum
  drupal_internal__type: FieldSelectorEnum
  description: FieldSelectorEnum
  help: FieldSelectorEnum
  new_revision: FieldSelectorEnum
  preview_mode: FieldSelectorEnum
  display_submitted: FieldSelectorEnum
  relationships: DrupalNode_type__node_typeRelationshipsFieldSelector
}

""""""
input DrupalNode_type__node_typeDependenciesFieldSelector {
  module: FieldSelectorEnum
}

""""""
input DrupalNode_type__node_typeThird_party_settingsFieldSelector {
  menu_ui: DrupalNode_type__node_typeThird_party_settingsMenu_uiFieldSelector
  gatsby: DrupalNode_type__node_typeThird_party_settingsGatsbyFieldSelector
}

""""""
input DrupalNode_type__node_typeThird_party_settingsMenu_uiFieldSelector {
  available_menus: FieldSelectorEnum
  parent: FieldSelectorEnum
}

""""""
input DrupalNode_type__node_typeThird_party_settingsGatsbyFieldSelector {
  preview: FieldSelectorEnum
}

""""""
input DrupalNode_type__node_typeRelationshipsFieldSelector {
  DrupalNode__user: DrupalNode__userFieldSelector
  DrupalNode__page: DrupalNode__pageFieldSelector
  DrupalNode__product_page: DrupalNode__product_pageFieldSelector
  DrupalNode__drupal_test_content_type: DrupalNode__drupal_test_content_typeFieldSelector
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeFieldSelector
  DrupalNode__test_page: DrupalNode__test_pageFieldSelector
}

""""""
input DrupalNode__userFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__nid: FieldSelectorEnum
  drupal_internal__vid: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_timestamp: FieldSelectorEnum
  status: FieldSelectorEnum
  title: FieldSelectorEnum
  created: FieldSelectorEnum
  changed: FieldSelectorEnum
  promote: FieldSelectorEnum
  sticky: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  body: DrupalNode__userBodyFieldSelector
  relationships: DrupalNode__userRelationshipsFieldSelector
  node_type: DrupalNode__userNode_typeFieldSelector
  revision_uid: DrupalNode__userRevision_uidFieldSelector
  uid: DrupalNode__userUidFieldSelector
}

""""""
input DrupalNode__userBodyFieldSelector {
  value: FieldSelectorEnum
  format: FieldSelectorEnum
  processed: FieldSelectorEnum
  summary: FieldSelectorEnum
}

""""""
input DrupalNode__userRelationshipsFieldSelector {
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeFieldSelector
  node_type: DrupalNode_type__node_typeFieldSelector
  revision_uid: DrupalUser__userFieldSelector
  uid: DrupalUser__userFieldSelector
}

""""""
input DrupalNode__nik_content_typeFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__nid: FieldSelectorEnum
  drupal_internal__vid: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_timestamp: FieldSelectorEnum
  status: FieldSelectorEnum
  title: FieldSelectorEnum
  created: FieldSelectorEnum
  changed: FieldSelectorEnum
  promote: FieldSelectorEnum
  sticky: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  field_accordian_text: DrupalNode__nik_content_typeField_accordian_textFieldSelector
  field_boolean_test: FieldSelectorEnum
  field_boolean_test_list: FieldSelectorEnum
  field_contentstack_product: FieldSelectorEnum
  field_date: FieldSelectorEnum
  field_email: FieldSelectorEnum
  field_hello: FieldSelectorEnum
  field_link: DrupalNode__nik_content_typeField_linkFieldSelector
  field_list_text_field: FieldSelectorEnum
  field_test_body: DrupalNode__nik_content_typeField_test_bodyFieldSelector
  field_test_object: DrupalNode__nik_content_typeField_test_objectFieldSelector
  field_test_text_plain: FieldSelectorEnum
  field_text_plain_list: FieldSelectorEnum
  field_timestamp: FieldSelectorEnum
  relationships: DrupalNode__nik_content_typeRelationshipsFieldSelector
  node_type: DrupalNode__nik_content_typeNode_typeFieldSelector
  revision_uid: DrupalNode__nik_content_typeRevision_uidFieldSelector
  uid: DrupalNode__nik_content_typeUidFieldSelector
  field_adf: DrupalNode__nik_content_typeField_adfFieldSelector
  field_list_union_type: DrupalNode__nik_content_typeField_list_union_typeFieldSelector
  field_test_content: DrupalNode__nik_content_typeField_test_contentFieldSelector
  field_list_reference: DrupalNode__nik_content_typeField_list_referenceFieldSelector
  field_image_reference: DrupalNode__nik_content_typeField_image_referenceFieldSelector
  field_list_file_image: DrupalNode__nik_content_typeField_list_file_imageFieldSelector
  field_other_reference_revision: DrupalNode__nik_content_typeField_other_reference_revisionFieldSelector
  field_paragraph: DrupalNode__nik_content_typeField_paragraphFieldSelector
  field_single_paragraph: DrupalNode__nik_content_typeField_single_paragraphFieldSelector
  field_single_reference: DrupalNode__nik_content_typeField_single_referenceFieldSelector
  field_union_single_reference: DrupalNode__nik_content_typeField_union_single_referenceFieldSelector
}

""""""
input DrupalNode__nik_content_typeField_accordian_textFieldSelector {
  value: FieldSelectorEnum
  format: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalNode__nik_content_typeField_linkFieldSelector {
  uri: FieldSelectorEnum
  title: FieldSelectorEnum
}

""""""
input DrupalNode__nik_content_typeField_test_bodyFieldSelector {
  value: FieldSelectorEnum
  format: FieldSelectorEnum
  processed: FieldSelectorEnum
  summary: FieldSelectorEnum
}

""""""
input DrupalNode__nik_content_typeField_test_objectFieldSelector {
  value: FieldSelectorEnum
  format: FieldSelectorEnum
  processed: FieldSelectorEnum
  summary: FieldSelectorEnum
}

""""""
input DrupalNode__nik_content_typeRelationshipsFieldSelector {
  node_type: DrupalNode_type__node_typeFieldSelector
  revision_uid: DrupalUser__userFieldSelector
  uid: DrupalUser__userFieldSelector
  field_list_file_image: DrupalFile__fileFieldSelector
  field_list_reference: DrupalNode__drupal_test_content_typeFieldSelector
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeFieldSelector
  field_image_reference: DrupalFile__fileFieldSelector
  field_other_reference_revision: DrupalNode__drupal_test_content_typeFieldSelector
  field_single_reference: DrupalNode__drupal_test_content_typeFieldSelector
  field_union_single_reference: DrupalNode__drupal_test_content_typeFieldSelector
}

""""""
input DrupalNode__nik_content_typeNode_typeFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__nik_content_typeRevision_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__nik_content_typeUidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__nik_content_typeField_adfFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__nik_content_typeField_list_union_typeFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
  arity: FieldSelectorEnum
}

""""""
input DrupalNode__nik_content_typeField_test_contentFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__nik_content_typeField_list_referenceFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__nik_content_typeField_image_referenceFieldSelector {
  alt: FieldSelectorEnum
  title: FieldSelectorEnum
  width: FieldSelectorEnum
  height: FieldSelectorEnum
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__nik_content_typeField_list_file_imageFieldSelector {
  alt: FieldSelectorEnum
  title: FieldSelectorEnum
  width: FieldSelectorEnum
  height: FieldSelectorEnum
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__nik_content_typeField_other_reference_revisionFieldSelector {
  target_revision_id: FieldSelectorEnum
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__nik_content_typeField_paragraphFieldSelector {
  target_revision_id: FieldSelectorEnum
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__nik_content_typeField_single_paragraphFieldSelector {
  target_revision_id: FieldSelectorEnum
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__nik_content_typeField_single_referenceFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__nik_content_typeField_union_single_referenceFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__userNode_typeFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__userRevision_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__userUidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__pageFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__nid: FieldSelectorEnum
  drupal_internal__vid: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_timestamp: FieldSelectorEnum
  status: FieldSelectorEnum
  title: FieldSelectorEnum
  created: FieldSelectorEnum
  changed: FieldSelectorEnum
  promote: FieldSelectorEnum
  sticky: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  body: DrupalNode__pageBodyFieldSelector
  field_title: DrupalNode__pageField_titleFieldSelector
  relationships: DrupalNode__pageRelationshipsFieldSelector
  node_type: DrupalNode__pageNode_typeFieldSelector
  revision_uid: DrupalNode__pageRevision_uidFieldSelector
  uid: DrupalNode__pageUidFieldSelector
}

""""""
input DrupalNode__pageBodyFieldSelector {
  value: FieldSelectorEnum
  format: FieldSelectorEnum
  processed: FieldSelectorEnum
  summary: FieldSelectorEnum
}

""""""
input DrupalNode__pageField_titleFieldSelector {
  value: FieldSelectorEnum
  format: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalNode__pageRelationshipsFieldSelector {
  node_type: DrupalNode_type__node_typeFieldSelector
  revision_uid: DrupalUser__userFieldSelector
  uid: DrupalUser__userFieldSelector
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeFieldSelector
}

""""""
input DrupalNode__pageNode_typeFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__pageRevision_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__pageUidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__product_pageFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__nid: FieldSelectorEnum
  drupal_internal__vid: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_timestamp: FieldSelectorEnum
  status: FieldSelectorEnum
  title: FieldSelectorEnum
  created: FieldSelectorEnum
  changed: FieldSelectorEnum
  promote: FieldSelectorEnum
  sticky: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  path: DrupalNode__product_pagePathFieldSelector
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  field_contentstack_id: FieldSelectorEnum
  field_description: FieldSelectorEnum
  relationships: DrupalNode__product_pageRelationshipsFieldSelector
  node_type: DrupalNode__product_pageNode_typeFieldSelector
  revision_uid: DrupalNode__product_pageRevision_uidFieldSelector
  uid: DrupalNode__product_pageUidFieldSelector
}

""""""
input DrupalNode__product_pagePathFieldSelector {
  langcode: FieldSelectorEnum
}

""""""
input DrupalNode__product_pageRelationshipsFieldSelector {
  node_type: DrupalNode_type__node_typeFieldSelector
  revision_uid: DrupalUser__userFieldSelector
  uid: DrupalUser__userFieldSelector
}

""""""
input DrupalNode__product_pageNode_typeFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__product_pageRevision_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__product_pageUidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__test_pageFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__nid: FieldSelectorEnum
  drupal_internal__vid: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_timestamp: FieldSelectorEnum
  status: FieldSelectorEnum
  title: FieldSelectorEnum
  created: FieldSelectorEnum
  changed: FieldSelectorEnum
  promote: FieldSelectorEnum
  sticky: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  body: DrupalNode__test_pageBodyFieldSelector
  field_test_field: FieldSelectorEnum
  relationships: DrupalNode__test_pageRelationshipsFieldSelector
  node_type: DrupalNode__test_pageNode_typeFieldSelector
  revision_uid: DrupalNode__test_pageRevision_uidFieldSelector
  uid: DrupalNode__test_pageUidFieldSelector
  field_reference_list: DrupalNode__test_pageField_reference_listFieldSelector
}

""""""
input DrupalNode__test_pageBodyFieldSelector {
  value: FieldSelectorEnum
  format: FieldSelectorEnum
  processed: FieldSelectorEnum
  summary: FieldSelectorEnum
}

""""""
input DrupalNode__test_pageRelationshipsFieldSelector {
  node_type: DrupalNode_type__node_typeFieldSelector
  revision_uid: DrupalUser__userFieldSelector
  uid: DrupalUser__userFieldSelector
  field_reference_list: DrupalUser__userFieldSelector
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeFieldSelector
}

""""""
input DrupalNode__test_pageNode_typeFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__test_pageRevision_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__test_pageUidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__test_pageField_reference_listFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__drupal_test_content_typeNode_typeFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__drupal_test_content_typeRevision_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalNode__drupal_test_content_typeUidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalMedia__imageFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__mid: FieldSelectorEnum
  drupal_internal__vid: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  created: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  path: DrupalMedia__imagePathFieldSelector
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  relationships: DrupalMedia__imageRelationshipsFieldSelector
  bundle: DrupalMedia__imageBundleFieldSelector
  uid: DrupalMedia__imageUidFieldSelector
  thumbnail: DrupalMedia__imageThumbnailFieldSelector
  field_media_image: DrupalMedia__imageField_media_imageFieldSelector
}

""""""
input DrupalMedia__imagePathFieldSelector {
  langcode: FieldSelectorEnum
}

""""""
input DrupalMedia__imageRelationshipsFieldSelector {
  bundle: DrupalMedia_type__media_typeFieldSelector
  uid: DrupalUser__userFieldSelector
  thumbnail: DrupalFile__fileFieldSelector
  field_media_image: DrupalFile__fileFieldSelector
}

""""""
input DrupalMedia_type__media_typeFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  label: FieldSelectorEnum
  relationships: DrupalMedia_type__media_typeRelationshipsFieldSelector
}

""""""
input DrupalMedia_type__media_typeRelationshipsFieldSelector {
  DrupalMedia__image: DrupalMedia__imageFieldSelector
  DrupalMedia__document: DrupalMedia__documentFieldSelector
  DrupalMedia__video: DrupalMedia__videoFieldSelector
  DrupalMedia__remote_video: DrupalMedia__remote_videoFieldSelector
  DrupalMedia__audio: DrupalMedia__audioFieldSelector
}

""""""
input DrupalMedia__documentFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__mid: FieldSelectorEnum
  drupal_internal__vid: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  created: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  relationships: DrupalMedia__documentRelationshipsFieldSelector
  bundle: DrupalMedia__documentBundleFieldSelector
  uid: DrupalMedia__documentUidFieldSelector
  thumbnail: DrupalMedia__documentThumbnailFieldSelector
  field_media_document: DrupalMedia__documentField_media_documentFieldSelector
}

""""""
input DrupalMedia__documentRelationshipsFieldSelector {
  bundle: DrupalMedia_type__media_typeFieldSelector
  uid: DrupalUser__userFieldSelector
  thumbnail: DrupalFile__fileFieldSelector
  field_media_document: DrupalFile__fileFieldSelector
}

""""""
input DrupalMedia__documentBundleFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalMedia__documentUidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalMedia__documentThumbnailFieldSelector {
  alt: FieldSelectorEnum
  width: FieldSelectorEnum
  height: FieldSelectorEnum
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalMedia__documentField_media_documentFieldSelector {
  display: FieldSelectorEnum
  description: FieldSelectorEnum
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalMedia__videoFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__mid: FieldSelectorEnum
  drupal_internal__vid: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  created: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  relationships: DrupalMedia__videoRelationshipsFieldSelector
  bundle: DrupalMedia__videoBundleFieldSelector
  uid: DrupalMedia__videoUidFieldSelector
  thumbnail: DrupalMedia__videoThumbnailFieldSelector
  field_media_video_file: DrupalMedia__videoField_media_video_fileFieldSelector
}

""""""
input DrupalMedia__videoRelationshipsFieldSelector {
  bundle: DrupalMedia_type__media_typeFieldSelector
  uid: DrupalUser__userFieldSelector
  thumbnail: DrupalFile__fileFieldSelector
  field_media_video_file: DrupalFile__fileFieldSelector
}

""""""
input DrupalMedia__videoBundleFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalMedia__videoUidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalMedia__videoThumbnailFieldSelector {
  alt: FieldSelectorEnum
  width: FieldSelectorEnum
  height: FieldSelectorEnum
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalMedia__videoField_media_video_fileFieldSelector {
  display: FieldSelectorEnum
  description: FieldSelectorEnum
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalMedia__remote_videoFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__mid: FieldSelectorEnum
  drupal_internal__vid: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  created: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  field_media_oembed_video: FieldSelectorEnum
  relationships: DrupalMedia__remote_videoRelationshipsFieldSelector
  bundle: DrupalMedia__remote_videoBundleFieldSelector
  uid: DrupalMedia__remote_videoUidFieldSelector
  thumbnail: DrupalMedia__remote_videoThumbnailFieldSelector
}

""""""
input DrupalMedia__remote_videoRelationshipsFieldSelector {
  bundle: DrupalMedia_type__media_typeFieldSelector
  uid: DrupalUser__userFieldSelector
  thumbnail: DrupalFile__fileFieldSelector
}

""""""
input DrupalMedia__remote_videoBundleFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalMedia__remote_videoUidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalMedia__remote_videoThumbnailFieldSelector {
  alt: FieldSelectorEnum
  width: FieldSelectorEnum
  height: FieldSelectorEnum
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalMedia__audioFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__mid: FieldSelectorEnum
  drupal_internal__vid: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  created: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  relationships: DrupalMedia__audioRelationshipsFieldSelector
  bundle: DrupalMedia__audioBundleFieldSelector
  uid: DrupalMedia__audioUidFieldSelector
  thumbnail: DrupalMedia__audioThumbnailFieldSelector
  field_media_audio_file: DrupalMedia__audioField_media_audio_fileFieldSelector
}

""""""
input DrupalMedia__audioRelationshipsFieldSelector {
  bundle: DrupalMedia_type__media_typeFieldSelector
  uid: DrupalUser__userFieldSelector
  thumbnail: DrupalFile__fileFieldSelector
  field_media_audio_file: DrupalFile__fileFieldSelector
}

""""""
input DrupalMedia__audioBundleFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalMedia__audioUidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalMedia__audioThumbnailFieldSelector {
  alt: FieldSelectorEnum
  width: FieldSelectorEnum
  height: FieldSelectorEnum
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalMedia__audioField_media_audio_fileFieldSelector {
  display: FieldSelectorEnum
  description: FieldSelectorEnum
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalMedia__imageBundleFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalMedia__imageUidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalMedia__imageThumbnailFieldSelector {
  alt: FieldSelectorEnum
  width: FieldSelectorEnum
  height: FieldSelectorEnum
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalMedia__imageField_media_imageFieldSelector {
  alt: FieldSelectorEnum
  title: FieldSelectorEnum
  width: FieldSelectorEnum
  height: FieldSelectorEnum
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalBlock_content__basicFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__id: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  revision_log: FieldSelectorEnum
  status: FieldSelectorEnum
  info: FieldSelectorEnum
  changed: FieldSelectorEnum
  reusable: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  content_translation_created: FieldSelectorEnum
  relationships: DrupalBlock_content__basicRelationshipsFieldSelector
  block_content_type: DrupalBlock_content__basicBlock_content_typeFieldSelector
  content_translation_uid: DrupalBlock_content__basicContent_translation_uidFieldSelector
}

""""""
input DrupalBlock_content__basicRelationshipsFieldSelector {
  block_content_type: DrupalBlock_content_type__block_content_typeFieldSelector
  content_translation_uid: DrupalUser__userFieldSelector
}

""""""
input DrupalBlock_content_type__block_content_typeFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  status: FieldSelectorEnum
  drupal_internal__id: FieldSelectorEnum
  label: FieldSelectorEnum
  revision: FieldSelectorEnum
  description: FieldSelectorEnum
  relationships: DrupalBlock_content_type__block_content_typeRelationshipsFieldSelector
}

""""""
input DrupalBlock_content_type__block_content_typeRelationshipsFieldSelector {
  DrupalBlock_content__basic: DrupalBlock_content__basicFieldSelector
}

""""""
input DrupalBlock_content__basicBlock_content_typeFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalBlock_content__basicContent_translation_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__belatubFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__tid: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  description: DrupalTaxonomy_term__belatubDescriptionFieldSelector
  weight: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  content_translation_created: FieldSelectorEnum
  relationships: DrupalTaxonomy_term__belatubRelationshipsFieldSelector
  vid: DrupalTaxonomy_term__belatubVidFieldSelector
  content_translation_uid: DrupalTaxonomy_term__belatubContent_translation_uidFieldSelector
}

""""""
input DrupalTaxonomy_term__belatubDescriptionFieldSelector {
  value: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__belatubRelationshipsFieldSelector {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector
  parent: DrupalTaxonomy_term__belatubFieldSelector
  content_translation_uid: DrupalUser__userFieldSelector
  DrupalTaxonomy_term__belatub: DrupalTaxonomy_term__belatubFieldSelector
}

""""""
input DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  drupal_internal__vid: FieldSelectorEnum
  description: FieldSelectorEnum
  weight: FieldSelectorEnum
  relationships: DrupalTaxonomy_vocabulary__taxonomy_vocabularyRelationshipsFieldSelector
}

""""""
input DrupalTaxonomy_vocabulary__taxonomy_vocabularyRelationshipsFieldSelector {
  DrupalTaxonomy_term__rej: DrupalTaxonomy_term__rejFieldSelector
  DrupalTaxonomy_term__noui: DrupalTaxonomy_term__nouiFieldSelector
  DrupalTaxonomy_term__chest: DrupalTaxonomy_term__chestFieldSelector
  DrupalTaxonomy_term__devup: DrupalTaxonomy_term__devupFieldSelector
  DrupalTaxonomy_term__testing_taxonomy: DrupalTaxonomy_term__testing_taxonomyFieldSelector
  DrupalTaxonomy_term__cishuswalus: DrupalTaxonomy_term__cishuswalusFieldSelector
  DrupalTaxonomy_term__ti: DrupalTaxonomy_term__tiFieldSelector
  DrupalTaxonomy_term__hiwrewru: DrupalTaxonomy_term__hiwrewruFieldSelector
  DrupalTaxonomy_term__uutr: DrupalTaxonomy_term__uutrFieldSelector
  DrupalTaxonomy_term__drouawipas: DrupalTaxonomy_term__drouawipasFieldSelector
  DrupalTaxonomy_term__shitabreko: DrupalTaxonomy_term__shitabrekoFieldSelector
  DrupalTaxonomy_term__tri: DrupalTaxonomy_term__triFieldSelector
  DrupalTaxonomy_term__stu: DrupalTaxonomy_term__stuFieldSelector
  DrupalTaxonomy_term__vaswo: DrupalTaxonomy_term__vaswoFieldSelector
  DrupalTaxonomy_term__lomolaf: DrupalTaxonomy_term__lomolafFieldSelector
  DrupalTaxonomy_term__clas: DrupalTaxonomy_term__clasFieldSelector
  DrupalTaxonomy_term__traw: DrupalTaxonomy_term__trawFieldSelector
  DrupalTaxonomy_term__uasufrotru: DrupalTaxonomy_term__uasufrotruFieldSelector
  DrupalTaxonomy_term__uiprawrunati: DrupalTaxonomy_term__uiprawrunatiFieldSelector
  DrupalTaxonomy_term__slochat: DrupalTaxonomy_term__slochatFieldSelector
  DrupalTaxonomy_term__ci: DrupalTaxonomy_term__ciFieldSelector
  DrupalTaxonomy_term__cl: DrupalTaxonomy_term__clFieldSelector
  DrupalTaxonomy_term__gestep: DrupalTaxonomy_term__gestepFieldSelector
  DrupalTaxonomy_term__belatub: DrupalTaxonomy_term__belatubFieldSelector
}

""""""
input DrupalTaxonomy_term__rejFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__tid: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  description: DrupalTaxonomy_term__rejDescriptionFieldSelector
  weight: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  content_translation_created: FieldSelectorEnum
  relationships: DrupalTaxonomy_term__rejRelationshipsFieldSelector
  vid: DrupalTaxonomy_term__rejVidFieldSelector
  content_translation_uid: DrupalTaxonomy_term__rejContent_translation_uidFieldSelector
}

""""""
input DrupalTaxonomy_term__rejDescriptionFieldSelector {
  value: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__rejRelationshipsFieldSelector {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector
  content_translation_uid: DrupalUser__userFieldSelector
}

""""""
input DrupalTaxonomy_term__rejVidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__rejContent_translation_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__nouiFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__tid: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  description: DrupalTaxonomy_term__nouiDescriptionFieldSelector
  weight: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  content_translation_created: FieldSelectorEnum
  relationships: DrupalTaxonomy_term__nouiRelationshipsFieldSelector
  vid: DrupalTaxonomy_term__nouiVidFieldSelector
  content_translation_uid: DrupalTaxonomy_term__nouiContent_translation_uidFieldSelector
}

""""""
input DrupalTaxonomy_term__nouiDescriptionFieldSelector {
  value: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__nouiRelationshipsFieldSelector {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector
  content_translation_uid: DrupalUser__userFieldSelector
}

""""""
input DrupalTaxonomy_term__nouiVidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__nouiContent_translation_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__chestFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__tid: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  description: DrupalTaxonomy_term__chestDescriptionFieldSelector
  weight: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  content_translation_created: FieldSelectorEnum
  relationships: DrupalTaxonomy_term__chestRelationshipsFieldSelector
  vid: DrupalTaxonomy_term__chestVidFieldSelector
  content_translation_uid: DrupalTaxonomy_term__chestContent_translation_uidFieldSelector
}

""""""
input DrupalTaxonomy_term__chestDescriptionFieldSelector {
  value: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__chestRelationshipsFieldSelector {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector
  parent: DrupalTaxonomy_term__chestFieldSelector
  content_translation_uid: DrupalUser__userFieldSelector
  DrupalTaxonomy_term__chest: DrupalTaxonomy_term__chestFieldSelector
}

""""""
input DrupalTaxonomy_term__chestVidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__chestContent_translation_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__devupFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__tid: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  description: DrupalTaxonomy_term__devupDescriptionFieldSelector
  weight: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  content_translation_created: FieldSelectorEnum
  relationships: DrupalTaxonomy_term__devupRelationshipsFieldSelector
  vid: DrupalTaxonomy_term__devupVidFieldSelector
  content_translation_uid: DrupalTaxonomy_term__devupContent_translation_uidFieldSelector
}

""""""
input DrupalTaxonomy_term__devupDescriptionFieldSelector {
  value: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__devupRelationshipsFieldSelector {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector
  content_translation_uid: DrupalUser__userFieldSelector
}

""""""
input DrupalTaxonomy_term__devupVidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__devupContent_translation_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__testing_taxonomyFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__tid: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  description: DrupalTaxonomy_term__testing_taxonomyDescriptionFieldSelector
  weight: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  content_translation_created: FieldSelectorEnum
  relationships: DrupalTaxonomy_term__testing_taxonomyRelationshipsFieldSelector
  vid: DrupalTaxonomy_term__testing_taxonomyVidFieldSelector
  content_translation_uid: DrupalTaxonomy_term__testing_taxonomyContent_translation_uidFieldSelector
}

""""""
input DrupalTaxonomy_term__testing_taxonomyDescriptionFieldSelector {
  value: FieldSelectorEnum
  format: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__testing_taxonomyRelationshipsFieldSelector {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector
  parent: DrupalTaxonomy_term__testing_taxonomyFieldSelector
  content_translation_uid: DrupalUser__userFieldSelector
  DrupalTaxonomy_term__testing_taxonomy: DrupalTaxonomy_term__testing_taxonomyFieldSelector
}

""""""
input DrupalTaxonomy_term__testing_taxonomyVidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__testing_taxonomyContent_translation_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__cishuswalusFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__tid: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  description: DrupalTaxonomy_term__cishuswalusDescriptionFieldSelector
  weight: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  content_translation_created: FieldSelectorEnum
  relationships: DrupalTaxonomy_term__cishuswalusRelationshipsFieldSelector
  vid: DrupalTaxonomy_term__cishuswalusVidFieldSelector
  content_translation_uid: DrupalTaxonomy_term__cishuswalusContent_translation_uidFieldSelector
}

""""""
input DrupalTaxonomy_term__cishuswalusDescriptionFieldSelector {
  value: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__cishuswalusRelationshipsFieldSelector {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector
  parent: DrupalTaxonomy_term__cishuswalusFieldSelector
  content_translation_uid: DrupalUser__userFieldSelector
  DrupalTaxonomy_term__cishuswalus: DrupalTaxonomy_term__cishuswalusFieldSelector
}

""""""
input DrupalTaxonomy_term__cishuswalusVidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__cishuswalusContent_translation_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__tiFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__tid: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  description: DrupalTaxonomy_term__tiDescriptionFieldSelector
  weight: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  content_translation_created: FieldSelectorEnum
  relationships: DrupalTaxonomy_term__tiRelationshipsFieldSelector
  vid: DrupalTaxonomy_term__tiVidFieldSelector
  content_translation_uid: DrupalTaxonomy_term__tiContent_translation_uidFieldSelector
}

""""""
input DrupalTaxonomy_term__tiDescriptionFieldSelector {
  value: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__tiRelationshipsFieldSelector {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector
  content_translation_uid: DrupalUser__userFieldSelector
}

""""""
input DrupalTaxonomy_term__tiVidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__tiContent_translation_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__hiwrewruFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__tid: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  description: DrupalTaxonomy_term__hiwrewruDescriptionFieldSelector
  weight: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  content_translation_created: FieldSelectorEnum
  relationships: DrupalTaxonomy_term__hiwrewruRelationshipsFieldSelector
  vid: DrupalTaxonomy_term__hiwrewruVidFieldSelector
  content_translation_uid: DrupalTaxonomy_term__hiwrewruContent_translation_uidFieldSelector
}

""""""
input DrupalTaxonomy_term__hiwrewruDescriptionFieldSelector {
  value: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__hiwrewruRelationshipsFieldSelector {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector
  parent: DrupalTaxonomy_term__hiwrewruFieldSelector
  content_translation_uid: DrupalUser__userFieldSelector
  DrupalTaxonomy_term__hiwrewru: DrupalTaxonomy_term__hiwrewruFieldSelector
}

""""""
input DrupalTaxonomy_term__hiwrewruVidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__hiwrewruContent_translation_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__uutrFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__tid: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  description: DrupalTaxonomy_term__uutrDescriptionFieldSelector
  weight: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  content_translation_created: FieldSelectorEnum
  relationships: DrupalTaxonomy_term__uutrRelationshipsFieldSelector
  vid: DrupalTaxonomy_term__uutrVidFieldSelector
  content_translation_uid: DrupalTaxonomy_term__uutrContent_translation_uidFieldSelector
}

""""""
input DrupalTaxonomy_term__uutrDescriptionFieldSelector {
  value: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__uutrRelationshipsFieldSelector {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector
  parent: DrupalTaxonomy_term__uutrFieldSelector
  content_translation_uid: DrupalUser__userFieldSelector
  DrupalTaxonomy_term__uutr: DrupalTaxonomy_term__uutrFieldSelector
}

""""""
input DrupalTaxonomy_term__uutrVidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__uutrContent_translation_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__drouawipasFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__tid: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  description: DrupalTaxonomy_term__drouawipasDescriptionFieldSelector
  weight: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  content_translation_created: FieldSelectorEnum
  relationships: DrupalTaxonomy_term__drouawipasRelationshipsFieldSelector
  vid: DrupalTaxonomy_term__drouawipasVidFieldSelector
  content_translation_uid: DrupalTaxonomy_term__drouawipasContent_translation_uidFieldSelector
}

""""""
input DrupalTaxonomy_term__drouawipasDescriptionFieldSelector {
  value: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__drouawipasRelationshipsFieldSelector {
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeFieldSelector
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector
  content_translation_uid: DrupalUser__userFieldSelector
}

""""""
input DrupalTaxonomy_term__drouawipasVidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__drouawipasContent_translation_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__shitabrekoFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__tid: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  description: DrupalTaxonomy_term__shitabrekoDescriptionFieldSelector
  weight: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  content_translation_created: FieldSelectorEnum
  relationships: DrupalTaxonomy_term__shitabrekoRelationshipsFieldSelector
  vid: DrupalTaxonomy_term__shitabrekoVidFieldSelector
  content_translation_uid: DrupalTaxonomy_term__shitabrekoContent_translation_uidFieldSelector
}

""""""
input DrupalTaxonomy_term__shitabrekoDescriptionFieldSelector {
  value: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__shitabrekoRelationshipsFieldSelector {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector
  parent: DrupalTaxonomy_term__shitabrekoFieldSelector
  content_translation_uid: DrupalUser__userFieldSelector
  DrupalTaxonomy_term__shitabreko: DrupalTaxonomy_term__shitabrekoFieldSelector
}

""""""
input DrupalTaxonomy_term__shitabrekoVidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__shitabrekoContent_translation_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__triFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__tid: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  description: DrupalTaxonomy_term__triDescriptionFieldSelector
  weight: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  content_translation_created: FieldSelectorEnum
  relationships: DrupalTaxonomy_term__triRelationshipsFieldSelector
  vid: DrupalTaxonomy_term__triVidFieldSelector
  content_translation_uid: DrupalTaxonomy_term__triContent_translation_uidFieldSelector
}

""""""
input DrupalTaxonomy_term__triDescriptionFieldSelector {
  value: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__triRelationshipsFieldSelector {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector
  content_translation_uid: DrupalUser__userFieldSelector
}

""""""
input DrupalTaxonomy_term__triVidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__triContent_translation_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__stuFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__tid: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  description: DrupalTaxonomy_term__stuDescriptionFieldSelector
  weight: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  content_translation_created: FieldSelectorEnum
  relationships: DrupalTaxonomy_term__stuRelationshipsFieldSelector
  vid: DrupalTaxonomy_term__stuVidFieldSelector
  content_translation_uid: DrupalTaxonomy_term__stuContent_translation_uidFieldSelector
}

""""""
input DrupalTaxonomy_term__stuDescriptionFieldSelector {
  value: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__stuRelationshipsFieldSelector {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector
  parent: DrupalTaxonomy_term__stuFieldSelector
  content_translation_uid: DrupalUser__userFieldSelector
  DrupalTaxonomy_term__stu: DrupalTaxonomy_term__stuFieldSelector
}

""""""
input DrupalTaxonomy_term__stuVidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__stuContent_translation_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__vaswoFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__tid: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  description: DrupalTaxonomy_term__vaswoDescriptionFieldSelector
  weight: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  content_translation_created: FieldSelectorEnum
  relationships: DrupalTaxonomy_term__vaswoRelationshipsFieldSelector
  vid: DrupalTaxonomy_term__vaswoVidFieldSelector
  content_translation_uid: DrupalTaxonomy_term__vaswoContent_translation_uidFieldSelector
}

""""""
input DrupalTaxonomy_term__vaswoDescriptionFieldSelector {
  value: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__vaswoRelationshipsFieldSelector {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector
  content_translation_uid: DrupalUser__userFieldSelector
}

""""""
input DrupalTaxonomy_term__vaswoVidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__vaswoContent_translation_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__lomolafFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__tid: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  description: DrupalTaxonomy_term__lomolafDescriptionFieldSelector
  weight: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  content_translation_created: FieldSelectorEnum
  relationships: DrupalTaxonomy_term__lomolafRelationshipsFieldSelector
  vid: DrupalTaxonomy_term__lomolafVidFieldSelector
  content_translation_uid: DrupalTaxonomy_term__lomolafContent_translation_uidFieldSelector
}

""""""
input DrupalTaxonomy_term__lomolafDescriptionFieldSelector {
  value: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__lomolafRelationshipsFieldSelector {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector
  parent: DrupalTaxonomy_term__lomolafFieldSelector
  content_translation_uid: DrupalUser__userFieldSelector
  DrupalTaxonomy_term__lomolaf: DrupalTaxonomy_term__lomolafFieldSelector
}

""""""
input DrupalTaxonomy_term__lomolafVidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__lomolafContent_translation_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__clasFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__tid: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  description: DrupalTaxonomy_term__clasDescriptionFieldSelector
  weight: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  content_translation_created: FieldSelectorEnum
  relationships: DrupalTaxonomy_term__clasRelationshipsFieldSelector
  vid: DrupalTaxonomy_term__clasVidFieldSelector
  content_translation_uid: DrupalTaxonomy_term__clasContent_translation_uidFieldSelector
}

""""""
input DrupalTaxonomy_term__clasDescriptionFieldSelector {
  value: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__clasRelationshipsFieldSelector {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector
  content_translation_uid: DrupalUser__userFieldSelector
}

""""""
input DrupalTaxonomy_term__clasVidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__clasContent_translation_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__trawFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__tid: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  description: DrupalTaxonomy_term__trawDescriptionFieldSelector
  weight: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  content_translation_created: FieldSelectorEnum
  relationships: DrupalTaxonomy_term__trawRelationshipsFieldSelector
  vid: DrupalTaxonomy_term__trawVidFieldSelector
  content_translation_uid: DrupalTaxonomy_term__trawContent_translation_uidFieldSelector
}

""""""
input DrupalTaxonomy_term__trawDescriptionFieldSelector {
  value: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__trawRelationshipsFieldSelector {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector
  content_translation_uid: DrupalUser__userFieldSelector
}

""""""
input DrupalTaxonomy_term__trawVidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__trawContent_translation_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__uasufrotruFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__tid: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  description: DrupalTaxonomy_term__uasufrotruDescriptionFieldSelector
  weight: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  content_translation_created: FieldSelectorEnum
  relationships: DrupalTaxonomy_term__uasufrotruRelationshipsFieldSelector
  vid: DrupalTaxonomy_term__uasufrotruVidFieldSelector
  content_translation_uid: DrupalTaxonomy_term__uasufrotruContent_translation_uidFieldSelector
}

""""""
input DrupalTaxonomy_term__uasufrotruDescriptionFieldSelector {
  value: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__uasufrotruRelationshipsFieldSelector {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector
  parent: DrupalTaxonomy_term__uasufrotruFieldSelector
  content_translation_uid: DrupalUser__userFieldSelector
  DrupalTaxonomy_term__uasufrotru: DrupalTaxonomy_term__uasufrotruFieldSelector
}

""""""
input DrupalTaxonomy_term__uasufrotruVidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__uasufrotruContent_translation_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__uiprawrunatiFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__tid: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  description: DrupalTaxonomy_term__uiprawrunatiDescriptionFieldSelector
  weight: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  content_translation_created: FieldSelectorEnum
  relationships: DrupalTaxonomy_term__uiprawrunatiRelationshipsFieldSelector
  vid: DrupalTaxonomy_term__uiprawrunatiVidFieldSelector
  content_translation_uid: DrupalTaxonomy_term__uiprawrunatiContent_translation_uidFieldSelector
}

""""""
input DrupalTaxonomy_term__uiprawrunatiDescriptionFieldSelector {
  value: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__uiprawrunatiRelationshipsFieldSelector {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector
  parent: DrupalTaxonomy_term__uiprawrunatiFieldSelector
  content_translation_uid: DrupalUser__userFieldSelector
  DrupalTaxonomy_term__uiprawrunati: DrupalTaxonomy_term__uiprawrunatiFieldSelector
}

""""""
input DrupalTaxonomy_term__uiprawrunatiVidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__uiprawrunatiContent_translation_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__slochatFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__tid: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  description: DrupalTaxonomy_term__slochatDescriptionFieldSelector
  weight: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  content_translation_created: FieldSelectorEnum
  relationships: DrupalTaxonomy_term__slochatRelationshipsFieldSelector
  vid: DrupalTaxonomy_term__slochatVidFieldSelector
  content_translation_uid: DrupalTaxonomy_term__slochatContent_translation_uidFieldSelector
}

""""""
input DrupalTaxonomy_term__slochatDescriptionFieldSelector {
  value: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__slochatRelationshipsFieldSelector {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector
  content_translation_uid: DrupalUser__userFieldSelector
}

""""""
input DrupalTaxonomy_term__slochatVidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__slochatContent_translation_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__ciFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__tid: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  description: DrupalTaxonomy_term__ciDescriptionFieldSelector
  weight: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  content_translation_created: FieldSelectorEnum
  relationships: DrupalTaxonomy_term__ciRelationshipsFieldSelector
  vid: DrupalTaxonomy_term__ciVidFieldSelector
  content_translation_uid: DrupalTaxonomy_term__ciContent_translation_uidFieldSelector
}

""""""
input DrupalTaxonomy_term__ciDescriptionFieldSelector {
  value: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__ciRelationshipsFieldSelector {
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeFieldSelector
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector
  parent: DrupalTaxonomy_term__ciFieldSelector
  content_translation_uid: DrupalUser__userFieldSelector
  DrupalTaxonomy_term__ci: DrupalTaxonomy_term__ciFieldSelector
}

""""""
input DrupalTaxonomy_term__ciVidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__ciContent_translation_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__clFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__tid: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  description: DrupalTaxonomy_term__clDescriptionFieldSelector
  weight: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  content_translation_created: FieldSelectorEnum
  relationships: DrupalTaxonomy_term__clRelationshipsFieldSelector
  vid: DrupalTaxonomy_term__clVidFieldSelector
  content_translation_uid: DrupalTaxonomy_term__clContent_translation_uidFieldSelector
}

""""""
input DrupalTaxonomy_term__clDescriptionFieldSelector {
  value: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__clRelationshipsFieldSelector {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector
  parent: DrupalTaxonomy_term__clFieldSelector
  content_translation_uid: DrupalUser__userFieldSelector
  DrupalTaxonomy_term__cl: DrupalTaxonomy_term__clFieldSelector
}

""""""
input DrupalTaxonomy_term__clVidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__clContent_translation_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__gestepFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__tid: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  revision_created: FieldSelectorEnum
  status: FieldSelectorEnum
  name: FieldSelectorEnum
  description: DrupalTaxonomy_term__gestepDescriptionFieldSelector
  weight: FieldSelectorEnum
  changed: FieldSelectorEnum
  default_langcode: FieldSelectorEnum
  revision_translation_affected: FieldSelectorEnum
  content_translation_source: FieldSelectorEnum
  content_translation_outdated: FieldSelectorEnum
  content_translation_created: FieldSelectorEnum
  relationships: DrupalTaxonomy_term__gestepRelationshipsFieldSelector
  vid: DrupalTaxonomy_term__gestepVidFieldSelector
  content_translation_uid: DrupalTaxonomy_term__gestepContent_translation_uidFieldSelector
}

""""""
input DrupalTaxonomy_term__gestepDescriptionFieldSelector {
  value: FieldSelectorEnum
  processed: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__gestepRelationshipsFieldSelector {
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeFieldSelector
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector
  content_translation_uid: DrupalUser__userFieldSelector
}

""""""
input DrupalTaxonomy_term__gestepVidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__gestepContent_translation_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__belatubVidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalTaxonomy_term__belatubContent_translation_uidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
input DrupalFile__fileUidFieldSelector {
  drupal_internal__target_id: FieldSelectorEnum
}

""""""
type DrupalFile__fileGroupConnection {
  totalCount: Int!
  edges: [DrupalFile__fileEdge!]!
  nodes: [DrupalFile__file!]!
  pageInfo: PageInfo!
  distinct(field: DrupalFile__fileFieldSelector!): [String!]!
  max(field: DrupalFile__fileFieldSelector!): Float
  min(field: DrupalFile__fileFieldSelector!): Float
  sum(field: DrupalFile__fileFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalFile__fileFieldSelector!): [DrupalFile__fileGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
input DrupalFile__fileSortInput {
  drupal_id: SortOrderEnum
  drupal_internal__fid: SortOrderEnum
  langcode: SortOrderEnum
  filename: SortOrderEnum
  uri: DrupalFile__fileUriSortInput
  filemime: SortOrderEnum
  filesize: SortOrderEnum
  status: SortOrderEnum
  created: SortOrderEnum
  changed: SortOrderEnum
  mimeType: SortOrderEnum
  url: SortOrderEnum
  relationships: DrupalFile__fileRelationshipsSortInput
  uid: DrupalFile__fileUidSortInput
  placeholderUrl: SortOrderEnum
  width: SortOrderEnum
  height: SortOrderEnum
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  publicUrl: SortOrderEnum
  resize: RemoteFileResizeSortInput
  gatsbyImage: SortOrderEnum
}

""""""
input DrupalFile__fileUriSortInput {
  value: SortOrderEnum
  url: SortOrderEnum
}

""""""
input DrupalFile__fileRelationshipsSortInput {
  uid: DrupalUser__userSortInput
  DrupalMedia__audio: DrupalMedia__audioSortInput
  DrupalMedia__image: DrupalMedia__imageSortInput
  DrupalMedia__document: DrupalMedia__documentSortInput
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeSortInput
  DrupalMedia__remote_video: DrupalMedia__remote_videoSortInput
  DrupalMedia__video: DrupalMedia__videoSortInput
}

""""""
input DrupalUser__userSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  display_name: SortOrderEnum
  relationships: DrupalUser__userRelationshipsSortInput
}

""""""
input DrupalUser__userRelationshipsSortInput {
  DrupalNode__drupal_test_content_type: DrupalNode__drupal_test_content_typeSortInput
  DrupalNode__page: DrupalNode__pageSortInput
  DrupalNode__test_page: DrupalNode__test_pageSortInput
  DrupalMedia__image: DrupalMedia__imageSortInput
  DrupalNode__user: DrupalNode__userSortInput
  DrupalMedia__document: DrupalMedia__documentSortInput
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeSortInput
  DrupalBlock_content__basic: DrupalBlock_content__basicSortInput
  DrupalFile__file: DrupalFile__fileSortInput
  DrupalNode__product_page: DrupalNode__product_pageSortInput
  DrupalTaxonomy_term__belatub: DrupalTaxonomy_term__belatubSortInput
  DrupalTaxonomy_term__chest: DrupalTaxonomy_term__chestSortInput
  DrupalTaxonomy_term__ci: DrupalTaxonomy_term__ciSortInput
  DrupalTaxonomy_term__cishuswalus: DrupalTaxonomy_term__cishuswalusSortInput
  DrupalTaxonomy_term__cl: DrupalTaxonomy_term__clSortInput
  DrupalTaxonomy_term__clas: DrupalTaxonomy_term__clasSortInput
  DrupalTaxonomy_term__devup: DrupalTaxonomy_term__devupSortInput
  DrupalTaxonomy_term__drouawipas: DrupalTaxonomy_term__drouawipasSortInput
  DrupalTaxonomy_term__gestep: DrupalTaxonomy_term__gestepSortInput
  DrupalTaxonomy_term__hiwrewru: DrupalTaxonomy_term__hiwrewruSortInput
  DrupalTaxonomy_term__lomolaf: DrupalTaxonomy_term__lomolafSortInput
  DrupalTaxonomy_term__noui: DrupalTaxonomy_term__nouiSortInput
  DrupalTaxonomy_term__rej: DrupalTaxonomy_term__rejSortInput
  DrupalTaxonomy_term__shitabreko: DrupalTaxonomy_term__shitabrekoSortInput
  DrupalTaxonomy_term__slochat: DrupalTaxonomy_term__slochatSortInput
  DrupalTaxonomy_term__stu: DrupalTaxonomy_term__stuSortInput
  DrupalTaxonomy_term__testing_taxonomy: DrupalTaxonomy_term__testing_taxonomySortInput
  DrupalTaxonomy_term__ti: DrupalTaxonomy_term__tiSortInput
  DrupalTaxonomy_term__traw: DrupalTaxonomy_term__trawSortInput
  DrupalTaxonomy_term__tri: DrupalTaxonomy_term__triSortInput
  DrupalTaxonomy_term__uasufrotru: DrupalTaxonomy_term__uasufrotruSortInput
  DrupalTaxonomy_term__uiprawrunati: DrupalTaxonomy_term__uiprawrunatiSortInput
  DrupalTaxonomy_term__uutr: DrupalTaxonomy_term__uutrSortInput
  DrupalTaxonomy_term__vaswo: DrupalTaxonomy_term__vaswoSortInput
  DrupalMedia__remote_video: DrupalMedia__remote_videoSortInput
  DrupalMedia__audio: DrupalMedia__audioSortInput
  DrupalMedia__video: DrupalMedia__videoSortInput
}

""""""
input DrupalNode__drupal_test_content_typeSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__nid: SortOrderEnum
  drupal_internal__vid: SortOrderEnum
  langcode: SortOrderEnum
  revision_timestamp: SortOrderEnum
  status: SortOrderEnum
  title: SortOrderEnum
  created: SortOrderEnum
  changed: SortOrderEnum
  promote: SortOrderEnum
  sticky: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  path: DrupalNode__drupal_test_content_typePathSortInput
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  body: DrupalNode__drupal_test_content_typeBodySortInput
  field_list_text_field: SortOrderEnum
  relationships: DrupalNode__drupal_test_content_typeRelationshipsSortInput
  node_type: DrupalNode__drupal_test_content_typeNode_typeSortInput
  revision_uid: DrupalNode__drupal_test_content_typeRevision_uidSortInput
  uid: DrupalNode__drupal_test_content_typeUidSortInput
}

""""""
input DrupalNode__drupal_test_content_typePathSortInput {
  langcode: SortOrderEnum
}

""""""
input DrupalNode__drupal_test_content_typeBodySortInput {
  value: SortOrderEnum
  format: SortOrderEnum
  processed: SortOrderEnum
  summary: SortOrderEnum
}

""""""
input DrupalNode__drupal_test_content_typeRelationshipsSortInput {
  node_type: DrupalNode_type__node_typeSortInput
  revision_uid: DrupalUser__userSortInput
  uid: DrupalUser__userSortInput
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeSortInput
}

""""""
input DrupalNode_type__node_typeSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  langcode: SortOrderEnum
  status: SortOrderEnum
  dependencies: DrupalNode_type__node_typeDependenciesSortInput
  third_party_settings: DrupalNode_type__node_typeThird_party_settingsSortInput
  name: SortOrderEnum
  drupal_internal__type: SortOrderEnum
  description: SortOrderEnum
  help: SortOrderEnum
  new_revision: SortOrderEnum
  preview_mode: SortOrderEnum
  display_submitted: SortOrderEnum
  relationships: DrupalNode_type__node_typeRelationshipsSortInput
}

""""""
input DrupalNode_type__node_typeDependenciesSortInput {
  module: SortOrderEnum
}

""""""
input DrupalNode_type__node_typeThird_party_settingsSortInput {
  menu_ui: DrupalNode_type__node_typeThird_party_settingsMenu_uiSortInput
  gatsby: DrupalNode_type__node_typeThird_party_settingsGatsbySortInput
}

""""""
input DrupalNode_type__node_typeThird_party_settingsMenu_uiSortInput {
  available_menus: SortOrderEnum
  parent: SortOrderEnum
}

""""""
input DrupalNode_type__node_typeThird_party_settingsGatsbySortInput {
  preview: SortOrderEnum
}

""""""
input DrupalNode_type__node_typeRelationshipsSortInput {
  DrupalNode__user: DrupalNode__userSortInput
  DrupalNode__page: DrupalNode__pageSortInput
  DrupalNode__product_page: DrupalNode__product_pageSortInput
  DrupalNode__drupal_test_content_type: DrupalNode__drupal_test_content_typeSortInput
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeSortInput
  DrupalNode__test_page: DrupalNode__test_pageSortInput
}

""""""
input DrupalNode__userSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__nid: SortOrderEnum
  drupal_internal__vid: SortOrderEnum
  langcode: SortOrderEnum
  revision_timestamp: SortOrderEnum
  status: SortOrderEnum
  title: SortOrderEnum
  created: SortOrderEnum
  changed: SortOrderEnum
  promote: SortOrderEnum
  sticky: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  body: DrupalNode__userBodySortInput
  relationships: DrupalNode__userRelationshipsSortInput
  node_type: DrupalNode__userNode_typeSortInput
  revision_uid: DrupalNode__userRevision_uidSortInput
  uid: DrupalNode__userUidSortInput
}

""""""
input DrupalNode__userBodySortInput {
  value: SortOrderEnum
  format: SortOrderEnum
  processed: SortOrderEnum
  summary: SortOrderEnum
}

""""""
input DrupalNode__userRelationshipsSortInput {
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeSortInput
  node_type: DrupalNode_type__node_typeSortInput
  revision_uid: DrupalUser__userSortInput
  uid: DrupalUser__userSortInput
}

""""""
input DrupalNode__nik_content_typeSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__nid: SortOrderEnum
  drupal_internal__vid: SortOrderEnum
  langcode: SortOrderEnum
  revision_timestamp: SortOrderEnum
  status: SortOrderEnum
  title: SortOrderEnum
  created: SortOrderEnum
  changed: SortOrderEnum
  promote: SortOrderEnum
  sticky: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  field_accordian_text: DrupalNode__nik_content_typeField_accordian_textSortInput
  field_boolean_test: SortOrderEnum
  field_boolean_test_list: SortOrderEnum
  field_contentstack_product: SortOrderEnum
  field_date: SortOrderEnum
  field_email: SortOrderEnum
  field_hello: SortOrderEnum
  field_link: DrupalNode__nik_content_typeField_linkSortInput
  field_list_text_field: SortOrderEnum
  field_test_body: DrupalNode__nik_content_typeField_test_bodySortInput
  field_test_object: DrupalNode__nik_content_typeField_test_objectSortInput
  field_test_text_plain: SortOrderEnum
  field_text_plain_list: SortOrderEnum
  field_timestamp: SortOrderEnum
  relationships: DrupalNode__nik_content_typeRelationshipsSortInput
  node_type: DrupalNode__nik_content_typeNode_typeSortInput
  revision_uid: DrupalNode__nik_content_typeRevision_uidSortInput
  uid: DrupalNode__nik_content_typeUidSortInput
  field_adf: DrupalNode__nik_content_typeField_adfSortInput
  field_list_union_type: DrupalNode__nik_content_typeField_list_union_typeSortInput
  field_test_content: DrupalNode__nik_content_typeField_test_contentSortInput
  field_list_reference: DrupalNode__nik_content_typeField_list_referenceSortInput
  field_image_reference: DrupalNode__nik_content_typeField_image_referenceSortInput
  field_list_file_image: DrupalNode__nik_content_typeField_list_file_imageSortInput
  field_other_reference_revision: DrupalNode__nik_content_typeField_other_reference_revisionSortInput
  field_paragraph: DrupalNode__nik_content_typeField_paragraphSortInput
  field_single_paragraph: DrupalNode__nik_content_typeField_single_paragraphSortInput
  field_single_reference: DrupalNode__nik_content_typeField_single_referenceSortInput
  field_union_single_reference: DrupalNode__nik_content_typeField_union_single_referenceSortInput
}

""""""
input DrupalNode__nik_content_typeField_accordian_textSortInput {
  value: SortOrderEnum
  format: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalNode__nik_content_typeField_linkSortInput {
  uri: SortOrderEnum
  title: SortOrderEnum
}

""""""
input DrupalNode__nik_content_typeField_test_bodySortInput {
  value: SortOrderEnum
  format: SortOrderEnum
  processed: SortOrderEnum
  summary: SortOrderEnum
}

""""""
input DrupalNode__nik_content_typeField_test_objectSortInput {
  value: SortOrderEnum
  format: SortOrderEnum
  processed: SortOrderEnum
  summary: SortOrderEnum
}

""""""
input DrupalNode__nik_content_typeRelationshipsSortInput {
  node_type: DrupalNode_type__node_typeSortInput
  revision_uid: DrupalUser__userSortInput
  uid: DrupalUser__userSortInput
  field_list_file_image: DrupalFile__fileSortInput
  field_list_reference: DrupalNode__drupal_test_content_typeSortInput
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeSortInput
  field_image_reference: DrupalFile__fileSortInput
  field_other_reference_revision: DrupalNode__drupal_test_content_typeSortInput
  field_single_reference: DrupalNode__drupal_test_content_typeSortInput
  field_union_single_reference: DrupalNode__drupal_test_content_typeSortInput
}

""""""
input DrupalNode__nik_content_typeNode_typeSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__nik_content_typeRevision_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__nik_content_typeUidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__nik_content_typeField_adfSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__nik_content_typeField_list_union_typeSortInput {
  drupal_internal__target_id: SortOrderEnum
  arity: SortOrderEnum
}

""""""
input DrupalNode__nik_content_typeField_test_contentSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__nik_content_typeField_list_referenceSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__nik_content_typeField_image_referenceSortInput {
  alt: SortOrderEnum
  title: SortOrderEnum
  width: SortOrderEnum
  height: SortOrderEnum
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__nik_content_typeField_list_file_imageSortInput {
  alt: SortOrderEnum
  title: SortOrderEnum
  width: SortOrderEnum
  height: SortOrderEnum
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__nik_content_typeField_other_reference_revisionSortInput {
  target_revision_id: SortOrderEnum
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__nik_content_typeField_paragraphSortInput {
  target_revision_id: SortOrderEnum
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__nik_content_typeField_single_paragraphSortInput {
  target_revision_id: SortOrderEnum
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__nik_content_typeField_single_referenceSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__nik_content_typeField_union_single_referenceSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__userNode_typeSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__userRevision_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__userUidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__pageSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__nid: SortOrderEnum
  drupal_internal__vid: SortOrderEnum
  langcode: SortOrderEnum
  revision_timestamp: SortOrderEnum
  status: SortOrderEnum
  title: SortOrderEnum
  created: SortOrderEnum
  changed: SortOrderEnum
  promote: SortOrderEnum
  sticky: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  body: DrupalNode__pageBodySortInput
  field_title: DrupalNode__pageField_titleSortInput
  relationships: DrupalNode__pageRelationshipsSortInput
  node_type: DrupalNode__pageNode_typeSortInput
  revision_uid: DrupalNode__pageRevision_uidSortInput
  uid: DrupalNode__pageUidSortInput
}

""""""
input DrupalNode__pageBodySortInput {
  value: SortOrderEnum
  format: SortOrderEnum
  processed: SortOrderEnum
  summary: SortOrderEnum
}

""""""
input DrupalNode__pageField_titleSortInput {
  value: SortOrderEnum
  format: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalNode__pageRelationshipsSortInput {
  node_type: DrupalNode_type__node_typeSortInput
  revision_uid: DrupalUser__userSortInput
  uid: DrupalUser__userSortInput
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeSortInput
}

""""""
input DrupalNode__pageNode_typeSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__pageRevision_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__pageUidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__product_pageSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__nid: SortOrderEnum
  drupal_internal__vid: SortOrderEnum
  langcode: SortOrderEnum
  revision_timestamp: SortOrderEnum
  status: SortOrderEnum
  title: SortOrderEnum
  created: SortOrderEnum
  changed: SortOrderEnum
  promote: SortOrderEnum
  sticky: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  path: DrupalNode__product_pagePathSortInput
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  field_contentstack_id: SortOrderEnum
  field_description: SortOrderEnum
  relationships: DrupalNode__product_pageRelationshipsSortInput
  node_type: DrupalNode__product_pageNode_typeSortInput
  revision_uid: DrupalNode__product_pageRevision_uidSortInput
  uid: DrupalNode__product_pageUidSortInput
}

""""""
input DrupalNode__product_pagePathSortInput {
  langcode: SortOrderEnum
}

""""""
input DrupalNode__product_pageRelationshipsSortInput {
  node_type: DrupalNode_type__node_typeSortInput
  revision_uid: DrupalUser__userSortInput
  uid: DrupalUser__userSortInput
}

""""""
input DrupalNode__product_pageNode_typeSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__product_pageRevision_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__product_pageUidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__test_pageSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__nid: SortOrderEnum
  drupal_internal__vid: SortOrderEnum
  langcode: SortOrderEnum
  revision_timestamp: SortOrderEnum
  status: SortOrderEnum
  title: SortOrderEnum
  created: SortOrderEnum
  changed: SortOrderEnum
  promote: SortOrderEnum
  sticky: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  body: DrupalNode__test_pageBodySortInput
  field_test_field: SortOrderEnum
  relationships: DrupalNode__test_pageRelationshipsSortInput
  node_type: DrupalNode__test_pageNode_typeSortInput
  revision_uid: DrupalNode__test_pageRevision_uidSortInput
  uid: DrupalNode__test_pageUidSortInput
  field_reference_list: DrupalNode__test_pageField_reference_listSortInput
}

""""""
input DrupalNode__test_pageBodySortInput {
  value: SortOrderEnum
  format: SortOrderEnum
  processed: SortOrderEnum
  summary: SortOrderEnum
}

""""""
input DrupalNode__test_pageRelationshipsSortInput {
  node_type: DrupalNode_type__node_typeSortInput
  revision_uid: DrupalUser__userSortInput
  uid: DrupalUser__userSortInput
  field_reference_list: DrupalUser__userSortInput
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeSortInput
}

""""""
input DrupalNode__test_pageNode_typeSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__test_pageRevision_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__test_pageUidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__test_pageField_reference_listSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__drupal_test_content_typeNode_typeSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__drupal_test_content_typeRevision_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalNode__drupal_test_content_typeUidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalMedia__imageSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__mid: SortOrderEnum
  drupal_internal__vid: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  created: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  path: DrupalMedia__imagePathSortInput
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  relationships: DrupalMedia__imageRelationshipsSortInput
  bundle: DrupalMedia__imageBundleSortInput
  uid: DrupalMedia__imageUidSortInput
  thumbnail: DrupalMedia__imageThumbnailSortInput
  field_media_image: DrupalMedia__imageField_media_imageSortInput
}

""""""
input DrupalMedia__imagePathSortInput {
  langcode: SortOrderEnum
}

""""""
input DrupalMedia__imageRelationshipsSortInput {
  bundle: DrupalMedia_type__media_typeSortInput
  uid: DrupalUser__userSortInput
  thumbnail: DrupalFile__fileSortInput
  field_media_image: DrupalFile__fileSortInput
}

""""""
input DrupalMedia_type__media_typeSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  label: SortOrderEnum
  relationships: DrupalMedia_type__media_typeRelationshipsSortInput
}

""""""
input DrupalMedia_type__media_typeRelationshipsSortInput {
  DrupalMedia__image: DrupalMedia__imageSortInput
  DrupalMedia__document: DrupalMedia__documentSortInput
  DrupalMedia__video: DrupalMedia__videoSortInput
  DrupalMedia__remote_video: DrupalMedia__remote_videoSortInput
  DrupalMedia__audio: DrupalMedia__audioSortInput
}

""""""
input DrupalMedia__documentSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__mid: SortOrderEnum
  drupal_internal__vid: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  created: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  relationships: DrupalMedia__documentRelationshipsSortInput
  bundle: DrupalMedia__documentBundleSortInput
  uid: DrupalMedia__documentUidSortInput
  thumbnail: DrupalMedia__documentThumbnailSortInput
  field_media_document: DrupalMedia__documentField_media_documentSortInput
}

""""""
input DrupalMedia__documentRelationshipsSortInput {
  bundle: DrupalMedia_type__media_typeSortInput
  uid: DrupalUser__userSortInput
  thumbnail: DrupalFile__fileSortInput
  field_media_document: DrupalFile__fileSortInput
}

""""""
input DrupalMedia__documentBundleSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalMedia__documentUidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalMedia__documentThumbnailSortInput {
  alt: SortOrderEnum
  width: SortOrderEnum
  height: SortOrderEnum
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalMedia__documentField_media_documentSortInput {
  display: SortOrderEnum
  description: SortOrderEnum
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalMedia__videoSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__mid: SortOrderEnum
  drupal_internal__vid: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  created: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  relationships: DrupalMedia__videoRelationshipsSortInput
  bundle: DrupalMedia__videoBundleSortInput
  uid: DrupalMedia__videoUidSortInput
  thumbnail: DrupalMedia__videoThumbnailSortInput
  field_media_video_file: DrupalMedia__videoField_media_video_fileSortInput
}

""""""
input DrupalMedia__videoRelationshipsSortInput {
  bundle: DrupalMedia_type__media_typeSortInput
  uid: DrupalUser__userSortInput
  thumbnail: DrupalFile__fileSortInput
  field_media_video_file: DrupalFile__fileSortInput
}

""""""
input DrupalMedia__videoBundleSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalMedia__videoUidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalMedia__videoThumbnailSortInput {
  alt: SortOrderEnum
  width: SortOrderEnum
  height: SortOrderEnum
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalMedia__videoField_media_video_fileSortInput {
  display: SortOrderEnum
  description: SortOrderEnum
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalMedia__remote_videoSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__mid: SortOrderEnum
  drupal_internal__vid: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  created: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  field_media_oembed_video: SortOrderEnum
  relationships: DrupalMedia__remote_videoRelationshipsSortInput
  bundle: DrupalMedia__remote_videoBundleSortInput
  uid: DrupalMedia__remote_videoUidSortInput
  thumbnail: DrupalMedia__remote_videoThumbnailSortInput
}

""""""
input DrupalMedia__remote_videoRelationshipsSortInput {
  bundle: DrupalMedia_type__media_typeSortInput
  uid: DrupalUser__userSortInput
  thumbnail: DrupalFile__fileSortInput
}

""""""
input DrupalMedia__remote_videoBundleSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalMedia__remote_videoUidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalMedia__remote_videoThumbnailSortInput {
  alt: SortOrderEnum
  width: SortOrderEnum
  height: SortOrderEnum
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalMedia__audioSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__mid: SortOrderEnum
  drupal_internal__vid: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  created: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  relationships: DrupalMedia__audioRelationshipsSortInput
  bundle: DrupalMedia__audioBundleSortInput
  uid: DrupalMedia__audioUidSortInput
  thumbnail: DrupalMedia__audioThumbnailSortInput
  field_media_audio_file: DrupalMedia__audioField_media_audio_fileSortInput
}

""""""
input DrupalMedia__audioRelationshipsSortInput {
  bundle: DrupalMedia_type__media_typeSortInput
  uid: DrupalUser__userSortInput
  thumbnail: DrupalFile__fileSortInput
  field_media_audio_file: DrupalFile__fileSortInput
}

""""""
input DrupalMedia__audioBundleSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalMedia__audioUidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalMedia__audioThumbnailSortInput {
  alt: SortOrderEnum
  width: SortOrderEnum
  height: SortOrderEnum
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalMedia__audioField_media_audio_fileSortInput {
  display: SortOrderEnum
  description: SortOrderEnum
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalMedia__imageBundleSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalMedia__imageUidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalMedia__imageThumbnailSortInput {
  alt: SortOrderEnum
  width: SortOrderEnum
  height: SortOrderEnum
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalMedia__imageField_media_imageSortInput {
  alt: SortOrderEnum
  title: SortOrderEnum
  width: SortOrderEnum
  height: SortOrderEnum
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalBlock_content__basicSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__id: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  revision_log: SortOrderEnum
  status: SortOrderEnum
  info: SortOrderEnum
  changed: SortOrderEnum
  reusable: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  content_translation_created: SortOrderEnum
  relationships: DrupalBlock_content__basicRelationshipsSortInput
  block_content_type: DrupalBlock_content__basicBlock_content_typeSortInput
  content_translation_uid: DrupalBlock_content__basicContent_translation_uidSortInput
}

""""""
input DrupalBlock_content__basicRelationshipsSortInput {
  block_content_type: DrupalBlock_content_type__block_content_typeSortInput
  content_translation_uid: DrupalUser__userSortInput
}

""""""
input DrupalBlock_content_type__block_content_typeSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  langcode: SortOrderEnum
  status: SortOrderEnum
  drupal_internal__id: SortOrderEnum
  label: SortOrderEnum
  revision: SortOrderEnum
  description: SortOrderEnum
  relationships: DrupalBlock_content_type__block_content_typeRelationshipsSortInput
}

""""""
input DrupalBlock_content_type__block_content_typeRelationshipsSortInput {
  DrupalBlock_content__basic: DrupalBlock_content__basicSortInput
}

""""""
input DrupalBlock_content__basicBlock_content_typeSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalBlock_content__basicContent_translation_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__belatubSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__tid: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  description: DrupalTaxonomy_term__belatubDescriptionSortInput
  weight: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  content_translation_created: SortOrderEnum
  relationships: DrupalTaxonomy_term__belatubRelationshipsSortInput
  vid: DrupalTaxonomy_term__belatubVidSortInput
  content_translation_uid: DrupalTaxonomy_term__belatubContent_translation_uidSortInput
}

""""""
input DrupalTaxonomy_term__belatubDescriptionSortInput {
  value: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__belatubRelationshipsSortInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput
  parent: DrupalTaxonomy_term__belatubSortInput
  content_translation_uid: DrupalUser__userSortInput
  DrupalTaxonomy_term__belatub: DrupalTaxonomy_term__belatubSortInput
}

""""""
input DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  langcode: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  drupal_internal__vid: SortOrderEnum
  description: SortOrderEnum
  weight: SortOrderEnum
  relationships: DrupalTaxonomy_vocabulary__taxonomy_vocabularyRelationshipsSortInput
}

""""""
input DrupalTaxonomy_vocabulary__taxonomy_vocabularyRelationshipsSortInput {
  DrupalTaxonomy_term__rej: DrupalTaxonomy_term__rejSortInput
  DrupalTaxonomy_term__noui: DrupalTaxonomy_term__nouiSortInput
  DrupalTaxonomy_term__chest: DrupalTaxonomy_term__chestSortInput
  DrupalTaxonomy_term__devup: DrupalTaxonomy_term__devupSortInput
  DrupalTaxonomy_term__testing_taxonomy: DrupalTaxonomy_term__testing_taxonomySortInput
  DrupalTaxonomy_term__cishuswalus: DrupalTaxonomy_term__cishuswalusSortInput
  DrupalTaxonomy_term__ti: DrupalTaxonomy_term__tiSortInput
  DrupalTaxonomy_term__hiwrewru: DrupalTaxonomy_term__hiwrewruSortInput
  DrupalTaxonomy_term__uutr: DrupalTaxonomy_term__uutrSortInput
  DrupalTaxonomy_term__drouawipas: DrupalTaxonomy_term__drouawipasSortInput
  DrupalTaxonomy_term__shitabreko: DrupalTaxonomy_term__shitabrekoSortInput
  DrupalTaxonomy_term__tri: DrupalTaxonomy_term__triSortInput
  DrupalTaxonomy_term__stu: DrupalTaxonomy_term__stuSortInput
  DrupalTaxonomy_term__vaswo: DrupalTaxonomy_term__vaswoSortInput
  DrupalTaxonomy_term__lomolaf: DrupalTaxonomy_term__lomolafSortInput
  DrupalTaxonomy_term__clas: DrupalTaxonomy_term__clasSortInput
  DrupalTaxonomy_term__traw: DrupalTaxonomy_term__trawSortInput
  DrupalTaxonomy_term__uasufrotru: DrupalTaxonomy_term__uasufrotruSortInput
  DrupalTaxonomy_term__uiprawrunati: DrupalTaxonomy_term__uiprawrunatiSortInput
  DrupalTaxonomy_term__slochat: DrupalTaxonomy_term__slochatSortInput
  DrupalTaxonomy_term__ci: DrupalTaxonomy_term__ciSortInput
  DrupalTaxonomy_term__cl: DrupalTaxonomy_term__clSortInput
  DrupalTaxonomy_term__gestep: DrupalTaxonomy_term__gestepSortInput
  DrupalTaxonomy_term__belatub: DrupalTaxonomy_term__belatubSortInput
}

""""""
input DrupalTaxonomy_term__rejSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__tid: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  description: DrupalTaxonomy_term__rejDescriptionSortInput
  weight: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  content_translation_created: SortOrderEnum
  relationships: DrupalTaxonomy_term__rejRelationshipsSortInput
  vid: DrupalTaxonomy_term__rejVidSortInput
  content_translation_uid: DrupalTaxonomy_term__rejContent_translation_uidSortInput
}

""""""
input DrupalTaxonomy_term__rejDescriptionSortInput {
  value: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__rejRelationshipsSortInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput
  content_translation_uid: DrupalUser__userSortInput
}

""""""
input DrupalTaxonomy_term__rejVidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__rejContent_translation_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__nouiSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__tid: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  description: DrupalTaxonomy_term__nouiDescriptionSortInput
  weight: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  content_translation_created: SortOrderEnum
  relationships: DrupalTaxonomy_term__nouiRelationshipsSortInput
  vid: DrupalTaxonomy_term__nouiVidSortInput
  content_translation_uid: DrupalTaxonomy_term__nouiContent_translation_uidSortInput
}

""""""
input DrupalTaxonomy_term__nouiDescriptionSortInput {
  value: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__nouiRelationshipsSortInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput
  content_translation_uid: DrupalUser__userSortInput
}

""""""
input DrupalTaxonomy_term__nouiVidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__nouiContent_translation_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__chestSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__tid: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  description: DrupalTaxonomy_term__chestDescriptionSortInput
  weight: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  content_translation_created: SortOrderEnum
  relationships: DrupalTaxonomy_term__chestRelationshipsSortInput
  vid: DrupalTaxonomy_term__chestVidSortInput
  content_translation_uid: DrupalTaxonomy_term__chestContent_translation_uidSortInput
}

""""""
input DrupalTaxonomy_term__chestDescriptionSortInput {
  value: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__chestRelationshipsSortInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput
  parent: DrupalTaxonomy_term__chestSortInput
  content_translation_uid: DrupalUser__userSortInput
  DrupalTaxonomy_term__chest: DrupalTaxonomy_term__chestSortInput
}

""""""
input DrupalTaxonomy_term__chestVidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__chestContent_translation_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__devupSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__tid: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  description: DrupalTaxonomy_term__devupDescriptionSortInput
  weight: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  content_translation_created: SortOrderEnum
  relationships: DrupalTaxonomy_term__devupRelationshipsSortInput
  vid: DrupalTaxonomy_term__devupVidSortInput
  content_translation_uid: DrupalTaxonomy_term__devupContent_translation_uidSortInput
}

""""""
input DrupalTaxonomy_term__devupDescriptionSortInput {
  value: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__devupRelationshipsSortInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput
  content_translation_uid: DrupalUser__userSortInput
}

""""""
input DrupalTaxonomy_term__devupVidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__devupContent_translation_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__testing_taxonomySortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__tid: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  description: DrupalTaxonomy_term__testing_taxonomyDescriptionSortInput
  weight: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  content_translation_created: SortOrderEnum
  relationships: DrupalTaxonomy_term__testing_taxonomyRelationshipsSortInput
  vid: DrupalTaxonomy_term__testing_taxonomyVidSortInput
  content_translation_uid: DrupalTaxonomy_term__testing_taxonomyContent_translation_uidSortInput
}

""""""
input DrupalTaxonomy_term__testing_taxonomyDescriptionSortInput {
  value: SortOrderEnum
  format: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__testing_taxonomyRelationshipsSortInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput
  parent: DrupalTaxonomy_term__testing_taxonomySortInput
  content_translation_uid: DrupalUser__userSortInput
  DrupalTaxonomy_term__testing_taxonomy: DrupalTaxonomy_term__testing_taxonomySortInput
}

""""""
input DrupalTaxonomy_term__testing_taxonomyVidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__testing_taxonomyContent_translation_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__cishuswalusSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__tid: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  description: DrupalTaxonomy_term__cishuswalusDescriptionSortInput
  weight: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  content_translation_created: SortOrderEnum
  relationships: DrupalTaxonomy_term__cishuswalusRelationshipsSortInput
  vid: DrupalTaxonomy_term__cishuswalusVidSortInput
  content_translation_uid: DrupalTaxonomy_term__cishuswalusContent_translation_uidSortInput
}

""""""
input DrupalTaxonomy_term__cishuswalusDescriptionSortInput {
  value: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__cishuswalusRelationshipsSortInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput
  parent: DrupalTaxonomy_term__cishuswalusSortInput
  content_translation_uid: DrupalUser__userSortInput
  DrupalTaxonomy_term__cishuswalus: DrupalTaxonomy_term__cishuswalusSortInput
}

""""""
input DrupalTaxonomy_term__cishuswalusVidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__cishuswalusContent_translation_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__tiSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__tid: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  description: DrupalTaxonomy_term__tiDescriptionSortInput
  weight: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  content_translation_created: SortOrderEnum
  relationships: DrupalTaxonomy_term__tiRelationshipsSortInput
  vid: DrupalTaxonomy_term__tiVidSortInput
  content_translation_uid: DrupalTaxonomy_term__tiContent_translation_uidSortInput
}

""""""
input DrupalTaxonomy_term__tiDescriptionSortInput {
  value: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__tiRelationshipsSortInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput
  content_translation_uid: DrupalUser__userSortInput
}

""""""
input DrupalTaxonomy_term__tiVidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__tiContent_translation_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__hiwrewruSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__tid: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  description: DrupalTaxonomy_term__hiwrewruDescriptionSortInput
  weight: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  content_translation_created: SortOrderEnum
  relationships: DrupalTaxonomy_term__hiwrewruRelationshipsSortInput
  vid: DrupalTaxonomy_term__hiwrewruVidSortInput
  content_translation_uid: DrupalTaxonomy_term__hiwrewruContent_translation_uidSortInput
}

""""""
input DrupalTaxonomy_term__hiwrewruDescriptionSortInput {
  value: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__hiwrewruRelationshipsSortInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput
  parent: DrupalTaxonomy_term__hiwrewruSortInput
  content_translation_uid: DrupalUser__userSortInput
  DrupalTaxonomy_term__hiwrewru: DrupalTaxonomy_term__hiwrewruSortInput
}

""""""
input DrupalTaxonomy_term__hiwrewruVidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__hiwrewruContent_translation_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__uutrSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__tid: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  description: DrupalTaxonomy_term__uutrDescriptionSortInput
  weight: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  content_translation_created: SortOrderEnum
  relationships: DrupalTaxonomy_term__uutrRelationshipsSortInput
  vid: DrupalTaxonomy_term__uutrVidSortInput
  content_translation_uid: DrupalTaxonomy_term__uutrContent_translation_uidSortInput
}

""""""
input DrupalTaxonomy_term__uutrDescriptionSortInput {
  value: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__uutrRelationshipsSortInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput
  parent: DrupalTaxonomy_term__uutrSortInput
  content_translation_uid: DrupalUser__userSortInput
  DrupalTaxonomy_term__uutr: DrupalTaxonomy_term__uutrSortInput
}

""""""
input DrupalTaxonomy_term__uutrVidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__uutrContent_translation_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__drouawipasSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__tid: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  description: DrupalTaxonomy_term__drouawipasDescriptionSortInput
  weight: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  content_translation_created: SortOrderEnum
  relationships: DrupalTaxonomy_term__drouawipasRelationshipsSortInput
  vid: DrupalTaxonomy_term__drouawipasVidSortInput
  content_translation_uid: DrupalTaxonomy_term__drouawipasContent_translation_uidSortInput
}

""""""
input DrupalTaxonomy_term__drouawipasDescriptionSortInput {
  value: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__drouawipasRelationshipsSortInput {
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeSortInput
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput
  content_translation_uid: DrupalUser__userSortInput
}

""""""
input DrupalTaxonomy_term__drouawipasVidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__drouawipasContent_translation_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__shitabrekoSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__tid: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  description: DrupalTaxonomy_term__shitabrekoDescriptionSortInput
  weight: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  content_translation_created: SortOrderEnum
  relationships: DrupalTaxonomy_term__shitabrekoRelationshipsSortInput
  vid: DrupalTaxonomy_term__shitabrekoVidSortInput
  content_translation_uid: DrupalTaxonomy_term__shitabrekoContent_translation_uidSortInput
}

""""""
input DrupalTaxonomy_term__shitabrekoDescriptionSortInput {
  value: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__shitabrekoRelationshipsSortInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput
  parent: DrupalTaxonomy_term__shitabrekoSortInput
  content_translation_uid: DrupalUser__userSortInput
  DrupalTaxonomy_term__shitabreko: DrupalTaxonomy_term__shitabrekoSortInput
}

""""""
input DrupalTaxonomy_term__shitabrekoVidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__shitabrekoContent_translation_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__triSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__tid: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  description: DrupalTaxonomy_term__triDescriptionSortInput
  weight: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  content_translation_created: SortOrderEnum
  relationships: DrupalTaxonomy_term__triRelationshipsSortInput
  vid: DrupalTaxonomy_term__triVidSortInput
  content_translation_uid: DrupalTaxonomy_term__triContent_translation_uidSortInput
}

""""""
input DrupalTaxonomy_term__triDescriptionSortInput {
  value: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__triRelationshipsSortInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput
  content_translation_uid: DrupalUser__userSortInput
}

""""""
input DrupalTaxonomy_term__triVidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__triContent_translation_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__stuSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__tid: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  description: DrupalTaxonomy_term__stuDescriptionSortInput
  weight: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  content_translation_created: SortOrderEnum
  relationships: DrupalTaxonomy_term__stuRelationshipsSortInput
  vid: DrupalTaxonomy_term__stuVidSortInput
  content_translation_uid: DrupalTaxonomy_term__stuContent_translation_uidSortInput
}

""""""
input DrupalTaxonomy_term__stuDescriptionSortInput {
  value: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__stuRelationshipsSortInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput
  parent: DrupalTaxonomy_term__stuSortInput
  content_translation_uid: DrupalUser__userSortInput
  DrupalTaxonomy_term__stu: DrupalTaxonomy_term__stuSortInput
}

""""""
input DrupalTaxonomy_term__stuVidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__stuContent_translation_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__vaswoSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__tid: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  description: DrupalTaxonomy_term__vaswoDescriptionSortInput
  weight: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  content_translation_created: SortOrderEnum
  relationships: DrupalTaxonomy_term__vaswoRelationshipsSortInput
  vid: DrupalTaxonomy_term__vaswoVidSortInput
  content_translation_uid: DrupalTaxonomy_term__vaswoContent_translation_uidSortInput
}

""""""
input DrupalTaxonomy_term__vaswoDescriptionSortInput {
  value: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__vaswoRelationshipsSortInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput
  content_translation_uid: DrupalUser__userSortInput
}

""""""
input DrupalTaxonomy_term__vaswoVidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__vaswoContent_translation_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__lomolafSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__tid: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  description: DrupalTaxonomy_term__lomolafDescriptionSortInput
  weight: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  content_translation_created: SortOrderEnum
  relationships: DrupalTaxonomy_term__lomolafRelationshipsSortInput
  vid: DrupalTaxonomy_term__lomolafVidSortInput
  content_translation_uid: DrupalTaxonomy_term__lomolafContent_translation_uidSortInput
}

""""""
input DrupalTaxonomy_term__lomolafDescriptionSortInput {
  value: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__lomolafRelationshipsSortInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput
  parent: DrupalTaxonomy_term__lomolafSortInput
  content_translation_uid: DrupalUser__userSortInput
  DrupalTaxonomy_term__lomolaf: DrupalTaxonomy_term__lomolafSortInput
}

""""""
input DrupalTaxonomy_term__lomolafVidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__lomolafContent_translation_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__clasSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__tid: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  description: DrupalTaxonomy_term__clasDescriptionSortInput
  weight: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  content_translation_created: SortOrderEnum
  relationships: DrupalTaxonomy_term__clasRelationshipsSortInput
  vid: DrupalTaxonomy_term__clasVidSortInput
  content_translation_uid: DrupalTaxonomy_term__clasContent_translation_uidSortInput
}

""""""
input DrupalTaxonomy_term__clasDescriptionSortInput {
  value: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__clasRelationshipsSortInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput
  content_translation_uid: DrupalUser__userSortInput
}

""""""
input DrupalTaxonomy_term__clasVidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__clasContent_translation_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__trawSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__tid: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  description: DrupalTaxonomy_term__trawDescriptionSortInput
  weight: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  content_translation_created: SortOrderEnum
  relationships: DrupalTaxonomy_term__trawRelationshipsSortInput
  vid: DrupalTaxonomy_term__trawVidSortInput
  content_translation_uid: DrupalTaxonomy_term__trawContent_translation_uidSortInput
}

""""""
input DrupalTaxonomy_term__trawDescriptionSortInput {
  value: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__trawRelationshipsSortInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput
  content_translation_uid: DrupalUser__userSortInput
}

""""""
input DrupalTaxonomy_term__trawVidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__trawContent_translation_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__uasufrotruSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__tid: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  description: DrupalTaxonomy_term__uasufrotruDescriptionSortInput
  weight: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  content_translation_created: SortOrderEnum
  relationships: DrupalTaxonomy_term__uasufrotruRelationshipsSortInput
  vid: DrupalTaxonomy_term__uasufrotruVidSortInput
  content_translation_uid: DrupalTaxonomy_term__uasufrotruContent_translation_uidSortInput
}

""""""
input DrupalTaxonomy_term__uasufrotruDescriptionSortInput {
  value: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__uasufrotruRelationshipsSortInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput
  parent: DrupalTaxonomy_term__uasufrotruSortInput
  content_translation_uid: DrupalUser__userSortInput
  DrupalTaxonomy_term__uasufrotru: DrupalTaxonomy_term__uasufrotruSortInput
}

""""""
input DrupalTaxonomy_term__uasufrotruVidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__uasufrotruContent_translation_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__uiprawrunatiSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__tid: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  description: DrupalTaxonomy_term__uiprawrunatiDescriptionSortInput
  weight: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  content_translation_created: SortOrderEnum
  relationships: DrupalTaxonomy_term__uiprawrunatiRelationshipsSortInput
  vid: DrupalTaxonomy_term__uiprawrunatiVidSortInput
  content_translation_uid: DrupalTaxonomy_term__uiprawrunatiContent_translation_uidSortInput
}

""""""
input DrupalTaxonomy_term__uiprawrunatiDescriptionSortInput {
  value: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__uiprawrunatiRelationshipsSortInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput
  parent: DrupalTaxonomy_term__uiprawrunatiSortInput
  content_translation_uid: DrupalUser__userSortInput
  DrupalTaxonomy_term__uiprawrunati: DrupalTaxonomy_term__uiprawrunatiSortInput
}

""""""
input DrupalTaxonomy_term__uiprawrunatiVidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__uiprawrunatiContent_translation_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__slochatSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__tid: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  description: DrupalTaxonomy_term__slochatDescriptionSortInput
  weight: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  content_translation_created: SortOrderEnum
  relationships: DrupalTaxonomy_term__slochatRelationshipsSortInput
  vid: DrupalTaxonomy_term__slochatVidSortInput
  content_translation_uid: DrupalTaxonomy_term__slochatContent_translation_uidSortInput
}

""""""
input DrupalTaxonomy_term__slochatDescriptionSortInput {
  value: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__slochatRelationshipsSortInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput
  content_translation_uid: DrupalUser__userSortInput
}

""""""
input DrupalTaxonomy_term__slochatVidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__slochatContent_translation_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__ciSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__tid: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  description: DrupalTaxonomy_term__ciDescriptionSortInput
  weight: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  content_translation_created: SortOrderEnum
  relationships: DrupalTaxonomy_term__ciRelationshipsSortInput
  vid: DrupalTaxonomy_term__ciVidSortInput
  content_translation_uid: DrupalTaxonomy_term__ciContent_translation_uidSortInput
}

""""""
input DrupalTaxonomy_term__ciDescriptionSortInput {
  value: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__ciRelationshipsSortInput {
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeSortInput
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput
  parent: DrupalTaxonomy_term__ciSortInput
  content_translation_uid: DrupalUser__userSortInput
  DrupalTaxonomy_term__ci: DrupalTaxonomy_term__ciSortInput
}

""""""
input DrupalTaxonomy_term__ciVidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__ciContent_translation_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__clSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__tid: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  description: DrupalTaxonomy_term__clDescriptionSortInput
  weight: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  content_translation_created: SortOrderEnum
  relationships: DrupalTaxonomy_term__clRelationshipsSortInput
  vid: DrupalTaxonomy_term__clVidSortInput
  content_translation_uid: DrupalTaxonomy_term__clContent_translation_uidSortInput
}

""""""
input DrupalTaxonomy_term__clDescriptionSortInput {
  value: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__clRelationshipsSortInput {
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput
  parent: DrupalTaxonomy_term__clSortInput
  content_translation_uid: DrupalUser__userSortInput
  DrupalTaxonomy_term__cl: DrupalTaxonomy_term__clSortInput
}

""""""
input DrupalTaxonomy_term__clVidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__clContent_translation_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__gestepSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__tid: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  revision_created: SortOrderEnum
  status: SortOrderEnum
  name: SortOrderEnum
  description: DrupalTaxonomy_term__gestepDescriptionSortInput
  weight: SortOrderEnum
  changed: SortOrderEnum
  default_langcode: SortOrderEnum
  revision_translation_affected: SortOrderEnum
  content_translation_source: SortOrderEnum
  content_translation_outdated: SortOrderEnum
  content_translation_created: SortOrderEnum
  relationships: DrupalTaxonomy_term__gestepRelationshipsSortInput
  vid: DrupalTaxonomy_term__gestepVidSortInput
  content_translation_uid: DrupalTaxonomy_term__gestepContent_translation_uidSortInput
}

""""""
input DrupalTaxonomy_term__gestepDescriptionSortInput {
  value: SortOrderEnum
  processed: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__gestepRelationshipsSortInput {
  DrupalNode__nik_content_type: DrupalNode__nik_content_typeSortInput
  vid: DrupalTaxonomy_vocabulary__taxonomy_vocabularySortInput
  content_translation_uid: DrupalUser__userSortInput
}

""""""
input DrupalTaxonomy_term__gestepVidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__gestepContent_translation_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__belatubVidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalTaxonomy_term__belatubContent_translation_uidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
input DrupalFile__fileUidSortInput {
  drupal_internal__target_id: SortOrderEnum
}

""""""
type DrupalFiles implements Node & RemoteFile {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  mimeType: String!
  filename: String!
  filesize: Int
  width: Int
  height: Int
  publicUrl: String!
  resize(
    width: Int
    height: Int
    aspectRatio: Float
    fit: RemoteFileFit = COVER

    "\nThe image formats to generate. Valid values are AUTO (meaning the same format as the source image), JPG, PNG, WEBP and AVIF.\nThe default value is [AUTO, WEBP, AVIF], and you should rarely need to change this. Take care if you specify JPG or PNG when you do\nnot know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying\nboth PNG and JPG is not supported and will be ignored."
    format: RemoteFileFormat = AUTO
    cropFocus: [RemoteFileCropFocus]
    quality: Int = 75
  ): RemoteFileResize

  """
  Data used in the <GatsbyImage /> component. See https://gatsby.dev/img for more info.
  """
  gatsbyImage(
    "\nThe layout for the image.\nFIXED: A static image sized, that does not resize according to the screen width\nFULL_WIDTH: The image resizes to fit its container. Pass a \"sizes\" option if it isn't going to be the full width of the screen.\nCONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.\n"
    layout: RemoteFileLayout = CONSTRAINED

    "\nThe display width of the generated image for layout = FIXED, and the display width of the largest image for layout = CONSTRAINED.\nThe actual largest image resolution will be this value multiplied by the largest value in outputPixelDensities\nIgnored if layout = FLUID.\n"
    width: Int

    "\nIf set, the height of the generated image. If omitted, it is calculated from the supplied width, matching the aspect ratio of the source image."
    height: Int

    """Setting "placeholder" is not supported in Netlify Connect"""
    placeholder: RemoteFilePlaceholder = NONE @deprecated(reason: "Setting \"placeholder\" is not supported in Netlify Connect")

    "\nIf set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.\nIf neither width or height is provided, height will be set based on the intrinsic width of the source image.\n"
    aspectRatio: Float

    "\nThe image formats to generate. Valid values are AUTO (meaning the same format as the source image), JPG, PNG, WEBP and AVIF.\nThe default value is [AUTO, WEBP, AVIF], and you should rarely need to change this. Take care if you specify JPG or PNG when you do\nnot know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying\nboth PNG and JPG is not supported and will be ignored.\n"
    formats: [RemoteFileFormat!] = [AUTO, WEBP, AVIF]

    "\nA list of image pixel densities to generate for FIXED and CONSTRAINED images. You should rarely need to change this. It will never generate images larger than the source, and will always include a 1x image.\nDefault is [ 1, 2 ] for fixed images, meaning 1x, 2x, and [0.25, 0.5, 1, 2] for fluid. In this case, an image with a fluid layout and width = 400 would generate images at 100, 200, 400 and 800px wide.\n"
    outputPixelDensities: [Float] = [0.25, 0.5, 1, 2]

    "\nSpecifies the image widths to generate. You should rarely need to change this. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,\nbased on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].\nIt will never generate any images larger than the source.\n"
    breakpoints: [Int] = [750, 1080, 1366, 1920]

    "\nThe \"sizes\" property, passed to the img tag. This describes the display size of the image.\nThis does not affect the generated images, but is used by the browser to decide which images to download. You can leave this blank for fixed images, or if the responsive image\ncontainer will be the full width of the screen. In these cases we will generate an appropriate value.\n"
    sizes: String

    """
    Background color applied to the wrapper, or when "letterboxing" an image to another aspect ratio.
    """
    backgroundColor: String
    fit: RemoteFileFit = COVER
    cropFocus: [RemoteFileCropFocus]
    quality: Int = 75
  ): GatsbyImageData
}

""""""
type DrupalFilesConnection {
  totalCount: Int!
  edges: [DrupalFilesEdge!]!
  nodes: [DrupalFiles!]!
  pageInfo: PageInfo!
  distinct(field: DrupalFilesFieldSelector!): [String!]!
  max(field: DrupalFilesFieldSelector!): Float
  min(field: DrupalFilesFieldSelector!): Float
  sum(field: DrupalFilesFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalFilesFieldSelector!): [DrupalFilesGroupConnection!]!
}

""""""
type DrupalFilesEdge {
  next: DrupalFiles
  node: DrupalFiles!
  previous: DrupalFiles
}

""""""
input DrupalFilesFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  mimeType: FieldSelectorEnum
  filename: FieldSelectorEnum
  filesize: FieldSelectorEnum
  width: FieldSelectorEnum
  height: FieldSelectorEnum
  publicUrl: FieldSelectorEnum
  resize: RemoteFileResizeFieldSelector
  gatsbyImage: FieldSelectorEnum
}

""""""
type DrupalFilesGroupConnection {
  totalCount: Int!
  edges: [DrupalFilesEdge!]!
  nodes: [DrupalFiles!]!
  pageInfo: PageInfo!
  distinct(field: DrupalFilesFieldSelector!): [String!]!
  max(field: DrupalFilesFieldSelector!): Float
  min(field: DrupalFilesFieldSelector!): Float
  sum(field: DrupalFilesFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalFilesFieldSelector!): [DrupalFilesGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
input DrupalFilesFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  mimeType: StringQueryOperatorInput
  filename: StringQueryOperatorInput
  filesize: IntQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  publicUrl: StringQueryOperatorInput
  resize: RemoteFileResizeFilterInput
  gatsbyImage: GatsbyImageDataQueryOperatorInput
}

""""""
input DrupalFilesSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  mimeType: SortOrderEnum
  filename: SortOrderEnum
  filesize: SortOrderEnum
  width: SortOrderEnum
  height: SortOrderEnum
  publicUrl: SortOrderEnum
  resize: RemoteFileResizeSortInput
  gatsbyImage: SortOrderEnum
}

""""""
type DrupalUser__userConnection {
  totalCount: Int!
  edges: [DrupalUser__userEdge!]!
  nodes: [DrupalUser__user!]!
  pageInfo: PageInfo!
  distinct(field: DrupalUser__userFieldSelector!): [String!]!
  max(field: DrupalUser__userFieldSelector!): Float
  min(field: DrupalUser__userFieldSelector!): Float
  sum(field: DrupalUser__userFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalUser__userFieldSelector!): [DrupalUser__userGroupConnection!]!
}

""""""
type DrupalUser__userEdge {
  next: DrupalUser__user
  node: DrupalUser__user!
  previous: DrupalUser__user
}

""""""
type DrupalUser__userGroupConnection {
  totalCount: Int!
  edges: [DrupalUser__userEdge!]!
  nodes: [DrupalUser__user!]!
  pageInfo: PageInfo!
  distinct(field: DrupalUser__userFieldSelector!): [String!]!
  max(field: DrupalUser__userFieldSelector!): Float
  min(field: DrupalUser__userFieldSelector!): Float
  sum(field: DrupalUser__userFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalUser__userFieldSelector!): [DrupalUser__userGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalNode__drupal_test_content_typeConnection {
  totalCount: Int!
  edges: [DrupalNode__drupal_test_content_typeEdge!]!
  nodes: [DrupalNode__drupal_test_content_type!]!
  pageInfo: PageInfo!
  distinct(field: DrupalNode__drupal_test_content_typeFieldSelector!): [String!]!
  max(field: DrupalNode__drupal_test_content_typeFieldSelector!): Float
  min(field: DrupalNode__drupal_test_content_typeFieldSelector!): Float
  sum(field: DrupalNode__drupal_test_content_typeFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalNode__drupal_test_content_typeFieldSelector!): [DrupalNode__drupal_test_content_typeGroupConnection!]!
}

""""""
type DrupalNode__drupal_test_content_typeEdge {
  next: DrupalNode__drupal_test_content_type
  node: DrupalNode__drupal_test_content_type!
  previous: DrupalNode__drupal_test_content_type
}

""""""
type DrupalNode__drupal_test_content_typeGroupConnection {
  totalCount: Int!
  edges: [DrupalNode__drupal_test_content_typeEdge!]!
  nodes: [DrupalNode__drupal_test_content_type!]!
  pageInfo: PageInfo!
  distinct(field: DrupalNode__drupal_test_content_typeFieldSelector!): [String!]!
  max(field: DrupalNode__drupal_test_content_typeFieldSelector!): Float
  min(field: DrupalNode__drupal_test_content_typeFieldSelector!): Float
  sum(field: DrupalNode__drupal_test_content_typeFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalNode__drupal_test_content_typeFieldSelector!): [DrupalNode__drupal_test_content_typeGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalNode_type__node_typeConnection {
  totalCount: Int!
  edges: [DrupalNode_type__node_typeEdge!]!
  nodes: [DrupalNode_type__node_type!]!
  pageInfo: PageInfo!
  distinct(field: DrupalNode_type__node_typeFieldSelector!): [String!]!
  max(field: DrupalNode_type__node_typeFieldSelector!): Float
  min(field: DrupalNode_type__node_typeFieldSelector!): Float
  sum(field: DrupalNode_type__node_typeFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalNode_type__node_typeFieldSelector!): [DrupalNode_type__node_typeGroupConnection!]!
}

""""""
type DrupalNode_type__node_typeEdge {
  next: DrupalNode_type__node_type
  node: DrupalNode_type__node_type!
  previous: DrupalNode_type__node_type
}

""""""
type DrupalNode_type__node_typeGroupConnection {
  totalCount: Int!
  edges: [DrupalNode_type__node_typeEdge!]!
  nodes: [DrupalNode_type__node_type!]!
  pageInfo: PageInfo!
  distinct(field: DrupalNode_type__node_typeFieldSelector!): [String!]!
  max(field: DrupalNode_type__node_typeFieldSelector!): Float
  min(field: DrupalNode_type__node_typeFieldSelector!): Float
  sum(field: DrupalNode_type__node_typeFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalNode_type__node_typeFieldSelector!): [DrupalNode_type__node_typeGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalNode__userConnection {
  totalCount: Int!
  edges: [DrupalNode__userEdge!]!
  nodes: [DrupalNode__user!]!
  pageInfo: PageInfo!
  distinct(field: DrupalNode__userFieldSelector!): [String!]!
  max(field: DrupalNode__userFieldSelector!): Float
  min(field: DrupalNode__userFieldSelector!): Float
  sum(field: DrupalNode__userFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalNode__userFieldSelector!): [DrupalNode__userGroupConnection!]!
}

""""""
type DrupalNode__userEdge {
  next: DrupalNode__user
  node: DrupalNode__user!
  previous: DrupalNode__user
}

""""""
type DrupalNode__userGroupConnection {
  totalCount: Int!
  edges: [DrupalNode__userEdge!]!
  nodes: [DrupalNode__user!]!
  pageInfo: PageInfo!
  distinct(field: DrupalNode__userFieldSelector!): [String!]!
  max(field: DrupalNode__userFieldSelector!): Float
  min(field: DrupalNode__userFieldSelector!): Float
  sum(field: DrupalNode__userFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalNode__userFieldSelector!): [DrupalNode__userGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
input DrupalNode__nik_content_typeField_test_bodyFilterListInput {
  elemMatch: DrupalNode__nik_content_typeField_test_bodyFilterInput
}

""""""
input DrupalNode__nik_content_typeField_list_union_typeFilterListInput {
  elemMatch: DrupalNode__nik_content_typeField_list_union_typeFilterInput
}

""""""
input DrupalNode__nik_content_typeField_list_referenceFilterListInput {
  elemMatch: DrupalNode__nik_content_typeField_list_referenceFilterInput
}

""""""
input DrupalNode__nik_content_typeField_list_file_imageFilterListInput {
  elemMatch: DrupalNode__nik_content_typeField_list_file_imageFilterInput
}

""""""
input DrupalNode__nik_content_typeField_paragraphFilterListInput {
  elemMatch: DrupalNode__nik_content_typeField_paragraphFilterInput
}

""""""
type DrupalNode__nik_content_typeConnection {
  totalCount: Int!
  edges: [DrupalNode__nik_content_typeEdge!]!
  nodes: [DrupalNode__nik_content_type!]!
  pageInfo: PageInfo!
  distinct(field: DrupalNode__nik_content_typeFieldSelector!): [String!]!
  max(field: DrupalNode__nik_content_typeFieldSelector!): Float
  min(field: DrupalNode__nik_content_typeFieldSelector!): Float
  sum(field: DrupalNode__nik_content_typeFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalNode__nik_content_typeFieldSelector!): [DrupalNode__nik_content_typeGroupConnection!]!
}

""""""
type DrupalNode__nik_content_typeEdge {
  next: DrupalNode__nik_content_type
  node: DrupalNode__nik_content_type!
  previous: DrupalNode__nik_content_type
}

""""""
type DrupalNode__nik_content_typeGroupConnection {
  totalCount: Int!
  edges: [DrupalNode__nik_content_typeEdge!]!
  nodes: [DrupalNode__nik_content_type!]!
  pageInfo: PageInfo!
  distinct(field: DrupalNode__nik_content_typeFieldSelector!): [String!]!
  max(field: DrupalNode__nik_content_typeFieldSelector!): Float
  min(field: DrupalNode__nik_content_typeFieldSelector!): Float
  sum(field: DrupalNode__nik_content_typeFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalNode__nik_content_typeFieldSelector!): [DrupalNode__nik_content_typeGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalTaxonomy_term__ciConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__ciEdge!]!
  nodes: [DrupalTaxonomy_term__ci!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__ciFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__ciFieldSelector!): Float
  min(field: DrupalTaxonomy_term__ciFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__ciFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__ciFieldSelector!): [DrupalTaxonomy_term__ciGroupConnection!]!
}

""""""
type DrupalTaxonomy_term__ciEdge {
  next: DrupalTaxonomy_term__ci
  node: DrupalTaxonomy_term__ci!
  previous: DrupalTaxonomy_term__ci
}

""""""
type DrupalTaxonomy_term__ciGroupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__ciEdge!]!
  nodes: [DrupalTaxonomy_term__ci!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__ciFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__ciFieldSelector!): Float
  min(field: DrupalTaxonomy_term__ciFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__ciFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__ciFieldSelector!): [DrupalTaxonomy_term__ciGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalTaxonomy_vocabulary__taxonomy_vocabularyConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_vocabulary__taxonomy_vocabularyEdge!]!
  nodes: [DrupalTaxonomy_vocabulary__taxonomy_vocabulary!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector!): Float
  min(field: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector!): Float
  sum(field: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector!): [DrupalTaxonomy_vocabulary__taxonomy_vocabularyGroupConnection!]!
}

""""""
type DrupalTaxonomy_vocabulary__taxonomy_vocabularyEdge {
  next: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
  node: DrupalTaxonomy_vocabulary__taxonomy_vocabulary!
  previous: DrupalTaxonomy_vocabulary__taxonomy_vocabulary
}

""""""
type DrupalTaxonomy_vocabulary__taxonomy_vocabularyGroupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_vocabulary__taxonomy_vocabularyEdge!]!
  nodes: [DrupalTaxonomy_vocabulary__taxonomy_vocabulary!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector!): Float
  min(field: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector!): Float
  sum(field: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_vocabulary__taxonomy_vocabularyFieldSelector!): [DrupalTaxonomy_vocabulary__taxonomy_vocabularyGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalTaxonomy_term__rejConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__rejEdge!]!
  nodes: [DrupalTaxonomy_term__rej!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__rejFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__rejFieldSelector!): Float
  min(field: DrupalTaxonomy_term__rejFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__rejFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__rejFieldSelector!): [DrupalTaxonomy_term__rejGroupConnection!]!
}

""""""
type DrupalTaxonomy_term__rejEdge {
  next: DrupalTaxonomy_term__rej
  node: DrupalTaxonomy_term__rej!
  previous: DrupalTaxonomy_term__rej
}

""""""
type DrupalTaxonomy_term__rejGroupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__rejEdge!]!
  nodes: [DrupalTaxonomy_term__rej!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__rejFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__rejFieldSelector!): Float
  min(field: DrupalTaxonomy_term__rejFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__rejFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__rejFieldSelector!): [DrupalTaxonomy_term__rejGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalTaxonomy_term__nouiConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__nouiEdge!]!
  nodes: [DrupalTaxonomy_term__noui!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__nouiFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__nouiFieldSelector!): Float
  min(field: DrupalTaxonomy_term__nouiFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__nouiFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__nouiFieldSelector!): [DrupalTaxonomy_term__nouiGroupConnection!]!
}

""""""
type DrupalTaxonomy_term__nouiEdge {
  next: DrupalTaxonomy_term__noui
  node: DrupalTaxonomy_term__noui!
  previous: DrupalTaxonomy_term__noui
}

""""""
type DrupalTaxonomy_term__nouiGroupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__nouiEdge!]!
  nodes: [DrupalTaxonomy_term__noui!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__nouiFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__nouiFieldSelector!): Float
  min(field: DrupalTaxonomy_term__nouiFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__nouiFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__nouiFieldSelector!): [DrupalTaxonomy_term__nouiGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalTaxonomy_term__chestConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__chestEdge!]!
  nodes: [DrupalTaxonomy_term__chest!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__chestFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__chestFieldSelector!): Float
  min(field: DrupalTaxonomy_term__chestFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__chestFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__chestFieldSelector!): [DrupalTaxonomy_term__chestGroupConnection!]!
}

""""""
type DrupalTaxonomy_term__chestEdge {
  next: DrupalTaxonomy_term__chest
  node: DrupalTaxonomy_term__chest!
  previous: DrupalTaxonomy_term__chest
}

""""""
type DrupalTaxonomy_term__chestGroupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__chestEdge!]!
  nodes: [DrupalTaxonomy_term__chest!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__chestFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__chestFieldSelector!): Float
  min(field: DrupalTaxonomy_term__chestFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__chestFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__chestFieldSelector!): [DrupalTaxonomy_term__chestGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalTaxonomy_term__devupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__devupEdge!]!
  nodes: [DrupalTaxonomy_term__devup!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__devupFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__devupFieldSelector!): Float
  min(field: DrupalTaxonomy_term__devupFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__devupFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__devupFieldSelector!): [DrupalTaxonomy_term__devupGroupConnection!]!
}

""""""
type DrupalTaxonomy_term__devupEdge {
  next: DrupalTaxonomy_term__devup
  node: DrupalTaxonomy_term__devup!
  previous: DrupalTaxonomy_term__devup
}

""""""
type DrupalTaxonomy_term__devupGroupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__devupEdge!]!
  nodes: [DrupalTaxonomy_term__devup!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__devupFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__devupFieldSelector!): Float
  min(field: DrupalTaxonomy_term__devupFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__devupFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__devupFieldSelector!): [DrupalTaxonomy_term__devupGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalTaxonomy_term__testing_taxonomyConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__testing_taxonomyEdge!]!
  nodes: [DrupalTaxonomy_term__testing_taxonomy!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__testing_taxonomyFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__testing_taxonomyFieldSelector!): Float
  min(field: DrupalTaxonomy_term__testing_taxonomyFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__testing_taxonomyFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__testing_taxonomyFieldSelector!): [DrupalTaxonomy_term__testing_taxonomyGroupConnection!]!
}

""""""
type DrupalTaxonomy_term__testing_taxonomyEdge {
  next: DrupalTaxonomy_term__testing_taxonomy
  node: DrupalTaxonomy_term__testing_taxonomy!
  previous: DrupalTaxonomy_term__testing_taxonomy
}

""""""
type DrupalTaxonomy_term__testing_taxonomyGroupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__testing_taxonomyEdge!]!
  nodes: [DrupalTaxonomy_term__testing_taxonomy!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__testing_taxonomyFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__testing_taxonomyFieldSelector!): Float
  min(field: DrupalTaxonomy_term__testing_taxonomyFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__testing_taxonomyFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__testing_taxonomyFieldSelector!): [DrupalTaxonomy_term__testing_taxonomyGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalTaxonomy_term__cishuswalusConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__cishuswalusEdge!]!
  nodes: [DrupalTaxonomy_term__cishuswalus!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__cishuswalusFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__cishuswalusFieldSelector!): Float
  min(field: DrupalTaxonomy_term__cishuswalusFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__cishuswalusFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__cishuswalusFieldSelector!): [DrupalTaxonomy_term__cishuswalusGroupConnection!]!
}

""""""
type DrupalTaxonomy_term__cishuswalusEdge {
  next: DrupalTaxonomy_term__cishuswalus
  node: DrupalTaxonomy_term__cishuswalus!
  previous: DrupalTaxonomy_term__cishuswalus
}

""""""
type DrupalTaxonomy_term__cishuswalusGroupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__cishuswalusEdge!]!
  nodes: [DrupalTaxonomy_term__cishuswalus!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__cishuswalusFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__cishuswalusFieldSelector!): Float
  min(field: DrupalTaxonomy_term__cishuswalusFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__cishuswalusFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__cishuswalusFieldSelector!): [DrupalTaxonomy_term__cishuswalusGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalTaxonomy_term__tiConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__tiEdge!]!
  nodes: [DrupalTaxonomy_term__ti!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__tiFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__tiFieldSelector!): Float
  min(field: DrupalTaxonomy_term__tiFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__tiFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__tiFieldSelector!): [DrupalTaxonomy_term__tiGroupConnection!]!
}

""""""
type DrupalTaxonomy_term__tiEdge {
  next: DrupalTaxonomy_term__ti
  node: DrupalTaxonomy_term__ti!
  previous: DrupalTaxonomy_term__ti
}

""""""
type DrupalTaxonomy_term__tiGroupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__tiEdge!]!
  nodes: [DrupalTaxonomy_term__ti!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__tiFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__tiFieldSelector!): Float
  min(field: DrupalTaxonomy_term__tiFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__tiFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__tiFieldSelector!): [DrupalTaxonomy_term__tiGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalTaxonomy_term__hiwrewruConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__hiwrewruEdge!]!
  nodes: [DrupalTaxonomy_term__hiwrewru!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__hiwrewruFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__hiwrewruFieldSelector!): Float
  min(field: DrupalTaxonomy_term__hiwrewruFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__hiwrewruFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__hiwrewruFieldSelector!): [DrupalTaxonomy_term__hiwrewruGroupConnection!]!
}

""""""
type DrupalTaxonomy_term__hiwrewruEdge {
  next: DrupalTaxonomy_term__hiwrewru
  node: DrupalTaxonomy_term__hiwrewru!
  previous: DrupalTaxonomy_term__hiwrewru
}

""""""
type DrupalTaxonomy_term__hiwrewruGroupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__hiwrewruEdge!]!
  nodes: [DrupalTaxonomy_term__hiwrewru!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__hiwrewruFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__hiwrewruFieldSelector!): Float
  min(field: DrupalTaxonomy_term__hiwrewruFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__hiwrewruFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__hiwrewruFieldSelector!): [DrupalTaxonomy_term__hiwrewruGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalTaxonomy_term__uutrConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__uutrEdge!]!
  nodes: [DrupalTaxonomy_term__uutr!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__uutrFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__uutrFieldSelector!): Float
  min(field: DrupalTaxonomy_term__uutrFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__uutrFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__uutrFieldSelector!): [DrupalTaxonomy_term__uutrGroupConnection!]!
}

""""""
type DrupalTaxonomy_term__uutrEdge {
  next: DrupalTaxonomy_term__uutr
  node: DrupalTaxonomy_term__uutr!
  previous: DrupalTaxonomy_term__uutr
}

""""""
type DrupalTaxonomy_term__uutrGroupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__uutrEdge!]!
  nodes: [DrupalTaxonomy_term__uutr!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__uutrFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__uutrFieldSelector!): Float
  min(field: DrupalTaxonomy_term__uutrFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__uutrFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__uutrFieldSelector!): [DrupalTaxonomy_term__uutrGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalTaxonomy_term__drouawipasConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__drouawipasEdge!]!
  nodes: [DrupalTaxonomy_term__drouawipas!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__drouawipasFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__drouawipasFieldSelector!): Float
  min(field: DrupalTaxonomy_term__drouawipasFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__drouawipasFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__drouawipasFieldSelector!): [DrupalTaxonomy_term__drouawipasGroupConnection!]!
}

""""""
type DrupalTaxonomy_term__drouawipasEdge {
  next: DrupalTaxonomy_term__drouawipas
  node: DrupalTaxonomy_term__drouawipas!
  previous: DrupalTaxonomy_term__drouawipas
}

""""""
type DrupalTaxonomy_term__drouawipasGroupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__drouawipasEdge!]!
  nodes: [DrupalTaxonomy_term__drouawipas!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__drouawipasFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__drouawipasFieldSelector!): Float
  min(field: DrupalTaxonomy_term__drouawipasFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__drouawipasFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__drouawipasFieldSelector!): [DrupalTaxonomy_term__drouawipasGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalTaxonomy_term__shitabrekoConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__shitabrekoEdge!]!
  nodes: [DrupalTaxonomy_term__shitabreko!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__shitabrekoFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__shitabrekoFieldSelector!): Float
  min(field: DrupalTaxonomy_term__shitabrekoFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__shitabrekoFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__shitabrekoFieldSelector!): [DrupalTaxonomy_term__shitabrekoGroupConnection!]!
}

""""""
type DrupalTaxonomy_term__shitabrekoEdge {
  next: DrupalTaxonomy_term__shitabreko
  node: DrupalTaxonomy_term__shitabreko!
  previous: DrupalTaxonomy_term__shitabreko
}

""""""
type DrupalTaxonomy_term__shitabrekoGroupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__shitabrekoEdge!]!
  nodes: [DrupalTaxonomy_term__shitabreko!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__shitabrekoFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__shitabrekoFieldSelector!): Float
  min(field: DrupalTaxonomy_term__shitabrekoFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__shitabrekoFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__shitabrekoFieldSelector!): [DrupalTaxonomy_term__shitabrekoGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalTaxonomy_term__triConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__triEdge!]!
  nodes: [DrupalTaxonomy_term__tri!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__triFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__triFieldSelector!): Float
  min(field: DrupalTaxonomy_term__triFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__triFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__triFieldSelector!): [DrupalTaxonomy_term__triGroupConnection!]!
}

""""""
type DrupalTaxonomy_term__triEdge {
  next: DrupalTaxonomy_term__tri
  node: DrupalTaxonomy_term__tri!
  previous: DrupalTaxonomy_term__tri
}

""""""
type DrupalTaxonomy_term__triGroupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__triEdge!]!
  nodes: [DrupalTaxonomy_term__tri!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__triFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__triFieldSelector!): Float
  min(field: DrupalTaxonomy_term__triFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__triFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__triFieldSelector!): [DrupalTaxonomy_term__triGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalTaxonomy_term__stuConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__stuEdge!]!
  nodes: [DrupalTaxonomy_term__stu!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__stuFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__stuFieldSelector!): Float
  min(field: DrupalTaxonomy_term__stuFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__stuFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__stuFieldSelector!): [DrupalTaxonomy_term__stuGroupConnection!]!
}

""""""
type DrupalTaxonomy_term__stuEdge {
  next: DrupalTaxonomy_term__stu
  node: DrupalTaxonomy_term__stu!
  previous: DrupalTaxonomy_term__stu
}

""""""
type DrupalTaxonomy_term__stuGroupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__stuEdge!]!
  nodes: [DrupalTaxonomy_term__stu!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__stuFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__stuFieldSelector!): Float
  min(field: DrupalTaxonomy_term__stuFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__stuFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__stuFieldSelector!): [DrupalTaxonomy_term__stuGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalTaxonomy_term__vaswoConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__vaswoEdge!]!
  nodes: [DrupalTaxonomy_term__vaswo!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__vaswoFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__vaswoFieldSelector!): Float
  min(field: DrupalTaxonomy_term__vaswoFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__vaswoFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__vaswoFieldSelector!): [DrupalTaxonomy_term__vaswoGroupConnection!]!
}

""""""
type DrupalTaxonomy_term__vaswoEdge {
  next: DrupalTaxonomy_term__vaswo
  node: DrupalTaxonomy_term__vaswo!
  previous: DrupalTaxonomy_term__vaswo
}

""""""
type DrupalTaxonomy_term__vaswoGroupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__vaswoEdge!]!
  nodes: [DrupalTaxonomy_term__vaswo!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__vaswoFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__vaswoFieldSelector!): Float
  min(field: DrupalTaxonomy_term__vaswoFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__vaswoFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__vaswoFieldSelector!): [DrupalTaxonomy_term__vaswoGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalTaxonomy_term__lomolafConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__lomolafEdge!]!
  nodes: [DrupalTaxonomy_term__lomolaf!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__lomolafFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__lomolafFieldSelector!): Float
  min(field: DrupalTaxonomy_term__lomolafFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__lomolafFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__lomolafFieldSelector!): [DrupalTaxonomy_term__lomolafGroupConnection!]!
}

""""""
type DrupalTaxonomy_term__lomolafEdge {
  next: DrupalTaxonomy_term__lomolaf
  node: DrupalTaxonomy_term__lomolaf!
  previous: DrupalTaxonomy_term__lomolaf
}

""""""
type DrupalTaxonomy_term__lomolafGroupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__lomolafEdge!]!
  nodes: [DrupalTaxonomy_term__lomolaf!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__lomolafFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__lomolafFieldSelector!): Float
  min(field: DrupalTaxonomy_term__lomolafFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__lomolafFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__lomolafFieldSelector!): [DrupalTaxonomy_term__lomolafGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalTaxonomy_term__clasConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__clasEdge!]!
  nodes: [DrupalTaxonomy_term__clas!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__clasFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__clasFieldSelector!): Float
  min(field: DrupalTaxonomy_term__clasFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__clasFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__clasFieldSelector!): [DrupalTaxonomy_term__clasGroupConnection!]!
}

""""""
type DrupalTaxonomy_term__clasEdge {
  next: DrupalTaxonomy_term__clas
  node: DrupalTaxonomy_term__clas!
  previous: DrupalTaxonomy_term__clas
}

""""""
type DrupalTaxonomy_term__clasGroupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__clasEdge!]!
  nodes: [DrupalTaxonomy_term__clas!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__clasFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__clasFieldSelector!): Float
  min(field: DrupalTaxonomy_term__clasFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__clasFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__clasFieldSelector!): [DrupalTaxonomy_term__clasGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalTaxonomy_term__trawConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__trawEdge!]!
  nodes: [DrupalTaxonomy_term__traw!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__trawFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__trawFieldSelector!): Float
  min(field: DrupalTaxonomy_term__trawFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__trawFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__trawFieldSelector!): [DrupalTaxonomy_term__trawGroupConnection!]!
}

""""""
type DrupalTaxonomy_term__trawEdge {
  next: DrupalTaxonomy_term__traw
  node: DrupalTaxonomy_term__traw!
  previous: DrupalTaxonomy_term__traw
}

""""""
type DrupalTaxonomy_term__trawGroupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__trawEdge!]!
  nodes: [DrupalTaxonomy_term__traw!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__trawFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__trawFieldSelector!): Float
  min(field: DrupalTaxonomy_term__trawFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__trawFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__trawFieldSelector!): [DrupalTaxonomy_term__trawGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalTaxonomy_term__uasufrotruConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__uasufrotruEdge!]!
  nodes: [DrupalTaxonomy_term__uasufrotru!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__uasufrotruFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__uasufrotruFieldSelector!): Float
  min(field: DrupalTaxonomy_term__uasufrotruFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__uasufrotruFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__uasufrotruFieldSelector!): [DrupalTaxonomy_term__uasufrotruGroupConnection!]!
}

""""""
type DrupalTaxonomy_term__uasufrotruEdge {
  next: DrupalTaxonomy_term__uasufrotru
  node: DrupalTaxonomy_term__uasufrotru!
  previous: DrupalTaxonomy_term__uasufrotru
}

""""""
type DrupalTaxonomy_term__uasufrotruGroupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__uasufrotruEdge!]!
  nodes: [DrupalTaxonomy_term__uasufrotru!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__uasufrotruFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__uasufrotruFieldSelector!): Float
  min(field: DrupalTaxonomy_term__uasufrotruFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__uasufrotruFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__uasufrotruFieldSelector!): [DrupalTaxonomy_term__uasufrotruGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalTaxonomy_term__uiprawrunatiConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__uiprawrunatiEdge!]!
  nodes: [DrupalTaxonomy_term__uiprawrunati!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__uiprawrunatiFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__uiprawrunatiFieldSelector!): Float
  min(field: DrupalTaxonomy_term__uiprawrunatiFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__uiprawrunatiFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__uiprawrunatiFieldSelector!): [DrupalTaxonomy_term__uiprawrunatiGroupConnection!]!
}

""""""
type DrupalTaxonomy_term__uiprawrunatiEdge {
  next: DrupalTaxonomy_term__uiprawrunati
  node: DrupalTaxonomy_term__uiprawrunati!
  previous: DrupalTaxonomy_term__uiprawrunati
}

""""""
type DrupalTaxonomy_term__uiprawrunatiGroupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__uiprawrunatiEdge!]!
  nodes: [DrupalTaxonomy_term__uiprawrunati!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__uiprawrunatiFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__uiprawrunatiFieldSelector!): Float
  min(field: DrupalTaxonomy_term__uiprawrunatiFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__uiprawrunatiFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__uiprawrunatiFieldSelector!): [DrupalTaxonomy_term__uiprawrunatiGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalTaxonomy_term__slochatConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__slochatEdge!]!
  nodes: [DrupalTaxonomy_term__slochat!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__slochatFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__slochatFieldSelector!): Float
  min(field: DrupalTaxonomy_term__slochatFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__slochatFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__slochatFieldSelector!): [DrupalTaxonomy_term__slochatGroupConnection!]!
}

""""""
type DrupalTaxonomy_term__slochatEdge {
  next: DrupalTaxonomy_term__slochat
  node: DrupalTaxonomy_term__slochat!
  previous: DrupalTaxonomy_term__slochat
}

""""""
type DrupalTaxonomy_term__slochatGroupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__slochatEdge!]!
  nodes: [DrupalTaxonomy_term__slochat!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__slochatFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__slochatFieldSelector!): Float
  min(field: DrupalTaxonomy_term__slochatFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__slochatFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__slochatFieldSelector!): [DrupalTaxonomy_term__slochatGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalTaxonomy_term__clConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__clEdge!]!
  nodes: [DrupalTaxonomy_term__cl!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__clFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__clFieldSelector!): Float
  min(field: DrupalTaxonomy_term__clFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__clFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__clFieldSelector!): [DrupalTaxonomy_term__clGroupConnection!]!
}

""""""
type DrupalTaxonomy_term__clEdge {
  next: DrupalTaxonomy_term__cl
  node: DrupalTaxonomy_term__cl!
  previous: DrupalTaxonomy_term__cl
}

""""""
type DrupalTaxonomy_term__clGroupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__clEdge!]!
  nodes: [DrupalTaxonomy_term__cl!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__clFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__clFieldSelector!): Float
  min(field: DrupalTaxonomy_term__clFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__clFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__clFieldSelector!): [DrupalTaxonomy_term__clGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalTaxonomy_term__gestepConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__gestepEdge!]!
  nodes: [DrupalTaxonomy_term__gestep!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__gestepFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__gestepFieldSelector!): Float
  min(field: DrupalTaxonomy_term__gestepFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__gestepFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__gestepFieldSelector!): [DrupalTaxonomy_term__gestepGroupConnection!]!
}

""""""
type DrupalTaxonomy_term__gestepEdge {
  next: DrupalTaxonomy_term__gestep
  node: DrupalTaxonomy_term__gestep!
  previous: DrupalTaxonomy_term__gestep
}

""""""
type DrupalTaxonomy_term__gestepGroupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__gestepEdge!]!
  nodes: [DrupalTaxonomy_term__gestep!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__gestepFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__gestepFieldSelector!): Float
  min(field: DrupalTaxonomy_term__gestepFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__gestepFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__gestepFieldSelector!): [DrupalTaxonomy_term__gestepGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalTaxonomy_term__belatubConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__belatubEdge!]!
  nodes: [DrupalTaxonomy_term__belatub!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__belatubFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__belatubFieldSelector!): Float
  min(field: DrupalTaxonomy_term__belatubFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__belatubFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__belatubFieldSelector!): [DrupalTaxonomy_term__belatubGroupConnection!]!
}

""""""
type DrupalTaxonomy_term__belatubEdge {
  next: DrupalTaxonomy_term__belatub
  node: DrupalTaxonomy_term__belatub!
  previous: DrupalTaxonomy_term__belatub
}

""""""
type DrupalTaxonomy_term__belatubGroupConnection {
  totalCount: Int!
  edges: [DrupalTaxonomy_term__belatubEdge!]!
  nodes: [DrupalTaxonomy_term__belatub!]!
  pageInfo: PageInfo!
  distinct(field: DrupalTaxonomy_term__belatubFieldSelector!): [String!]!
  max(field: DrupalTaxonomy_term__belatubFieldSelector!): Float
  min(field: DrupalTaxonomy_term__belatubFieldSelector!): Float
  sum(field: DrupalTaxonomy_term__belatubFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalTaxonomy_term__belatubFieldSelector!): [DrupalTaxonomy_term__belatubGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalNode__pageConnection {
  totalCount: Int!
  edges: [DrupalNode__pageEdge!]!
  nodes: [DrupalNode__page!]!
  pageInfo: PageInfo!
  distinct(field: DrupalNode__pageFieldSelector!): [String!]!
  max(field: DrupalNode__pageFieldSelector!): Float
  min(field: DrupalNode__pageFieldSelector!): Float
  sum(field: DrupalNode__pageFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalNode__pageFieldSelector!): [DrupalNode__pageGroupConnection!]!
}

""""""
type DrupalNode__pageEdge {
  next: DrupalNode__page
  node: DrupalNode__page!
  previous: DrupalNode__page
}

""""""
type DrupalNode__pageGroupConnection {
  totalCount: Int!
  edges: [DrupalNode__pageEdge!]!
  nodes: [DrupalNode__page!]!
  pageInfo: PageInfo!
  distinct(field: DrupalNode__pageFieldSelector!): [String!]!
  max(field: DrupalNode__pageFieldSelector!): Float
  min(field: DrupalNode__pageFieldSelector!): Float
  sum(field: DrupalNode__pageFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalNode__pageFieldSelector!): [DrupalNode__pageGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
input DrupalNode__test_pageField_reference_listFilterListInput {
  elemMatch: DrupalNode__test_pageField_reference_listFilterInput
}

""""""
type DrupalNode__test_pageConnection {
  totalCount: Int!
  edges: [DrupalNode__test_pageEdge!]!
  nodes: [DrupalNode__test_page!]!
  pageInfo: PageInfo!
  distinct(field: DrupalNode__test_pageFieldSelector!): [String!]!
  max(field: DrupalNode__test_pageFieldSelector!): Float
  min(field: DrupalNode__test_pageFieldSelector!): Float
  sum(field: DrupalNode__test_pageFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalNode__test_pageFieldSelector!): [DrupalNode__test_pageGroupConnection!]!
}

""""""
type DrupalNode__test_pageEdge {
  next: DrupalNode__test_page
  node: DrupalNode__test_page!
  previous: DrupalNode__test_page
}

""""""
type DrupalNode__test_pageGroupConnection {
  totalCount: Int!
  edges: [DrupalNode__test_pageEdge!]!
  nodes: [DrupalNode__test_page!]!
  pageInfo: PageInfo!
  distinct(field: DrupalNode__test_pageFieldSelector!): [String!]!
  max(field: DrupalNode__test_pageFieldSelector!): Float
  min(field: DrupalNode__test_pageFieldSelector!): Float
  sum(field: DrupalNode__test_pageFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalNode__test_pageFieldSelector!): [DrupalNode__test_pageGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalNode__product_pageConnection {
  totalCount: Int!
  edges: [DrupalNode__product_pageEdge!]!
  nodes: [DrupalNode__product_page!]!
  pageInfo: PageInfo!
  distinct(field: DrupalNode__product_pageFieldSelector!): [String!]!
  max(field: DrupalNode__product_pageFieldSelector!): Float
  min(field: DrupalNode__product_pageFieldSelector!): Float
  sum(field: DrupalNode__product_pageFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalNode__product_pageFieldSelector!): [DrupalNode__product_pageGroupConnection!]!
}

""""""
type DrupalNode__product_pageEdge {
  next: DrupalNode__product_page
  node: DrupalNode__product_page!
  previous: DrupalNode__product_page
}

""""""
type DrupalNode__product_pageGroupConnection {
  totalCount: Int!
  edges: [DrupalNode__product_pageEdge!]!
  nodes: [DrupalNode__product_page!]!
  pageInfo: PageInfo!
  distinct(field: DrupalNode__product_pageFieldSelector!): [String!]!
  max(field: DrupalNode__product_pageFieldSelector!): Float
  min(field: DrupalNode__product_pageFieldSelector!): Float
  sum(field: DrupalNode__product_pageFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalNode__product_pageFieldSelector!): [DrupalNode__product_pageGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalMedia__imageConnection {
  totalCount: Int!
  edges: [DrupalMedia__imageEdge!]!
  nodes: [DrupalMedia__image!]!
  pageInfo: PageInfo!
  distinct(field: DrupalMedia__imageFieldSelector!): [String!]!
  max(field: DrupalMedia__imageFieldSelector!): Float
  min(field: DrupalMedia__imageFieldSelector!): Float
  sum(field: DrupalMedia__imageFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalMedia__imageFieldSelector!): [DrupalMedia__imageGroupConnection!]!
}

""""""
type DrupalMedia__imageEdge {
  next: DrupalMedia__image
  node: DrupalMedia__image!
  previous: DrupalMedia__image
}

""""""
type DrupalMedia__imageGroupConnection {
  totalCount: Int!
  edges: [DrupalMedia__imageEdge!]!
  nodes: [DrupalMedia__image!]!
  pageInfo: PageInfo!
  distinct(field: DrupalMedia__imageFieldSelector!): [String!]!
  max(field: DrupalMedia__imageFieldSelector!): Float
  min(field: DrupalMedia__imageFieldSelector!): Float
  sum(field: DrupalMedia__imageFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalMedia__imageFieldSelector!): [DrupalMedia__imageGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalMedia_type__media_typeConnection {
  totalCount: Int!
  edges: [DrupalMedia_type__media_typeEdge!]!
  nodes: [DrupalMedia_type__media_type!]!
  pageInfo: PageInfo!
  distinct(field: DrupalMedia_type__media_typeFieldSelector!): [String!]!
  max(field: DrupalMedia_type__media_typeFieldSelector!): Float
  min(field: DrupalMedia_type__media_typeFieldSelector!): Float
  sum(field: DrupalMedia_type__media_typeFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalMedia_type__media_typeFieldSelector!): [DrupalMedia_type__media_typeGroupConnection!]!
}

""""""
type DrupalMedia_type__media_typeEdge {
  next: DrupalMedia_type__media_type
  node: DrupalMedia_type__media_type!
  previous: DrupalMedia_type__media_type
}

""""""
type DrupalMedia_type__media_typeGroupConnection {
  totalCount: Int!
  edges: [DrupalMedia_type__media_typeEdge!]!
  nodes: [DrupalMedia_type__media_type!]!
  pageInfo: PageInfo!
  distinct(field: DrupalMedia_type__media_typeFieldSelector!): [String!]!
  max(field: DrupalMedia_type__media_typeFieldSelector!): Float
  min(field: DrupalMedia_type__media_typeFieldSelector!): Float
  sum(field: DrupalMedia_type__media_typeFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalMedia_type__media_typeFieldSelector!): [DrupalMedia_type__media_typeGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalMedia__documentConnection {
  totalCount: Int!
  edges: [DrupalMedia__documentEdge!]!
  nodes: [DrupalMedia__document!]!
  pageInfo: PageInfo!
  distinct(field: DrupalMedia__documentFieldSelector!): [String!]!
  max(field: DrupalMedia__documentFieldSelector!): Float
  min(field: DrupalMedia__documentFieldSelector!): Float
  sum(field: DrupalMedia__documentFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalMedia__documentFieldSelector!): [DrupalMedia__documentGroupConnection!]!
}

""""""
type DrupalMedia__documentEdge {
  next: DrupalMedia__document
  node: DrupalMedia__document!
  previous: DrupalMedia__document
}

""""""
type DrupalMedia__documentGroupConnection {
  totalCount: Int!
  edges: [DrupalMedia__documentEdge!]!
  nodes: [DrupalMedia__document!]!
  pageInfo: PageInfo!
  distinct(field: DrupalMedia__documentFieldSelector!): [String!]!
  max(field: DrupalMedia__documentFieldSelector!): Float
  min(field: DrupalMedia__documentFieldSelector!): Float
  sum(field: DrupalMedia__documentFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalMedia__documentFieldSelector!): [DrupalMedia__documentGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalMedia__videoConnection {
  totalCount: Int!
  edges: [DrupalMedia__videoEdge!]!
  nodes: [DrupalMedia__video!]!
  pageInfo: PageInfo!
  distinct(field: DrupalMedia__videoFieldSelector!): [String!]!
  max(field: DrupalMedia__videoFieldSelector!): Float
  min(field: DrupalMedia__videoFieldSelector!): Float
  sum(field: DrupalMedia__videoFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalMedia__videoFieldSelector!): [DrupalMedia__videoGroupConnection!]!
}

""""""
type DrupalMedia__videoEdge {
  next: DrupalMedia__video
  node: DrupalMedia__video!
  previous: DrupalMedia__video
}

""""""
type DrupalMedia__videoGroupConnection {
  totalCount: Int!
  edges: [DrupalMedia__videoEdge!]!
  nodes: [DrupalMedia__video!]!
  pageInfo: PageInfo!
  distinct(field: DrupalMedia__videoFieldSelector!): [String!]!
  max(field: DrupalMedia__videoFieldSelector!): Float
  min(field: DrupalMedia__videoFieldSelector!): Float
  sum(field: DrupalMedia__videoFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalMedia__videoFieldSelector!): [DrupalMedia__videoGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalMedia__remote_videoConnection {
  totalCount: Int!
  edges: [DrupalMedia__remote_videoEdge!]!
  nodes: [DrupalMedia__remote_video!]!
  pageInfo: PageInfo!
  distinct(field: DrupalMedia__remote_videoFieldSelector!): [String!]!
  max(field: DrupalMedia__remote_videoFieldSelector!): Float
  min(field: DrupalMedia__remote_videoFieldSelector!): Float
  sum(field: DrupalMedia__remote_videoFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalMedia__remote_videoFieldSelector!): [DrupalMedia__remote_videoGroupConnection!]!
}

""""""
type DrupalMedia__remote_videoEdge {
  next: DrupalMedia__remote_video
  node: DrupalMedia__remote_video!
  previous: DrupalMedia__remote_video
}

""""""
type DrupalMedia__remote_videoGroupConnection {
  totalCount: Int!
  edges: [DrupalMedia__remote_videoEdge!]!
  nodes: [DrupalMedia__remote_video!]!
  pageInfo: PageInfo!
  distinct(field: DrupalMedia__remote_videoFieldSelector!): [String!]!
  max(field: DrupalMedia__remote_videoFieldSelector!): Float
  min(field: DrupalMedia__remote_videoFieldSelector!): Float
  sum(field: DrupalMedia__remote_videoFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalMedia__remote_videoFieldSelector!): [DrupalMedia__remote_videoGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalMedia__audioConnection {
  totalCount: Int!
  edges: [DrupalMedia__audioEdge!]!
  nodes: [DrupalMedia__audio!]!
  pageInfo: PageInfo!
  distinct(field: DrupalMedia__audioFieldSelector!): [String!]!
  max(field: DrupalMedia__audioFieldSelector!): Float
  min(field: DrupalMedia__audioFieldSelector!): Float
  sum(field: DrupalMedia__audioFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalMedia__audioFieldSelector!): [DrupalMedia__audioGroupConnection!]!
}

""""""
type DrupalMedia__audioEdge {
  next: DrupalMedia__audio
  node: DrupalMedia__audio!
  previous: DrupalMedia__audio
}

""""""
type DrupalMedia__audioGroupConnection {
  totalCount: Int!
  edges: [DrupalMedia__audioEdge!]!
  nodes: [DrupalMedia__audio!]!
  pageInfo: PageInfo!
  distinct(field: DrupalMedia__audioFieldSelector!): [String!]!
  max(field: DrupalMedia__audioFieldSelector!): Float
  min(field: DrupalMedia__audioFieldSelector!): Float
  sum(field: DrupalMedia__audioFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalMedia__audioFieldSelector!): [DrupalMedia__audioGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalBlock_content__basicConnection {
  totalCount: Int!
  edges: [DrupalBlock_content__basicEdge!]!
  nodes: [DrupalBlock_content__basic!]!
  pageInfo: PageInfo!
  distinct(field: DrupalBlock_content__basicFieldSelector!): [String!]!
  max(field: DrupalBlock_content__basicFieldSelector!): Float
  min(field: DrupalBlock_content__basicFieldSelector!): Float
  sum(field: DrupalBlock_content__basicFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalBlock_content__basicFieldSelector!): [DrupalBlock_content__basicGroupConnection!]!
}

""""""
type DrupalBlock_content__basicEdge {
  next: DrupalBlock_content__basic
  node: DrupalBlock_content__basic!
  previous: DrupalBlock_content__basic
}

""""""
type DrupalBlock_content__basicGroupConnection {
  totalCount: Int!
  edges: [DrupalBlock_content__basicEdge!]!
  nodes: [DrupalBlock_content__basic!]!
  pageInfo: PageInfo!
  distinct(field: DrupalBlock_content__basicFieldSelector!): [String!]!
  max(field: DrupalBlock_content__basicFieldSelector!): Float
  min(field: DrupalBlock_content__basicFieldSelector!): Float
  sum(field: DrupalBlock_content__basicFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalBlock_content__basicFieldSelector!): [DrupalBlock_content__basicGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalBlock_content_type__block_content_typeConnection {
  totalCount: Int!
  edges: [DrupalBlock_content_type__block_content_typeEdge!]!
  nodes: [DrupalBlock_content_type__block_content_type!]!
  pageInfo: PageInfo!
  distinct(field: DrupalBlock_content_type__block_content_typeFieldSelector!): [String!]!
  max(field: DrupalBlock_content_type__block_content_typeFieldSelector!): Float
  min(field: DrupalBlock_content_type__block_content_typeFieldSelector!): Float
  sum(field: DrupalBlock_content_type__block_content_typeFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalBlock_content_type__block_content_typeFieldSelector!): [DrupalBlock_content_type__block_content_typeGroupConnection!]!
}

""""""
type DrupalBlock_content_type__block_content_typeEdge {
  next: DrupalBlock_content_type__block_content_type
  node: DrupalBlock_content_type__block_content_type!
  previous: DrupalBlock_content_type__block_content_type
}

""""""
type DrupalBlock_content_type__block_content_typeGroupConnection {
  totalCount: Int!
  edges: [DrupalBlock_content_type__block_content_typeEdge!]!
  nodes: [DrupalBlock_content_type__block_content_type!]!
  pageInfo: PageInfo!
  distinct(field: DrupalBlock_content_type__block_content_typeFieldSelector!): [String!]!
  max(field: DrupalBlock_content_type__block_content_typeFieldSelector!): Float
  min(field: DrupalBlock_content_type__block_content_typeFieldSelector!): Float
  sum(field: DrupalBlock_content_type__block_content_typeFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalBlock_content_type__block_content_typeFieldSelector!): [DrupalBlock_content_type__block_content_typeGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type DrupalSearch_page__search_page implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  langcode: String
  status: Boolean
  dependencies: DrupalSearch_page__search_pageDependencies
  drupal_internal__id: String
  label: String
  path: String
  weight: Int
  plugin: String
}

""""""
type DrupalSearch_page__search_pageDependencies {
  module: [String]
}

""""""
input DrupalSearch_page__search_pageDependenciesFilterInput {
  module: StringQueryOperatorInput
}

""""""
type DrupalSearch_page__search_pageConnection {
  totalCount: Int!
  edges: [DrupalSearch_page__search_pageEdge!]!
  nodes: [DrupalSearch_page__search_page!]!
  pageInfo: PageInfo!
  distinct(field: DrupalSearch_page__search_pageFieldSelector!): [String!]!
  max(field: DrupalSearch_page__search_pageFieldSelector!): Float
  min(field: DrupalSearch_page__search_pageFieldSelector!): Float
  sum(field: DrupalSearch_page__search_pageFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalSearch_page__search_pageFieldSelector!): [DrupalSearch_page__search_pageGroupConnection!]!
}

""""""
type DrupalSearch_page__search_pageEdge {
  next: DrupalSearch_page__search_page
  node: DrupalSearch_page__search_page!
  previous: DrupalSearch_page__search_page
}

""""""
input DrupalSearch_page__search_pageFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  status: FieldSelectorEnum
  dependencies: DrupalSearch_page__search_pageDependenciesFieldSelector
  drupal_internal__id: FieldSelectorEnum
  label: FieldSelectorEnum
  path: FieldSelectorEnum
  weight: FieldSelectorEnum
  plugin: FieldSelectorEnum
}

""""""
input DrupalSearch_page__search_pageDependenciesFieldSelector {
  module: FieldSelectorEnum
}

""""""
type DrupalSearch_page__search_pageGroupConnection {
  totalCount: Int!
  edges: [DrupalSearch_page__search_pageEdge!]!
  nodes: [DrupalSearch_page__search_page!]!
  pageInfo: PageInfo!
  distinct(field: DrupalSearch_page__search_pageFieldSelector!): [String!]!
  max(field: DrupalSearch_page__search_pageFieldSelector!): Float
  min(field: DrupalSearch_page__search_pageFieldSelector!): Float
  sum(field: DrupalSearch_page__search_pageFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalSearch_page__search_pageFieldSelector!): [DrupalSearch_page__search_pageGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
input DrupalSearch_page__search_pageFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  langcode: StringQueryOperatorInput
  status: BooleanQueryOperatorInput
  dependencies: DrupalSearch_page__search_pageDependenciesFilterInput
  drupal_internal__id: StringQueryOperatorInput
  label: StringQueryOperatorInput
  path: StringQueryOperatorInput
  weight: IntQueryOperatorInput
  plugin: StringQueryOperatorInput
}

""""""
input DrupalSearch_page__search_pageSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  langcode: SortOrderEnum
  status: SortOrderEnum
  dependencies: DrupalSearch_page__search_pageDependenciesSortInput
  drupal_internal__id: SortOrderEnum
  label: SortOrderEnum
  path: SortOrderEnum
  weight: SortOrderEnum
  plugin: SortOrderEnum
}

""""""
input DrupalSearch_page__search_pageDependenciesSortInput {
  module: SortOrderEnum
}

""""""
type DrupalPath_alias__path_alias implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__id: Int
  drupal_internal__revision_id: Int
  langcode: String
  path: String
  alias: String
  status: Boolean
}

""""""
type DrupalPath_alias__path_aliasConnection {
  totalCount: Int!
  edges: [DrupalPath_alias__path_aliasEdge!]!
  nodes: [DrupalPath_alias__path_alias!]!
  pageInfo: PageInfo!
  distinct(field: DrupalPath_alias__path_aliasFieldSelector!): [String!]!
  max(field: DrupalPath_alias__path_aliasFieldSelector!): Float
  min(field: DrupalPath_alias__path_aliasFieldSelector!): Float
  sum(field: DrupalPath_alias__path_aliasFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalPath_alias__path_aliasFieldSelector!): [DrupalPath_alias__path_aliasGroupConnection!]!
}

""""""
type DrupalPath_alias__path_aliasEdge {
  next: DrupalPath_alias__path_alias
  node: DrupalPath_alias__path_alias!
  previous: DrupalPath_alias__path_alias
}

""""""
input DrupalPath_alias__path_aliasFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__id: FieldSelectorEnum
  drupal_internal__revision_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  path: FieldSelectorEnum
  alias: FieldSelectorEnum
  status: FieldSelectorEnum
}

""""""
type DrupalPath_alias__path_aliasGroupConnection {
  totalCount: Int!
  edges: [DrupalPath_alias__path_aliasEdge!]!
  nodes: [DrupalPath_alias__path_alias!]!
  pageInfo: PageInfo!
  distinct(field: DrupalPath_alias__path_aliasFieldSelector!): [String!]!
  max(field: DrupalPath_alias__path_aliasFieldSelector!): Float
  min(field: DrupalPath_alias__path_aliasFieldSelector!): Float
  sum(field: DrupalPath_alias__path_aliasFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalPath_alias__path_aliasFieldSelector!): [DrupalPath_alias__path_aliasGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
input DrupalPath_alias__path_aliasFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__id: IntQueryOperatorInput
  drupal_internal__revision_id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  path: StringQueryOperatorInput
  alias: StringQueryOperatorInput
  status: BooleanQueryOperatorInput
}

""""""
input DrupalPath_alias__path_aliasSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__id: SortOrderEnum
  drupal_internal__revision_id: SortOrderEnum
  langcode: SortOrderEnum
  path: SortOrderEnum
  alias: SortOrderEnum
  status: SortOrderEnum
}

""""""
type DrupalParagraphs_type__paragraphs_type implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  label: String
}

""""""
type DrupalParagraphs_type__paragraphs_typeConnection {
  totalCount: Int!
  edges: [DrupalParagraphs_type__paragraphs_typeEdge!]!
  nodes: [DrupalParagraphs_type__paragraphs_type!]!
  pageInfo: PageInfo!
  distinct(field: DrupalParagraphs_type__paragraphs_typeFieldSelector!): [String!]!
  max(field: DrupalParagraphs_type__paragraphs_typeFieldSelector!): Float
  min(field: DrupalParagraphs_type__paragraphs_typeFieldSelector!): Float
  sum(field: DrupalParagraphs_type__paragraphs_typeFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalParagraphs_type__paragraphs_typeFieldSelector!): [DrupalParagraphs_type__paragraphs_typeGroupConnection!]!
}

""""""
type DrupalParagraphs_type__paragraphs_typeEdge {
  next: DrupalParagraphs_type__paragraphs_type
  node: DrupalParagraphs_type__paragraphs_type!
  previous: DrupalParagraphs_type__paragraphs_type
}

""""""
input DrupalParagraphs_type__paragraphs_typeFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  label: FieldSelectorEnum
}

""""""
type DrupalParagraphs_type__paragraphs_typeGroupConnection {
  totalCount: Int!
  edges: [DrupalParagraphs_type__paragraphs_typeEdge!]!
  nodes: [DrupalParagraphs_type__paragraphs_type!]!
  pageInfo: PageInfo!
  distinct(field: DrupalParagraphs_type__paragraphs_typeFieldSelector!): [String!]!
  max(field: DrupalParagraphs_type__paragraphs_typeFieldSelector!): Float
  min(field: DrupalParagraphs_type__paragraphs_typeFieldSelector!): Float
  sum(field: DrupalParagraphs_type__paragraphs_typeFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalParagraphs_type__paragraphs_typeFieldSelector!): [DrupalParagraphs_type__paragraphs_typeGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
input DrupalParagraphs_type__paragraphs_typeFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  label: StringQueryOperatorInput
}

""""""
input DrupalParagraphs_type__paragraphs_typeSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  label: SortOrderEnum
}

""""""
type DrupalMenu__menu implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  label: String
}

""""""
type DrupalMenu__menuConnection {
  totalCount: Int!
  edges: [DrupalMenu__menuEdge!]!
  nodes: [DrupalMenu__menu!]!
  pageInfo: PageInfo!
  distinct(field: DrupalMenu__menuFieldSelector!): [String!]!
  max(field: DrupalMenu__menuFieldSelector!): Float
  min(field: DrupalMenu__menuFieldSelector!): Float
  sum(field: DrupalMenu__menuFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalMenu__menuFieldSelector!): [DrupalMenu__menuGroupConnection!]!
}

""""""
type DrupalMenu__menuEdge {
  next: DrupalMenu__menu
  node: DrupalMenu__menu!
  previous: DrupalMenu__menu
}

""""""
input DrupalMenu__menuFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  label: FieldSelectorEnum
}

""""""
type DrupalMenu__menuGroupConnection {
  totalCount: Int!
  edges: [DrupalMenu__menuEdge!]!
  nodes: [DrupalMenu__menu!]!
  pageInfo: PageInfo!
  distinct(field: DrupalMenu__menuFieldSelector!): [String!]!
  max(field: DrupalMenu__menuFieldSelector!): Float
  min(field: DrupalMenu__menuFieldSelector!): Float
  sum(field: DrupalMenu__menuFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalMenu__menuFieldSelector!): [DrupalMenu__menuGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
input DrupalMenu__menuFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  label: StringQueryOperatorInput
}

""""""
input DrupalMenu__menuSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  label: SortOrderEnum
}

""""""
type DrupalGatsby_log_entity__gatsby_log_entity implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  drupal_internal__id: Int
  langcode: String
  entity_uuid: String
  title: String
  entity: String
  bundle: String
  action: String
  published: Boolean
  preview: Boolean
  json: String
  created(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
}

""""""
type DrupalGatsby_log_entity__gatsby_log_entityConnection {
  totalCount: Int!
  edges: [DrupalGatsby_log_entity__gatsby_log_entityEdge!]!
  nodes: [DrupalGatsby_log_entity__gatsby_log_entity!]!
  pageInfo: PageInfo!
  distinct(field: DrupalGatsby_log_entity__gatsby_log_entityFieldSelector!): [String!]!
  max(field: DrupalGatsby_log_entity__gatsby_log_entityFieldSelector!): Float
  min(field: DrupalGatsby_log_entity__gatsby_log_entityFieldSelector!): Float
  sum(field: DrupalGatsby_log_entity__gatsby_log_entityFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalGatsby_log_entity__gatsby_log_entityFieldSelector!): [DrupalGatsby_log_entity__gatsby_log_entityGroupConnection!]!
}

""""""
type DrupalGatsby_log_entity__gatsby_log_entityEdge {
  next: DrupalGatsby_log_entity__gatsby_log_entity
  node: DrupalGatsby_log_entity__gatsby_log_entity!
  previous: DrupalGatsby_log_entity__gatsby_log_entity
}

""""""
input DrupalGatsby_log_entity__gatsby_log_entityFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  drupal_internal__id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  entity_uuid: FieldSelectorEnum
  title: FieldSelectorEnum
  entity: FieldSelectorEnum
  bundle: FieldSelectorEnum
  action: FieldSelectorEnum
  published: FieldSelectorEnum
  preview: FieldSelectorEnum
  json: FieldSelectorEnum
  created: FieldSelectorEnum
}

""""""
type DrupalGatsby_log_entity__gatsby_log_entityGroupConnection {
  totalCount: Int!
  edges: [DrupalGatsby_log_entity__gatsby_log_entityEdge!]!
  nodes: [DrupalGatsby_log_entity__gatsby_log_entity!]!
  pageInfo: PageInfo!
  distinct(field: DrupalGatsby_log_entity__gatsby_log_entityFieldSelector!): [String!]!
  max(field: DrupalGatsby_log_entity__gatsby_log_entityFieldSelector!): Float
  min(field: DrupalGatsby_log_entity__gatsby_log_entityFieldSelector!): Float
  sum(field: DrupalGatsby_log_entity__gatsby_log_entityFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalGatsby_log_entity__gatsby_log_entityFieldSelector!): [DrupalGatsby_log_entity__gatsby_log_entityGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
input DrupalGatsby_log_entity__gatsby_log_entityFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  drupal_internal__id: IntQueryOperatorInput
  langcode: StringQueryOperatorInput
  entity_uuid: StringQueryOperatorInput
  title: StringQueryOperatorInput
  entity: StringQueryOperatorInput
  bundle: StringQueryOperatorInput
  action: StringQueryOperatorInput
  published: BooleanQueryOperatorInput
  preview: BooleanQueryOperatorInput
  json: StringQueryOperatorInput
  created: DateQueryOperatorInput
}

""""""
input DrupalGatsby_log_entity__gatsby_log_entitySortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  drupal_internal__id: SortOrderEnum
  langcode: SortOrderEnum
  entity_uuid: SortOrderEnum
  title: SortOrderEnum
  entity: SortOrderEnum
  bundle: SortOrderEnum
  action: SortOrderEnum
  published: SortOrderEnum
  preview: SortOrderEnum
  json: SortOrderEnum
  created: SortOrderEnum
}

""""""
type DrupalDate_format__date_format implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  label: String
}

""""""
type DrupalDate_format__date_formatConnection {
  totalCount: Int!
  edges: [DrupalDate_format__date_formatEdge!]!
  nodes: [DrupalDate_format__date_format!]!
  pageInfo: PageInfo!
  distinct(field: DrupalDate_format__date_formatFieldSelector!): [String!]!
  max(field: DrupalDate_format__date_formatFieldSelector!): Float
  min(field: DrupalDate_format__date_formatFieldSelector!): Float
  sum(field: DrupalDate_format__date_formatFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalDate_format__date_formatFieldSelector!): [DrupalDate_format__date_formatGroupConnection!]!
}

""""""
type DrupalDate_format__date_formatEdge {
  next: DrupalDate_format__date_format
  node: DrupalDate_format__date_format!
  previous: DrupalDate_format__date_format
}

""""""
input DrupalDate_format__date_formatFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  label: FieldSelectorEnum
}

""""""
type DrupalDate_format__date_formatGroupConnection {
  totalCount: Int!
  edges: [DrupalDate_format__date_formatEdge!]!
  nodes: [DrupalDate_format__date_format!]!
  pageInfo: PageInfo!
  distinct(field: DrupalDate_format__date_formatFieldSelector!): [String!]!
  max(field: DrupalDate_format__date_formatFieldSelector!): Float
  min(field: DrupalDate_format__date_formatFieldSelector!): Float
  sum(field: DrupalDate_format__date_formatFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalDate_format__date_formatFieldSelector!): [DrupalDate_format__date_formatGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
input DrupalDate_format__date_formatFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  label: StringQueryOperatorInput
}

""""""
input DrupalDate_format__date_formatSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  label: SortOrderEnum
}

""""""
type DrupalBase_field_override__base_field_override implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  drupal_id: String
  langcode: String
  status: Boolean
  dependencies: DrupalBase_field_override__base_field_overrideDependencies
  drupal_internal__id: String
  field_name: String
  entity_type: String
  bundle: String
  label: String
  description: String
  required: Boolean
  translatable: Boolean
  default_value: [DrupalBase_field_override__base_field_overrideDefault_value]
  default_value_callback: String
  settings: DrupalBase_field_override__base_field_overrideSettings
  field_type: String
}

""""""
type DrupalBase_field_override__base_field_overrideDependencies {
  config: [String]
  module: [String]
}

""""""
type DrupalBase_field_override__base_field_overrideDefault_value {
  value: Int
}

""""""
type DrupalBase_field_override__base_field_overrideSettings {
  on_label: String
  off_label: String
}

""""""
input DrupalBase_field_override__base_field_overrideDependenciesFilterInput {
  config: StringQueryOperatorInput
  module: StringQueryOperatorInput
}

""""""
input DrupalBase_field_override__base_field_overrideDefault_valueFilterListInput {
  elemMatch: DrupalBase_field_override__base_field_overrideDefault_valueFilterInput
}

""""""
input DrupalBase_field_override__base_field_overrideDefault_valueFilterInput {
  value: IntQueryOperatorInput
}

""""""
input DrupalBase_field_override__base_field_overrideSettingsFilterInput {
  on_label: StringQueryOperatorInput
  off_label: StringQueryOperatorInput
}

""""""
type DrupalBase_field_override__base_field_overrideConnection {
  totalCount: Int!
  edges: [DrupalBase_field_override__base_field_overrideEdge!]!
  nodes: [DrupalBase_field_override__base_field_override!]!
  pageInfo: PageInfo!
  distinct(field: DrupalBase_field_override__base_field_overrideFieldSelector!): [String!]!
  max(field: DrupalBase_field_override__base_field_overrideFieldSelector!): Float
  min(field: DrupalBase_field_override__base_field_overrideFieldSelector!): Float
  sum(field: DrupalBase_field_override__base_field_overrideFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalBase_field_override__base_field_overrideFieldSelector!): [DrupalBase_field_override__base_field_overrideGroupConnection!]!
}

""""""
type DrupalBase_field_override__base_field_overrideEdge {
  next: DrupalBase_field_override__base_field_override
  node: DrupalBase_field_override__base_field_override!
  previous: DrupalBase_field_override__base_field_override
}

""""""
input DrupalBase_field_override__base_field_overrideFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  drupal_id: FieldSelectorEnum
  langcode: FieldSelectorEnum
  status: FieldSelectorEnum
  dependencies: DrupalBase_field_override__base_field_overrideDependenciesFieldSelector
  drupal_internal__id: FieldSelectorEnum
  field_name: FieldSelectorEnum
  entity_type: FieldSelectorEnum
  bundle: FieldSelectorEnum
  label: FieldSelectorEnum
  description: FieldSelectorEnum
  required: FieldSelectorEnum
  translatable: FieldSelectorEnum
  default_value: DrupalBase_field_override__base_field_overrideDefault_valueFieldSelector
  default_value_callback: FieldSelectorEnum
  settings: DrupalBase_field_override__base_field_overrideSettingsFieldSelector
  field_type: FieldSelectorEnum
}

""""""
input DrupalBase_field_override__base_field_overrideDependenciesFieldSelector {
  config: FieldSelectorEnum
  module: FieldSelectorEnum
}

""""""
input DrupalBase_field_override__base_field_overrideDefault_valueFieldSelector {
  value: FieldSelectorEnum
}

""""""
input DrupalBase_field_override__base_field_overrideSettingsFieldSelector {
  on_label: FieldSelectorEnum
  off_label: FieldSelectorEnum
}

""""""
type DrupalBase_field_override__base_field_overrideGroupConnection {
  totalCount: Int!
  edges: [DrupalBase_field_override__base_field_overrideEdge!]!
  nodes: [DrupalBase_field_override__base_field_override!]!
  pageInfo: PageInfo!
  distinct(field: DrupalBase_field_override__base_field_overrideFieldSelector!): [String!]!
  max(field: DrupalBase_field_override__base_field_overrideFieldSelector!): Float
  min(field: DrupalBase_field_override__base_field_overrideFieldSelector!): Float
  sum(field: DrupalBase_field_override__base_field_overrideFieldSelector!): Float
  group(skip: Int, limit: Int, field: DrupalBase_field_override__base_field_overrideFieldSelector!): [DrupalBase_field_override__base_field_overrideGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
input DrupalBase_field_override__base_field_overrideFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  drupal_id: StringQueryOperatorInput
  langcode: StringQueryOperatorInput
  status: BooleanQueryOperatorInput
  dependencies: DrupalBase_field_override__base_field_overrideDependenciesFilterInput
  drupal_internal__id: StringQueryOperatorInput
  field_name: StringQueryOperatorInput
  entity_type: StringQueryOperatorInput
  bundle: StringQueryOperatorInput
  label: StringQueryOperatorInput
  description: StringQueryOperatorInput
  required: BooleanQueryOperatorInput
  translatable: BooleanQueryOperatorInput
  default_value: DrupalBase_field_override__base_field_overrideDefault_valueFilterInput
  default_value_callback: StringQueryOperatorInput
  settings: DrupalBase_field_override__base_field_overrideSettingsFilterInput
  field_type: StringQueryOperatorInput
}

""""""
input DrupalBase_field_override__base_field_overrideSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  drupal_id: SortOrderEnum
  langcode: SortOrderEnum
  status: SortOrderEnum
  dependencies: DrupalBase_field_override__base_field_overrideDependenciesSortInput
  drupal_internal__id: SortOrderEnum
  field_name: SortOrderEnum
  entity_type: SortOrderEnum
  bundle: SortOrderEnum
  label: SortOrderEnum
  description: SortOrderEnum
  required: SortOrderEnum
  translatable: SortOrderEnum
  default_value: DrupalBase_field_override__base_field_overrideDefault_valueSortInput
  default_value_callback: SortOrderEnum
  settings: DrupalBase_field_override__base_field_overrideSettingsSortInput
  field_type: SortOrderEnum
}

""""""
input DrupalBase_field_override__base_field_overrideDependenciesSortInput {
  config: SortOrderEnum
  module: SortOrderEnum
}

""""""
input DrupalBase_field_override__base_field_overrideDefault_valueSortInput {
  value: SortOrderEnum
}

""""""
input DrupalBase_field_override__base_field_overrideSettingsSortInput {
  on_label: SortOrderEnum
  off_label: SortOrderEnum
}

""""""
type Contentstack_product_page implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  uid: String
  _version: Int
  locale: String
  created_at(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  created_by: String
  image: Contentstack_assets
  price: String
  sku: String
  title: String
  updated_at(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  updated_by: String
  publish_details: Contentstack_product_pagePublish_details
  cslp__meta: JSON
}

""""""
type Contentstack_assets implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  _version: Int
  is_dir: Boolean
  uid: String
  asset_id: String
  content_type: String
  created_at(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  created_by: String
  dimension: Contentstack_assetsDimension
  file_size: String
  filename: String
  parent_uid: String
  title: String
  updated_at(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  updated_by: String
  publish_details: Contentstack_assetsPublish_details
  url: String
  description: String
}

""""""
type Contentstack_assetsDimension {
  height: Int
  width: Int
}

""""""
type Contentstack_assetsPublish_details {
  environment: String
  locale: String
  time(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  user: String
}

""""""
type Contentstack_product_pagePublish_details {
  time(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  user: String
  environment: String
  locale: String
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

""""""
input Contentstack_assetsFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  _version: IntQueryOperatorInput
  is_dir: BooleanQueryOperatorInput
  uid: StringQueryOperatorInput
  asset_id: StringQueryOperatorInput
  content_type: StringQueryOperatorInput
  created_at: DateQueryOperatorInput
  created_by: StringQueryOperatorInput
  dimension: Contentstack_assetsDimensionFilterInput
  file_size: StringQueryOperatorInput
  filename: StringQueryOperatorInput
  parent_uid: StringQueryOperatorInput
  title: StringQueryOperatorInput
  updated_at: DateQueryOperatorInput
  updated_by: StringQueryOperatorInput
  publish_details: Contentstack_assetsPublish_detailsFilterInput
  url: StringQueryOperatorInput
  description: StringQueryOperatorInput
}

""""""
input Contentstack_assetsDimensionFilterInput {
  height: IntQueryOperatorInput
  width: IntQueryOperatorInput
}

""""""
input Contentstack_assetsPublish_detailsFilterInput {
  environment: StringQueryOperatorInput
  locale: StringQueryOperatorInput
  time: DateQueryOperatorInput
  user: StringQueryOperatorInput
}

""""""
input Contentstack_product_pagePublish_detailsFilterInput {
  time: DateQueryOperatorInput
  user: StringQueryOperatorInput
  environment: StringQueryOperatorInput
  locale: StringQueryOperatorInput
}

""""""
input JSONQueryOperatorInput {
  eq: JSON
  ne: JSON
  in: [JSON]
  nin: [JSON]
  regex: JSON
  glob: JSON
}

""""""
type Contentstack_product_pageConnection {
  totalCount: Int!
  edges: [Contentstack_product_pageEdge!]!
  nodes: [Contentstack_product_page!]!
  pageInfo: PageInfo!
  distinct(field: Contentstack_product_pageFieldSelector!): [String!]!
  max(field: Contentstack_product_pageFieldSelector!): Float
  min(field: Contentstack_product_pageFieldSelector!): Float
  sum(field: Contentstack_product_pageFieldSelector!): Float
  group(skip: Int, limit: Int, field: Contentstack_product_pageFieldSelector!): [Contentstack_product_pageGroupConnection!]!
}

""""""
type Contentstack_product_pageEdge {
  next: Contentstack_product_page
  node: Contentstack_product_page!
  previous: Contentstack_product_page
}

""""""
input Contentstack_product_pageFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  uid: FieldSelectorEnum
  _version: FieldSelectorEnum
  locale: FieldSelectorEnum
  created_at: FieldSelectorEnum
  created_by: FieldSelectorEnum
  image: Contentstack_assetsFieldSelector
  price: FieldSelectorEnum
  sku: FieldSelectorEnum
  title: FieldSelectorEnum
  updated_at: FieldSelectorEnum
  updated_by: FieldSelectorEnum
  publish_details: Contentstack_product_pagePublish_detailsFieldSelector
  cslp__meta: FieldSelectorEnum
}

""""""
input Contentstack_assetsFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  _version: FieldSelectorEnum
  is_dir: FieldSelectorEnum
  uid: FieldSelectorEnum
  asset_id: FieldSelectorEnum
  content_type: FieldSelectorEnum
  created_at: FieldSelectorEnum
  created_by: FieldSelectorEnum
  dimension: Contentstack_assetsDimensionFieldSelector
  file_size: FieldSelectorEnum
  filename: FieldSelectorEnum
  parent_uid: FieldSelectorEnum
  title: FieldSelectorEnum
  updated_at: FieldSelectorEnum
  updated_by: FieldSelectorEnum
  publish_details: Contentstack_assetsPublish_detailsFieldSelector
  url: FieldSelectorEnum
  description: FieldSelectorEnum
}

""""""
input Contentstack_assetsDimensionFieldSelector {
  height: FieldSelectorEnum
  width: FieldSelectorEnum
}

""""""
input Contentstack_assetsPublish_detailsFieldSelector {
  environment: FieldSelectorEnum
  locale: FieldSelectorEnum
  time: FieldSelectorEnum
  user: FieldSelectorEnum
}

""""""
input Contentstack_product_pagePublish_detailsFieldSelector {
  time: FieldSelectorEnum
  user: FieldSelectorEnum
  environment: FieldSelectorEnum
  locale: FieldSelectorEnum
}

""""""
type Contentstack_product_pageGroupConnection {
  totalCount: Int!
  edges: [Contentstack_product_pageEdge!]!
  nodes: [Contentstack_product_page!]!
  pageInfo: PageInfo!
  distinct(field: Contentstack_product_pageFieldSelector!): [String!]!
  max(field: Contentstack_product_pageFieldSelector!): Float
  min(field: Contentstack_product_pageFieldSelector!): Float
  sum(field: Contentstack_product_pageFieldSelector!): Float
  group(skip: Int, limit: Int, field: Contentstack_product_pageFieldSelector!): [Contentstack_product_pageGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
input Contentstack_product_pageFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  uid: StringQueryOperatorInput
  _version: IntQueryOperatorInput
  locale: StringQueryOperatorInput
  created_at: DateQueryOperatorInput
  created_by: StringQueryOperatorInput
  image: Contentstack_assetsFilterInput
  price: StringQueryOperatorInput
  sku: StringQueryOperatorInput
  title: StringQueryOperatorInput
  updated_at: DateQueryOperatorInput
  updated_by: StringQueryOperatorInput
  publish_details: Contentstack_product_pagePublish_detailsFilterInput
  cslp__meta: JSONQueryOperatorInput
}

""""""
input Contentstack_product_pageSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  uid: SortOrderEnum
  _version: SortOrderEnum
  locale: SortOrderEnum
  created_at: SortOrderEnum
  created_by: SortOrderEnum
  image: Contentstack_assetsSortInput
  price: SortOrderEnum
  sku: SortOrderEnum
  title: SortOrderEnum
  updated_at: SortOrderEnum
  updated_by: SortOrderEnum
  publish_details: Contentstack_product_pagePublish_detailsSortInput
  cslp__meta: SortOrderEnum
}

""""""
input Contentstack_assetsSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  _version: SortOrderEnum
  is_dir: SortOrderEnum
  uid: SortOrderEnum
  asset_id: SortOrderEnum
  content_type: SortOrderEnum
  created_at: SortOrderEnum
  created_by: SortOrderEnum
  dimension: Contentstack_assetsDimensionSortInput
  file_size: SortOrderEnum
  filename: SortOrderEnum
  parent_uid: SortOrderEnum
  title: SortOrderEnum
  updated_at: SortOrderEnum
  updated_by: SortOrderEnum
  publish_details: Contentstack_assetsPublish_detailsSortInput
  url: SortOrderEnum
  description: SortOrderEnum
}

""""""
input Contentstack_assetsDimensionSortInput {
  height: SortOrderEnum
  width: SortOrderEnum
}

""""""
input Contentstack_assetsPublish_detailsSortInput {
  environment: SortOrderEnum
  locale: SortOrderEnum
  time: SortOrderEnum
  user: SortOrderEnum
}

""""""
input Contentstack_product_pagePublish_detailsSortInput {
  time: SortOrderEnum
  user: SortOrderEnum
  environment: SortOrderEnum
  locale: SortOrderEnum
}

""""""
type Contentstack_assetsConnection {
  totalCount: Int!
  edges: [Contentstack_assetsEdge!]!
  nodes: [Contentstack_assets!]!
  pageInfo: PageInfo!
  distinct(field: Contentstack_assetsFieldSelector!): [String!]!
  max(field: Contentstack_assetsFieldSelector!): Float
  min(field: Contentstack_assetsFieldSelector!): Float
  sum(field: Contentstack_assetsFieldSelector!): Float
  group(skip: Int, limit: Int, field: Contentstack_assetsFieldSelector!): [Contentstack_assetsGroupConnection!]!
}

""""""
type Contentstack_assetsEdge {
  next: Contentstack_assets
  node: Contentstack_assets!
  previous: Contentstack_assets
}

""""""
type Contentstack_assetsGroupConnection {
  totalCount: Int!
  edges: [Contentstack_assetsEdge!]!
  nodes: [Contentstack_assets!]!
  pageInfo: PageInfo!
  distinct(field: Contentstack_assetsFieldSelector!): [String!]!
  max(field: Contentstack_assetsFieldSelector!): Float
  min(field: Contentstack_assetsFieldSelector!): Float
  sum(field: Contentstack_assetsFieldSelector!): Float
  group(skip: Int, limit: Int, field: Contentstack_assetsFieldSelector!): [Contentstack_assetsGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type Contentstack_page implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  _version: Int
  locale: String
  uid: String
  created_at(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  created_by: String
  page_components: [Contentstack_pagePage_components]
  seo: Contentstack_pageSeo
  title: String
  updated_at(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  updated_by: String
  url: String
  publish_details: Contentstack_pagePublish_details
  cslp__meta: JSON
}

""""""
type Contentstack_pagePage_components {
  hero_banner: Contentstack_pagePage_componentsHero_banner
  section_with_buckets: Contentstack_pagePage_componentsSection_with_buckets
  section: Contentstack_pagePage_componentsSection
  our_team: Contentstack_pagePage_componentsOur_team
  widget: Contentstack_pagePage_componentsWidget
  from_blog: Contentstack_pagePage_componentsFrom_blog
  section_with_cards: Contentstack_pagePage_componentsSection_with_cards
  section_with_html_code: Contentstack_pagePage_componentsSection_with_html_code
}

""""""
type Contentstack_pagePage_componentsHero_banner {
  banner_image: Contentstack_assets
  bg_color: String
  text_color: String
  banner_title: String
  banner_description: String
  call_to_action: Contentstack_pagePage_componentsHero_bannerCall_to_action
}

""""""
type Contentstack_pagePage_componentsHero_bannerCall_to_action {
  title: String
  href: String
}

""""""
type Contentstack_pagePage_componentsSection_with_buckets {
  title_h2: String
  description: String
  bucket_tabular: Boolean
  buckets: [Contentstack_pagePage_componentsSection_with_bucketsBuckets]
}

""""""
type Contentstack_pagePage_componentsSection_with_bucketsBuckets {
  title_h3: String
  description: Contentstack_pagePage_componentsSection_with_bucketsBucketsDescription
  icon: Contentstack_assets
  call_to_action: Contentstack_pagePage_componentsSection_with_bucketsBucketsCall_to_action
}

""""""
type Contentstack_pagePage_componentsSection_with_bucketsBucketsDescription {
  uid: String
  children: [Contentstack_pagePage_componentsSection_with_bucketsBucketsDescriptionChildren]
  type: String
  _version: Int
}

""""""
type Contentstack_pagePage_componentsSection_with_bucketsBucketsDescriptionChildren {
  type: String
  uid: String
  children: [Contentstack_pagePage_componentsSection_with_bucketsBucketsDescriptionChildrenChildren]
}

""""""
type Contentstack_pagePage_componentsSection_with_bucketsBucketsDescriptionChildrenChildren {
  text: String
}

""""""
type Contentstack_pagePage_componentsSection_with_bucketsBucketsCall_to_action {
  title: String
  href: String
}

""""""
type Contentstack_pagePage_componentsSection {
  title_h2: String
  description: String
  call_to_action: Contentstack_pagePage_componentsSectionCall_to_action
  image: Contentstack_assets
  image_alignment: String
}

""""""
type Contentstack_pagePage_componentsSectionCall_to_action {
  title: String
  href: String
}

""""""
type Contentstack_pagePage_componentsOur_team {
  title_h2: String
  description: String
  employees: [Contentstack_pagePage_componentsOur_teamEmployees]
}

""""""
type Contentstack_pagePage_componentsOur_teamEmployees {
  name: String
  designation: String
  image: Contentstack_assets
}

""""""
type Contentstack_pagePage_componentsWidget {
  title_h2: String
  type: String
}

""""""
type Contentstack_pagePage_componentsFrom_blog {
  title_h2: String
  featured_blogs: [Contentstack_blog_post]
  view_articles: Contentstack_pagePage_componentsFrom_blogView_articles
}

""""""
type Contentstack_blog_post implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  _version: Int
  locale: String
  uid: String
  author: [Contentstack_author]
  body: Contentstack_blog_postBody
  created_at(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  created_by: String
  date(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  featured_image: Contentstack_assets
  is_archived: Boolean
  related_post: [Contentstack_blog_post]
  seo: Contentstack_blog_postSeo
  title: String
  updated_at(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  updated_by: String
  url: String
  publish_details: Contentstack_blog_postPublish_details
  cslp__meta: JSON
}

""""""
type Contentstack_author implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  _version: Int
  locale: String
  uid: String
  bio: String
  created_at(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  created_by: String
  picture: Contentstack_assets
  title: String
  updated_at(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  updated_by: String
  publish_details: Contentstack_authorPublish_details
  cslp__meta: JSON
}

""""""
type Contentstack_authorPublish_details {
  environment: String
  locale: String
  time(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  user: String
}

""""""
type Contentstack_blog_postBody {
  uid: String
  children: [Contentstack_blog_postBodyChildren]
  type: String
  _version: Int
}

""""""
type Contentstack_blog_postBodyChildren {
  type: String
  uid: String
  children: [Contentstack_blog_postBodyChildrenChildren]
  id: String
}

""""""
type Contentstack_blog_postBodyChildrenChildren {
  text: String
  type: String
  uid: String
  children: [Contentstack_blog_postBodyChildrenChildrenChildren]
  bold: Boolean
}

""""""
type Contentstack_blog_postBodyChildrenChildrenChildren {
  text: String
}

""""""
type Contentstack_blog_postSeo {
  meta_title: String
  meta_description: String
  keywords: String
  enable_search_indexing: Boolean
}

""""""
type Contentstack_blog_postPublish_details {
  environment: String
  locale: String
  time(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  user: String
}

""""""
type Contentstack_pagePage_componentsFrom_blogView_articles {
  title: String
  href: String
}

""""""
type Contentstack_pagePage_componentsSection_with_cards {
  cards: [Contentstack_pagePage_componentsSection_with_cardsCards]
}

""""""
type Contentstack_pagePage_componentsSection_with_cardsCards {
  title_h3: String
  description: String
  call_to_action: Contentstack_pagePage_componentsSection_with_cardsCardsCall_to_action
}

""""""
type Contentstack_pagePage_componentsSection_with_cardsCardsCall_to_action {
  title: String
  href: String
}

""""""
type Contentstack_pagePage_componentsSection_with_html_code {
  title: String
  description: Contentstack_pagePage_componentsSection_with_html_codeDescription
  html_code: String
  html_code_alignment: String
}

""""""
type Contentstack_pagePage_componentsSection_with_html_codeDescription {
  uid: String
  children: [Contentstack_pagePage_componentsSection_with_html_codeDescriptionChildren]
  type: String
  _version: Int
}

""""""
type Contentstack_pagePage_componentsSection_with_html_codeDescriptionChildren {
  type: String
  uid: String
  children: [Contentstack_pagePage_componentsSection_with_html_codeDescriptionChildrenChildren]
}

""""""
type Contentstack_pagePage_componentsSection_with_html_codeDescriptionChildrenChildren {
  text: String
}

""""""
type Contentstack_pageSeo {
  meta_title: String
  meta_description: String
  keywords: String
  enable_search_indexing: Boolean
}

""""""
type Contentstack_pagePublish_details {
  environment: String
  locale: String
  time(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  user: String
}

""""""
input Contentstack_pagePage_componentsFilterListInput {
  elemMatch: Contentstack_pagePage_componentsFilterInput
}

""""""
input Contentstack_pagePage_componentsFilterInput {
  hero_banner: Contentstack_pagePage_componentsHero_bannerFilterInput
  section_with_buckets: Contentstack_pagePage_componentsSection_with_bucketsFilterInput
  section: Contentstack_pagePage_componentsSectionFilterInput
  our_team: Contentstack_pagePage_componentsOur_teamFilterInput
  widget: Contentstack_pagePage_componentsWidgetFilterInput
  from_blog: Contentstack_pagePage_componentsFrom_blogFilterInput
  section_with_cards: Contentstack_pagePage_componentsSection_with_cardsFilterInput
  section_with_html_code: Contentstack_pagePage_componentsSection_with_html_codeFilterInput
}

""""""
input Contentstack_pagePage_componentsHero_bannerFilterInput {
  banner_image: Contentstack_assetsFilterInput
  bg_color: StringQueryOperatorInput
  text_color: StringQueryOperatorInput
  banner_title: StringQueryOperatorInput
  banner_description: StringQueryOperatorInput
  call_to_action: Contentstack_pagePage_componentsHero_bannerCall_to_actionFilterInput
}

""""""
input Contentstack_pagePage_componentsHero_bannerCall_to_actionFilterInput {
  title: StringQueryOperatorInput
  href: StringQueryOperatorInput
}

""""""
input Contentstack_pagePage_componentsSection_with_bucketsFilterInput {
  title_h2: StringQueryOperatorInput
  description: StringQueryOperatorInput
  bucket_tabular: BooleanQueryOperatorInput
  buckets: Contentstack_pagePage_componentsSection_with_bucketsBucketsFilterInput
}

""""""
input Contentstack_pagePage_componentsSection_with_bucketsBucketsFilterInput {
  title_h3: StringQueryOperatorInput
  description: Contentstack_pagePage_componentsSection_with_bucketsBucketsDescriptionFilterInput
  icon: Contentstack_assetsFilterInput
  call_to_action: Contentstack_pagePage_componentsSection_with_bucketsBucketsCall_to_actionFilterInput
}

""""""
input Contentstack_pagePage_componentsSection_with_bucketsBucketsDescriptionFilterInput {
  uid: StringQueryOperatorInput
  children: Contentstack_pagePage_componentsSection_with_bucketsBucketsDescriptionChildrenFilterInput
  type: StringQueryOperatorInput
  _version: IntQueryOperatorInput
}

""""""
input Contentstack_pagePage_componentsSection_with_bucketsBucketsDescriptionChildrenFilterInput {
  type: StringQueryOperatorInput
  uid: StringQueryOperatorInput
  children: Contentstack_pagePage_componentsSection_with_bucketsBucketsDescriptionChildrenChildrenFilterInput
}

""""""
input Contentstack_pagePage_componentsSection_with_bucketsBucketsDescriptionChildrenChildrenFilterInput {
  text: StringQueryOperatorInput
}

""""""
input Contentstack_pagePage_componentsSection_with_bucketsBucketsCall_to_actionFilterInput {
  title: StringQueryOperatorInput
  href: StringQueryOperatorInput
}

""""""
input Contentstack_pagePage_componentsSectionFilterInput {
  title_h2: StringQueryOperatorInput
  description: StringQueryOperatorInput
  call_to_action: Contentstack_pagePage_componentsSectionCall_to_actionFilterInput
  image: Contentstack_assetsFilterInput
  image_alignment: StringQueryOperatorInput
}

""""""
input Contentstack_pagePage_componentsSectionCall_to_actionFilterInput {
  title: StringQueryOperatorInput
  href: StringQueryOperatorInput
}

""""""
input Contentstack_pagePage_componentsOur_teamFilterInput {
  title_h2: StringQueryOperatorInput
  description: StringQueryOperatorInput
  employees: Contentstack_pagePage_componentsOur_teamEmployeesFilterInput
}

""""""
input Contentstack_pagePage_componentsOur_teamEmployeesFilterInput {
  name: StringQueryOperatorInput
  designation: StringQueryOperatorInput
  image: Contentstack_assetsFilterInput
}

""""""
input Contentstack_pagePage_componentsWidgetFilterInput {
  title_h2: StringQueryOperatorInput
  type: StringQueryOperatorInput
}

""""""
input Contentstack_pagePage_componentsFrom_blogFilterInput {
  title_h2: StringQueryOperatorInput
  featured_blogs: Contentstack_blog_postFilterInput
  view_articles: Contentstack_pagePage_componentsFrom_blogView_articlesFilterInput
}

""""""
input Contentstack_blog_postFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  _version: IntQueryOperatorInput
  locale: StringQueryOperatorInput
  uid: StringQueryOperatorInput
  author: Contentstack_authorFilterInput
  body: Contentstack_blog_postBodyFilterInput
  created_at: DateQueryOperatorInput
  created_by: StringQueryOperatorInput
  date: DateQueryOperatorInput
  featured_image: Contentstack_assetsFilterInput
  is_archived: BooleanQueryOperatorInput
  related_post: Contentstack_blog_postFilterInput
  seo: Contentstack_blog_postSeoFilterInput
  title: StringQueryOperatorInput
  updated_at: DateQueryOperatorInput
  updated_by: StringQueryOperatorInput
  url: StringQueryOperatorInput
  publish_details: Contentstack_blog_postPublish_detailsFilterInput
  cslp__meta: JSONQueryOperatorInput
}

""""""
input Contentstack_authorFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  _version: IntQueryOperatorInput
  locale: StringQueryOperatorInput
  uid: StringQueryOperatorInput
  bio: StringQueryOperatorInput
  created_at: DateQueryOperatorInput
  created_by: StringQueryOperatorInput
  picture: Contentstack_assetsFilterInput
  title: StringQueryOperatorInput
  updated_at: DateQueryOperatorInput
  updated_by: StringQueryOperatorInput
  publish_details: Contentstack_authorPublish_detailsFilterInput
  cslp__meta: JSONQueryOperatorInput
}

""""""
input Contentstack_authorPublish_detailsFilterInput {
  environment: StringQueryOperatorInput
  locale: StringQueryOperatorInput
  time: DateQueryOperatorInput
  user: StringQueryOperatorInput
}

""""""
input Contentstack_blog_postBodyFilterInput {
  uid: StringQueryOperatorInput
  children: Contentstack_blog_postBodyChildrenFilterInput
  type: StringQueryOperatorInput
  _version: IntQueryOperatorInput
}

""""""
input Contentstack_blog_postBodyChildrenFilterInput {
  type: StringQueryOperatorInput
  uid: StringQueryOperatorInput
  children: Contentstack_blog_postBodyChildrenChildrenFilterInput
  id: StringQueryOperatorInput
}

""""""
input Contentstack_blog_postBodyChildrenChildrenFilterInput {
  text: StringQueryOperatorInput
  type: StringQueryOperatorInput
  uid: StringQueryOperatorInput
  children: Contentstack_blog_postBodyChildrenChildrenChildrenFilterInput
  bold: BooleanQueryOperatorInput
}

""""""
input Contentstack_blog_postBodyChildrenChildrenChildrenFilterInput {
  text: StringQueryOperatorInput
}

""""""
input Contentstack_blog_postSeoFilterInput {
  meta_title: StringQueryOperatorInput
  meta_description: StringQueryOperatorInput
  keywords: StringQueryOperatorInput
  enable_search_indexing: BooleanQueryOperatorInput
}

""""""
input Contentstack_blog_postPublish_detailsFilterInput {
  environment: StringQueryOperatorInput
  locale: StringQueryOperatorInput
  time: DateQueryOperatorInput
  user: StringQueryOperatorInput
}

""""""
input Contentstack_pagePage_componentsFrom_blogView_articlesFilterInput {
  title: StringQueryOperatorInput
  href: StringQueryOperatorInput
}

""""""
input Contentstack_pagePage_componentsSection_with_cardsFilterInput {
  cards: Contentstack_pagePage_componentsSection_with_cardsCardsFilterInput
}

""""""
input Contentstack_pagePage_componentsSection_with_cardsCardsFilterInput {
  title_h3: StringQueryOperatorInput
  description: StringQueryOperatorInput
  call_to_action: Contentstack_pagePage_componentsSection_with_cardsCardsCall_to_actionFilterInput
}

""""""
input Contentstack_pagePage_componentsSection_with_cardsCardsCall_to_actionFilterInput {
  title: StringQueryOperatorInput
  href: StringQueryOperatorInput
}

""""""
input Contentstack_pagePage_componentsSection_with_html_codeFilterInput {
  title: StringQueryOperatorInput
  description: Contentstack_pagePage_componentsSection_with_html_codeDescriptionFilterInput
  html_code: StringQueryOperatorInput
  html_code_alignment: StringQueryOperatorInput
}

""""""
input Contentstack_pagePage_componentsSection_with_html_codeDescriptionFilterInput {
  uid: StringQueryOperatorInput
  children: Contentstack_pagePage_componentsSection_with_html_codeDescriptionChildrenFilterInput
  type: StringQueryOperatorInput
  _version: IntQueryOperatorInput
}

""""""
input Contentstack_pagePage_componentsSection_with_html_codeDescriptionChildrenFilterInput {
  type: StringQueryOperatorInput
  uid: StringQueryOperatorInput
  children: Contentstack_pagePage_componentsSection_with_html_codeDescriptionChildrenChildrenFilterInput
}

""""""
input Contentstack_pagePage_componentsSection_with_html_codeDescriptionChildrenChildrenFilterInput {
  text: StringQueryOperatorInput
}

""""""
input Contentstack_pageSeoFilterInput {
  meta_title: StringQueryOperatorInput
  meta_description: StringQueryOperatorInput
  keywords: StringQueryOperatorInput
  enable_search_indexing: BooleanQueryOperatorInput
}

""""""
input Contentstack_pagePublish_detailsFilterInput {
  environment: StringQueryOperatorInput
  locale: StringQueryOperatorInput
  time: DateQueryOperatorInput
  user: StringQueryOperatorInput
}

""""""
type Contentstack_pageConnection {
  totalCount: Int!
  edges: [Contentstack_pageEdge!]!
  nodes: [Contentstack_page!]!
  pageInfo: PageInfo!
  distinct(field: Contentstack_pageFieldSelector!): [String!]!
  max(field: Contentstack_pageFieldSelector!): Float
  min(field: Contentstack_pageFieldSelector!): Float
  sum(field: Contentstack_pageFieldSelector!): Float
  group(skip: Int, limit: Int, field: Contentstack_pageFieldSelector!): [Contentstack_pageGroupConnection!]!
}

""""""
type Contentstack_pageEdge {
  next: Contentstack_page
  node: Contentstack_page!
  previous: Contentstack_page
}

""""""
input Contentstack_pageFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  _version: FieldSelectorEnum
  locale: FieldSelectorEnum
  uid: FieldSelectorEnum
  created_at: FieldSelectorEnum
  created_by: FieldSelectorEnum
  page_components: Contentstack_pagePage_componentsFieldSelector
  seo: Contentstack_pageSeoFieldSelector
  title: FieldSelectorEnum
  updated_at: FieldSelectorEnum
  updated_by: FieldSelectorEnum
  url: FieldSelectorEnum
  publish_details: Contentstack_pagePublish_detailsFieldSelector
  cslp__meta: FieldSelectorEnum
}

""""""
input Contentstack_pagePage_componentsFieldSelector {
  hero_banner: Contentstack_pagePage_componentsHero_bannerFieldSelector
  section_with_buckets: Contentstack_pagePage_componentsSection_with_bucketsFieldSelector
  section: Contentstack_pagePage_componentsSectionFieldSelector
  our_team: Contentstack_pagePage_componentsOur_teamFieldSelector
  widget: Contentstack_pagePage_componentsWidgetFieldSelector
  from_blog: Contentstack_pagePage_componentsFrom_blogFieldSelector
  section_with_cards: Contentstack_pagePage_componentsSection_with_cardsFieldSelector
  section_with_html_code: Contentstack_pagePage_componentsSection_with_html_codeFieldSelector
}

""""""
input Contentstack_pagePage_componentsHero_bannerFieldSelector {
  banner_image: Contentstack_assetsFieldSelector
  bg_color: FieldSelectorEnum
  text_color: FieldSelectorEnum
  banner_title: FieldSelectorEnum
  banner_description: FieldSelectorEnum
  call_to_action: Contentstack_pagePage_componentsHero_bannerCall_to_actionFieldSelector
}

""""""
input Contentstack_pagePage_componentsHero_bannerCall_to_actionFieldSelector {
  title: FieldSelectorEnum
  href: FieldSelectorEnum
}

""""""
input Contentstack_pagePage_componentsSection_with_bucketsFieldSelector {
  title_h2: FieldSelectorEnum
  description: FieldSelectorEnum
  bucket_tabular: FieldSelectorEnum
  buckets: Contentstack_pagePage_componentsSection_with_bucketsBucketsFieldSelector
}

""""""
input Contentstack_pagePage_componentsSection_with_bucketsBucketsFieldSelector {
  title_h3: FieldSelectorEnum
  description: Contentstack_pagePage_componentsSection_with_bucketsBucketsDescriptionFieldSelector
  icon: Contentstack_assetsFieldSelector
  call_to_action: Contentstack_pagePage_componentsSection_with_bucketsBucketsCall_to_actionFieldSelector
}

""""""
input Contentstack_pagePage_componentsSection_with_bucketsBucketsDescriptionFieldSelector {
  uid: FieldSelectorEnum
  children: Contentstack_pagePage_componentsSection_with_bucketsBucketsDescriptionChildrenFieldSelector
  type: FieldSelectorEnum
  _version: FieldSelectorEnum
}

""""""
input Contentstack_pagePage_componentsSection_with_bucketsBucketsDescriptionChildrenFieldSelector {
  type: FieldSelectorEnum
  uid: FieldSelectorEnum
  children: Contentstack_pagePage_componentsSection_with_bucketsBucketsDescriptionChildrenChildrenFieldSelector
}

""""""
input Contentstack_pagePage_componentsSection_with_bucketsBucketsDescriptionChildrenChildrenFieldSelector {
  text: FieldSelectorEnum
}

""""""
input Contentstack_pagePage_componentsSection_with_bucketsBucketsCall_to_actionFieldSelector {
  title: FieldSelectorEnum
  href: FieldSelectorEnum
}

""""""
input Contentstack_pagePage_componentsSectionFieldSelector {
  title_h2: FieldSelectorEnum
  description: FieldSelectorEnum
  call_to_action: Contentstack_pagePage_componentsSectionCall_to_actionFieldSelector
  image: Contentstack_assetsFieldSelector
  image_alignment: FieldSelectorEnum
}

""""""
input Contentstack_pagePage_componentsSectionCall_to_actionFieldSelector {
  title: FieldSelectorEnum
  href: FieldSelectorEnum
}

""""""
input Contentstack_pagePage_componentsOur_teamFieldSelector {
  title_h2: FieldSelectorEnum
  description: FieldSelectorEnum
  employees: Contentstack_pagePage_componentsOur_teamEmployeesFieldSelector
}

""""""
input Contentstack_pagePage_componentsOur_teamEmployeesFieldSelector {
  name: FieldSelectorEnum
  designation: FieldSelectorEnum
  image: Contentstack_assetsFieldSelector
}

""""""
input Contentstack_pagePage_componentsWidgetFieldSelector {
  title_h2: FieldSelectorEnum
  type: FieldSelectorEnum
}

""""""
input Contentstack_pagePage_componentsFrom_blogFieldSelector {
  title_h2: FieldSelectorEnum
  featured_blogs: Contentstack_blog_postFieldSelector
  view_articles: Contentstack_pagePage_componentsFrom_blogView_articlesFieldSelector
}

""""""
input Contentstack_blog_postFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  _version: FieldSelectorEnum
  locale: FieldSelectorEnum
  uid: FieldSelectorEnum
  author: Contentstack_authorFieldSelector
  body: Contentstack_blog_postBodyFieldSelector
  created_at: FieldSelectorEnum
  created_by: FieldSelectorEnum
  date: FieldSelectorEnum
  featured_image: Contentstack_assetsFieldSelector
  is_archived: FieldSelectorEnum
  related_post: Contentstack_blog_postFieldSelector
  seo: Contentstack_blog_postSeoFieldSelector
  title: FieldSelectorEnum
  updated_at: FieldSelectorEnum
  updated_by: FieldSelectorEnum
  url: FieldSelectorEnum
  publish_details: Contentstack_blog_postPublish_detailsFieldSelector
  cslp__meta: FieldSelectorEnum
}

""""""
input Contentstack_authorFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  _version: FieldSelectorEnum
  locale: FieldSelectorEnum
  uid: FieldSelectorEnum
  bio: FieldSelectorEnum
  created_at: FieldSelectorEnum
  created_by: FieldSelectorEnum
  picture: Contentstack_assetsFieldSelector
  title: FieldSelectorEnum
  updated_at: FieldSelectorEnum
  updated_by: FieldSelectorEnum
  publish_details: Contentstack_authorPublish_detailsFieldSelector
  cslp__meta: FieldSelectorEnum
}

""""""
input Contentstack_authorPublish_detailsFieldSelector {
  environment: FieldSelectorEnum
  locale: FieldSelectorEnum
  time: FieldSelectorEnum
  user: FieldSelectorEnum
}

""""""
input Contentstack_blog_postBodyFieldSelector {
  uid: FieldSelectorEnum
  children: Contentstack_blog_postBodyChildrenFieldSelector
  type: FieldSelectorEnum
  _version: FieldSelectorEnum
}

""""""
input Contentstack_blog_postBodyChildrenFieldSelector {
  type: FieldSelectorEnum
  uid: FieldSelectorEnum
  children: Contentstack_blog_postBodyChildrenChildrenFieldSelector
  id: FieldSelectorEnum
}

""""""
input Contentstack_blog_postBodyChildrenChildrenFieldSelector {
  text: FieldSelectorEnum
  type: FieldSelectorEnum
  uid: FieldSelectorEnum
  children: Contentstack_blog_postBodyChildrenChildrenChildrenFieldSelector
  bold: FieldSelectorEnum
}

""""""
input Contentstack_blog_postBodyChildrenChildrenChildrenFieldSelector {
  text: FieldSelectorEnum
}

""""""
input Contentstack_blog_postSeoFieldSelector {
  meta_title: FieldSelectorEnum
  meta_description: FieldSelectorEnum
  keywords: FieldSelectorEnum
  enable_search_indexing: FieldSelectorEnum
}

""""""
input Contentstack_blog_postPublish_detailsFieldSelector {
  environment: FieldSelectorEnum
  locale: FieldSelectorEnum
  time: FieldSelectorEnum
  user: FieldSelectorEnum
}

""""""
input Contentstack_pagePage_componentsFrom_blogView_articlesFieldSelector {
  title: FieldSelectorEnum
  href: FieldSelectorEnum
}

""""""
input Contentstack_pagePage_componentsSection_with_cardsFieldSelector {
  cards: Contentstack_pagePage_componentsSection_with_cardsCardsFieldSelector
}

""""""
input Contentstack_pagePage_componentsSection_with_cardsCardsFieldSelector {
  title_h3: FieldSelectorEnum
  description: FieldSelectorEnum
  call_to_action: Contentstack_pagePage_componentsSection_with_cardsCardsCall_to_actionFieldSelector
}

""""""
input Contentstack_pagePage_componentsSection_with_cardsCardsCall_to_actionFieldSelector {
  title: FieldSelectorEnum
  href: FieldSelectorEnum
}

""""""
input Contentstack_pagePage_componentsSection_with_html_codeFieldSelector {
  title: FieldSelectorEnum
  description: Contentstack_pagePage_componentsSection_with_html_codeDescriptionFieldSelector
  html_code: FieldSelectorEnum
  html_code_alignment: FieldSelectorEnum
}

""""""
input Contentstack_pagePage_componentsSection_with_html_codeDescriptionFieldSelector {
  uid: FieldSelectorEnum
  children: Contentstack_pagePage_componentsSection_with_html_codeDescriptionChildrenFieldSelector
  type: FieldSelectorEnum
  _version: FieldSelectorEnum
}

""""""
input Contentstack_pagePage_componentsSection_with_html_codeDescriptionChildrenFieldSelector {
  type: FieldSelectorEnum
  uid: FieldSelectorEnum
  children: Contentstack_pagePage_componentsSection_with_html_codeDescriptionChildrenChildrenFieldSelector
}

""""""
input Contentstack_pagePage_componentsSection_with_html_codeDescriptionChildrenChildrenFieldSelector {
  text: FieldSelectorEnum
}

""""""
input Contentstack_pageSeoFieldSelector {
  meta_title: FieldSelectorEnum
  meta_description: FieldSelectorEnum
  keywords: FieldSelectorEnum
  enable_search_indexing: FieldSelectorEnum
}

""""""
input Contentstack_pagePublish_detailsFieldSelector {
  environment: FieldSelectorEnum
  locale: FieldSelectorEnum
  time: FieldSelectorEnum
  user: FieldSelectorEnum
}

""""""
type Contentstack_pageGroupConnection {
  totalCount: Int!
  edges: [Contentstack_pageEdge!]!
  nodes: [Contentstack_page!]!
  pageInfo: PageInfo!
  distinct(field: Contentstack_pageFieldSelector!): [String!]!
  max(field: Contentstack_pageFieldSelector!): Float
  min(field: Contentstack_pageFieldSelector!): Float
  sum(field: Contentstack_pageFieldSelector!): Float
  group(skip: Int, limit: Int, field: Contentstack_pageFieldSelector!): [Contentstack_pageGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
input Contentstack_pageFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  _version: IntQueryOperatorInput
  locale: StringQueryOperatorInput
  uid: StringQueryOperatorInput
  created_at: DateQueryOperatorInput
  created_by: StringQueryOperatorInput
  page_components: Contentstack_pagePage_componentsFilterInput
  seo: Contentstack_pageSeoFilterInput
  title: StringQueryOperatorInput
  updated_at: DateQueryOperatorInput
  updated_by: StringQueryOperatorInput
  url: StringQueryOperatorInput
  publish_details: Contentstack_pagePublish_detailsFilterInput
  cslp__meta: JSONQueryOperatorInput
}

""""""
input Contentstack_pageSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  _version: SortOrderEnum
  locale: SortOrderEnum
  uid: SortOrderEnum
  created_at: SortOrderEnum
  created_by: SortOrderEnum
  page_components: Contentstack_pagePage_componentsSortInput
  seo: Contentstack_pageSeoSortInput
  title: SortOrderEnum
  updated_at: SortOrderEnum
  updated_by: SortOrderEnum
  url: SortOrderEnum
  publish_details: Contentstack_pagePublish_detailsSortInput
  cslp__meta: SortOrderEnum
}

""""""
input Contentstack_pagePage_componentsSortInput {
  hero_banner: Contentstack_pagePage_componentsHero_bannerSortInput
  section_with_buckets: Contentstack_pagePage_componentsSection_with_bucketsSortInput
  section: Contentstack_pagePage_componentsSectionSortInput
  our_team: Contentstack_pagePage_componentsOur_teamSortInput
  widget: Contentstack_pagePage_componentsWidgetSortInput
  from_blog: Contentstack_pagePage_componentsFrom_blogSortInput
  section_with_cards: Contentstack_pagePage_componentsSection_with_cardsSortInput
  section_with_html_code: Contentstack_pagePage_componentsSection_with_html_codeSortInput
}

""""""
input Contentstack_pagePage_componentsHero_bannerSortInput {
  banner_image: Contentstack_assetsSortInput
  bg_color: SortOrderEnum
  text_color: SortOrderEnum
  banner_title: SortOrderEnum
  banner_description: SortOrderEnum
  call_to_action: Contentstack_pagePage_componentsHero_bannerCall_to_actionSortInput
}

""""""
input Contentstack_pagePage_componentsHero_bannerCall_to_actionSortInput {
  title: SortOrderEnum
  href: SortOrderEnum
}

""""""
input Contentstack_pagePage_componentsSection_with_bucketsSortInput {
  title_h2: SortOrderEnum
  description: SortOrderEnum
  bucket_tabular: SortOrderEnum
  buckets: Contentstack_pagePage_componentsSection_with_bucketsBucketsSortInput
}

""""""
input Contentstack_pagePage_componentsSection_with_bucketsBucketsSortInput {
  title_h3: SortOrderEnum
  description: Contentstack_pagePage_componentsSection_with_bucketsBucketsDescriptionSortInput
  icon: Contentstack_assetsSortInput
  call_to_action: Contentstack_pagePage_componentsSection_with_bucketsBucketsCall_to_actionSortInput
}

""""""
input Contentstack_pagePage_componentsSection_with_bucketsBucketsDescriptionSortInput {
  uid: SortOrderEnum
  children: Contentstack_pagePage_componentsSection_with_bucketsBucketsDescriptionChildrenSortInput
  type: SortOrderEnum
  _version: SortOrderEnum
}

""""""
input Contentstack_pagePage_componentsSection_with_bucketsBucketsDescriptionChildrenSortInput {
  type: SortOrderEnum
  uid: SortOrderEnum
  children: Contentstack_pagePage_componentsSection_with_bucketsBucketsDescriptionChildrenChildrenSortInput
}

""""""
input Contentstack_pagePage_componentsSection_with_bucketsBucketsDescriptionChildrenChildrenSortInput {
  text: SortOrderEnum
}

""""""
input Contentstack_pagePage_componentsSection_with_bucketsBucketsCall_to_actionSortInput {
  title: SortOrderEnum
  href: SortOrderEnum
}

""""""
input Contentstack_pagePage_componentsSectionSortInput {
  title_h2: SortOrderEnum
  description: SortOrderEnum
  call_to_action: Contentstack_pagePage_componentsSectionCall_to_actionSortInput
  image: Contentstack_assetsSortInput
  image_alignment: SortOrderEnum
}

""""""
input Contentstack_pagePage_componentsSectionCall_to_actionSortInput {
  title: SortOrderEnum
  href: SortOrderEnum
}

""""""
input Contentstack_pagePage_componentsOur_teamSortInput {
  title_h2: SortOrderEnum
  description: SortOrderEnum
  employees: Contentstack_pagePage_componentsOur_teamEmployeesSortInput
}

""""""
input Contentstack_pagePage_componentsOur_teamEmployeesSortInput {
  name: SortOrderEnum
  designation: SortOrderEnum
  image: Contentstack_assetsSortInput
}

""""""
input Contentstack_pagePage_componentsWidgetSortInput {
  title_h2: SortOrderEnum
  type: SortOrderEnum
}

""""""
input Contentstack_pagePage_componentsFrom_blogSortInput {
  title_h2: SortOrderEnum
  featured_blogs: Contentstack_blog_postSortInput
  view_articles: Contentstack_pagePage_componentsFrom_blogView_articlesSortInput
}

""""""
input Contentstack_blog_postSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  _version: SortOrderEnum
  locale: SortOrderEnum
  uid: SortOrderEnum
  author: Contentstack_authorSortInput
  body: Contentstack_blog_postBodySortInput
  created_at: SortOrderEnum
  created_by: SortOrderEnum
  date: SortOrderEnum
  featured_image: Contentstack_assetsSortInput
  is_archived: SortOrderEnum
  related_post: Contentstack_blog_postSortInput
  seo: Contentstack_blog_postSeoSortInput
  title: SortOrderEnum
  updated_at: SortOrderEnum
  updated_by: SortOrderEnum
  url: SortOrderEnum
  publish_details: Contentstack_blog_postPublish_detailsSortInput
  cslp__meta: SortOrderEnum
}

""""""
input Contentstack_authorSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  _version: SortOrderEnum
  locale: SortOrderEnum
  uid: SortOrderEnum
  bio: SortOrderEnum
  created_at: SortOrderEnum
  created_by: SortOrderEnum
  picture: Contentstack_assetsSortInput
  title: SortOrderEnum
  updated_at: SortOrderEnum
  updated_by: SortOrderEnum
  publish_details: Contentstack_authorPublish_detailsSortInput
  cslp__meta: SortOrderEnum
}

""""""
input Contentstack_authorPublish_detailsSortInput {
  environment: SortOrderEnum
  locale: SortOrderEnum
  time: SortOrderEnum
  user: SortOrderEnum
}

""""""
input Contentstack_blog_postBodySortInput {
  uid: SortOrderEnum
  children: Contentstack_blog_postBodyChildrenSortInput
  type: SortOrderEnum
  _version: SortOrderEnum
}

""""""
input Contentstack_blog_postBodyChildrenSortInput {
  type: SortOrderEnum
  uid: SortOrderEnum
  children: Contentstack_blog_postBodyChildrenChildrenSortInput
  id: SortOrderEnum
}

""""""
input Contentstack_blog_postBodyChildrenChildrenSortInput {
  text: SortOrderEnum
  type: SortOrderEnum
  uid: SortOrderEnum
  children: Contentstack_blog_postBodyChildrenChildrenChildrenSortInput
  bold: SortOrderEnum
}

""""""
input Contentstack_blog_postBodyChildrenChildrenChildrenSortInput {
  text: SortOrderEnum
}

""""""
input Contentstack_blog_postSeoSortInput {
  meta_title: SortOrderEnum
  meta_description: SortOrderEnum
  keywords: SortOrderEnum
  enable_search_indexing: SortOrderEnum
}

""""""
input Contentstack_blog_postPublish_detailsSortInput {
  environment: SortOrderEnum
  locale: SortOrderEnum
  time: SortOrderEnum
  user: SortOrderEnum
}

""""""
input Contentstack_pagePage_componentsFrom_blogView_articlesSortInput {
  title: SortOrderEnum
  href: SortOrderEnum
}

""""""
input Contentstack_pagePage_componentsSection_with_cardsSortInput {
  cards: Contentstack_pagePage_componentsSection_with_cardsCardsSortInput
}

""""""
input Contentstack_pagePage_componentsSection_with_cardsCardsSortInput {
  title_h3: SortOrderEnum
  description: SortOrderEnum
  call_to_action: Contentstack_pagePage_componentsSection_with_cardsCardsCall_to_actionSortInput
}

""""""
input Contentstack_pagePage_componentsSection_with_cardsCardsCall_to_actionSortInput {
  title: SortOrderEnum
  href: SortOrderEnum
}

""""""
input Contentstack_pagePage_componentsSection_with_html_codeSortInput {
  title: SortOrderEnum
  description: Contentstack_pagePage_componentsSection_with_html_codeDescriptionSortInput
  html_code: SortOrderEnum
  html_code_alignment: SortOrderEnum
}

""""""
input Contentstack_pagePage_componentsSection_with_html_codeDescriptionSortInput {
  uid: SortOrderEnum
  children: Contentstack_pagePage_componentsSection_with_html_codeDescriptionChildrenSortInput
  type: SortOrderEnum
  _version: SortOrderEnum
}

""""""
input Contentstack_pagePage_componentsSection_with_html_codeDescriptionChildrenSortInput {
  type: SortOrderEnum
  uid: SortOrderEnum
  children: Contentstack_pagePage_componentsSection_with_html_codeDescriptionChildrenChildrenSortInput
}

""""""
input Contentstack_pagePage_componentsSection_with_html_codeDescriptionChildrenChildrenSortInput {
  text: SortOrderEnum
}

""""""
input Contentstack_pageSeoSortInput {
  meta_title: SortOrderEnum
  meta_description: SortOrderEnum
  keywords: SortOrderEnum
  enable_search_indexing: SortOrderEnum
}

""""""
input Contentstack_pagePublish_detailsSortInput {
  environment: SortOrderEnum
  locale: SortOrderEnum
  time: SortOrderEnum
  user: SortOrderEnum
}

""""""
input Contentstack_authorFilterListInput {
  elemMatch: Contentstack_authorFilterInput
}

""""""
input Contentstack_blog_postFilterListInput {
  elemMatch: Contentstack_blog_postFilterInput
}

""""""
type Contentstack_blog_postConnection {
  totalCount: Int!
  edges: [Contentstack_blog_postEdge!]!
  nodes: [Contentstack_blog_post!]!
  pageInfo: PageInfo!
  distinct(field: Contentstack_blog_postFieldSelector!): [String!]!
  max(field: Contentstack_blog_postFieldSelector!): Float
  min(field: Contentstack_blog_postFieldSelector!): Float
  sum(field: Contentstack_blog_postFieldSelector!): Float
  group(skip: Int, limit: Int, field: Contentstack_blog_postFieldSelector!): [Contentstack_blog_postGroupConnection!]!
}

""""""
type Contentstack_blog_postEdge {
  next: Contentstack_blog_post
  node: Contentstack_blog_post!
  previous: Contentstack_blog_post
}

""""""
type Contentstack_blog_postGroupConnection {
  totalCount: Int!
  edges: [Contentstack_blog_postEdge!]!
  nodes: [Contentstack_blog_post!]!
  pageInfo: PageInfo!
  distinct(field: Contentstack_blog_postFieldSelector!): [String!]!
  max(field: Contentstack_blog_postFieldSelector!): Float
  min(field: Contentstack_blog_postFieldSelector!): Float
  sum(field: Contentstack_blog_postFieldSelector!): Float
  group(skip: Int, limit: Int, field: Contentstack_blog_postFieldSelector!): [Contentstack_blog_postGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type Contentstack_authorConnection {
  totalCount: Int!
  edges: [Contentstack_authorEdge!]!
  nodes: [Contentstack_author!]!
  pageInfo: PageInfo!
  distinct(field: Contentstack_authorFieldSelector!): [String!]!
  max(field: Contentstack_authorFieldSelector!): Float
  min(field: Contentstack_authorFieldSelector!): Float
  sum(field: Contentstack_authorFieldSelector!): Float
  group(skip: Int, limit: Int, field: Contentstack_authorFieldSelector!): [Contentstack_authorGroupConnection!]!
}

""""""
type Contentstack_authorEdge {
  next: Contentstack_author
  node: Contentstack_author!
  previous: Contentstack_author
}

""""""
type Contentstack_authorGroupConnection {
  totalCount: Int!
  edges: [Contentstack_authorEdge!]!
  nodes: [Contentstack_author!]!
  pageInfo: PageInfo!
  distinct(field: Contentstack_authorFieldSelector!): [String!]!
  max(field: Contentstack_authorFieldSelector!): Float
  min(field: Contentstack_authorFieldSelector!): Float
  sum(field: Contentstack_authorFieldSelector!): Float
  group(skip: Int, limit: Int, field: Contentstack_authorFieldSelector!): [Contentstack_authorGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
type Contentstack_header implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  _version: Int
  locale: String
  uid: String
  created_at(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  created_by: String
  logo: Contentstack_assets
  navigation_menu: [Contentstack_headerNavigation_menu]
  notification_bar: Contentstack_headerNotification_bar
  title: String
  updated_at(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  updated_by: String
  publish_details: Contentstack_headerPublish_details
  cslp__meta: JSON
}

""""""
type Contentstack_headerNavigation_menu {
  label: String
  page_reference: [Contentstack_page]
}

""""""
type Contentstack_headerNotification_bar {
  announcement_text: Contentstack_headerNotification_barAnnouncement_text
  show_announcement: Boolean
}

""""""
type Contentstack_headerNotification_barAnnouncement_text {
  uid: String
  children: [Contentstack_headerNotification_barAnnouncement_textChildren]
  type: String
  _version: Int
}

""""""
type Contentstack_headerNotification_barAnnouncement_textChildren {
  type: String
  uid: String
  children: [Contentstack_headerNotification_barAnnouncement_textChildrenChildren]
}

""""""
type Contentstack_headerNotification_barAnnouncement_textChildrenChildren {
  text: String
}

""""""
type Contentstack_headerPublish_details {
  environment: String
  locale: String
  time(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  user: String
}

""""""
input Contentstack_headerNavigation_menuFilterListInput {
  elemMatch: Contentstack_headerNavigation_menuFilterInput
}

""""""
input Contentstack_headerNavigation_menuFilterInput {
  label: StringQueryOperatorInput
  page_reference: Contentstack_pageFilterInput
}

""""""
input Contentstack_headerNotification_barFilterInput {
  announcement_text: Contentstack_headerNotification_barAnnouncement_textFilterInput
  show_announcement: BooleanQueryOperatorInput
}

""""""
input Contentstack_headerNotification_barAnnouncement_textFilterInput {
  uid: StringQueryOperatorInput
  children: Contentstack_headerNotification_barAnnouncement_textChildrenFilterInput
  type: StringQueryOperatorInput
  _version: IntQueryOperatorInput
}

""""""
input Contentstack_headerNotification_barAnnouncement_textChildrenFilterInput {
  type: StringQueryOperatorInput
  uid: StringQueryOperatorInput
  children: Contentstack_headerNotification_barAnnouncement_textChildrenChildrenFilterInput
}

""""""
input Contentstack_headerNotification_barAnnouncement_textChildrenChildrenFilterInput {
  text: StringQueryOperatorInput
}

""""""
input Contentstack_headerPublish_detailsFilterInput {
  environment: StringQueryOperatorInput
  locale: StringQueryOperatorInput
  time: DateQueryOperatorInput
  user: StringQueryOperatorInput
}

""""""
type Contentstack_headerConnection {
  totalCount: Int!
  edges: [Contentstack_headerEdge!]!
  nodes: [Contentstack_header!]!
  pageInfo: PageInfo!
  distinct(field: Contentstack_headerFieldSelector!): [String!]!
  max(field: Contentstack_headerFieldSelector!): Float
  min(field: Contentstack_headerFieldSelector!): Float
  sum(field: Contentstack_headerFieldSelector!): Float
  group(skip: Int, limit: Int, field: Contentstack_headerFieldSelector!): [Contentstack_headerGroupConnection!]!
}

""""""
type Contentstack_headerEdge {
  next: Contentstack_header
  node: Contentstack_header!
  previous: Contentstack_header
}

""""""
input Contentstack_headerFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  _version: FieldSelectorEnum
  locale: FieldSelectorEnum
  uid: FieldSelectorEnum
  created_at: FieldSelectorEnum
  created_by: FieldSelectorEnum
  logo: Contentstack_assetsFieldSelector
  navigation_menu: Contentstack_headerNavigation_menuFieldSelector
  notification_bar: Contentstack_headerNotification_barFieldSelector
  title: FieldSelectorEnum
  updated_at: FieldSelectorEnum
  updated_by: FieldSelectorEnum
  publish_details: Contentstack_headerPublish_detailsFieldSelector
  cslp__meta: FieldSelectorEnum
}

""""""
input Contentstack_headerNavigation_menuFieldSelector {
  label: FieldSelectorEnum
  page_reference: Contentstack_pageFieldSelector
}

""""""
input Contentstack_headerNotification_barFieldSelector {
  announcement_text: Contentstack_headerNotification_barAnnouncement_textFieldSelector
  show_announcement: FieldSelectorEnum
}

""""""
input Contentstack_headerNotification_barAnnouncement_textFieldSelector {
  uid: FieldSelectorEnum
  children: Contentstack_headerNotification_barAnnouncement_textChildrenFieldSelector
  type: FieldSelectorEnum
  _version: FieldSelectorEnum
}

""""""
input Contentstack_headerNotification_barAnnouncement_textChildrenFieldSelector {
  type: FieldSelectorEnum
  uid: FieldSelectorEnum
  children: Contentstack_headerNotification_barAnnouncement_textChildrenChildrenFieldSelector
}

""""""
input Contentstack_headerNotification_barAnnouncement_textChildrenChildrenFieldSelector {
  text: FieldSelectorEnum
}

""""""
input Contentstack_headerPublish_detailsFieldSelector {
  environment: FieldSelectorEnum
  locale: FieldSelectorEnum
  time: FieldSelectorEnum
  user: FieldSelectorEnum
}

""""""
type Contentstack_headerGroupConnection {
  totalCount: Int!
  edges: [Contentstack_headerEdge!]!
  nodes: [Contentstack_header!]!
  pageInfo: PageInfo!
  distinct(field: Contentstack_headerFieldSelector!): [String!]!
  max(field: Contentstack_headerFieldSelector!): Float
  min(field: Contentstack_headerFieldSelector!): Float
  sum(field: Contentstack_headerFieldSelector!): Float
  group(skip: Int, limit: Int, field: Contentstack_headerFieldSelector!): [Contentstack_headerGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
input Contentstack_headerFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  _version: IntQueryOperatorInput
  locale: StringQueryOperatorInput
  uid: StringQueryOperatorInput
  created_at: DateQueryOperatorInput
  created_by: StringQueryOperatorInput
  logo: Contentstack_assetsFilterInput
  navigation_menu: Contentstack_headerNavigation_menuFilterInput
  notification_bar: Contentstack_headerNotification_barFilterInput
  title: StringQueryOperatorInput
  updated_at: DateQueryOperatorInput
  updated_by: StringQueryOperatorInput
  publish_details: Contentstack_headerPublish_detailsFilterInput
  cslp__meta: JSONQueryOperatorInput
}

""""""
input Contentstack_headerSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  _version: SortOrderEnum
  locale: SortOrderEnum
  uid: SortOrderEnum
  created_at: SortOrderEnum
  created_by: SortOrderEnum
  logo: Contentstack_assetsSortInput
  navigation_menu: Contentstack_headerNavigation_menuSortInput
  notification_bar: Contentstack_headerNotification_barSortInput
  title: SortOrderEnum
  updated_at: SortOrderEnum
  updated_by: SortOrderEnum
  publish_details: Contentstack_headerPublish_detailsSortInput
  cslp__meta: SortOrderEnum
}

""""""
input Contentstack_headerNavigation_menuSortInput {
  label: SortOrderEnum
  page_reference: Contentstack_pageSortInput
}

""""""
input Contentstack_headerNotification_barSortInput {
  announcement_text: Contentstack_headerNotification_barAnnouncement_textSortInput
  show_announcement: SortOrderEnum
}

""""""
input Contentstack_headerNotification_barAnnouncement_textSortInput {
  uid: SortOrderEnum
  children: Contentstack_headerNotification_barAnnouncement_textChildrenSortInput
  type: SortOrderEnum
  _version: SortOrderEnum
}

""""""
input Contentstack_headerNotification_barAnnouncement_textChildrenSortInput {
  type: SortOrderEnum
  uid: SortOrderEnum
  children: Contentstack_headerNotification_barAnnouncement_textChildrenChildrenSortInput
}

""""""
input Contentstack_headerNotification_barAnnouncement_textChildrenChildrenSortInput {
  text: SortOrderEnum
}

""""""
input Contentstack_headerPublish_detailsSortInput {
  environment: SortOrderEnum
  locale: SortOrderEnum
  time: SortOrderEnum
  user: SortOrderEnum
}

""""""
type Contentstack_footer implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  _version: Int
  locale: String
  uid: String
  copyright: Contentstack_footerCopyright
  created_at(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  created_by: String
  logo: Contentstack_assets
  navigation: Contentstack_footerNavigation
  social: Contentstack_footerSocial
  title: String
  updated_at(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  updated_by: String
  publish_details: Contentstack_footerPublish_details
  cslp__meta: JSON
}

""""""
type Contentstack_footerCopyright {
  uid: String
  children: [Contentstack_footerCopyrightChildren]
  type: String
  _version: Int
}

""""""
type Contentstack_footerCopyrightChildren {
  type: String
  uid: String
  children: [Contentstack_footerCopyrightChildrenChildren]
}

""""""
type Contentstack_footerCopyrightChildrenChildren {
  text: String
}

""""""
type Contentstack_footerNavigation {
  link: [Contentstack_footerNavigationLink]
}

""""""
type Contentstack_footerNavigationLink {
  title: String
  href: String
}

""""""
type Contentstack_footerSocial {
  social_share: [Contentstack_footerSocialSocial_share]
}

""""""
type Contentstack_footerSocialSocial_share {
  link: Contentstack_footerSocialSocial_shareLink
  icon: Contentstack_assets
}

""""""
type Contentstack_footerSocialSocial_shareLink {
  title: String
  href: String
}

""""""
type Contentstack_footerPublish_details {
  environment: String
  locale: String
  time(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  user: String
}

""""""
input Contentstack_footerCopyrightFilterInput {
  uid: StringQueryOperatorInput
  children: Contentstack_footerCopyrightChildrenFilterInput
  type: StringQueryOperatorInput
  _version: IntQueryOperatorInput
}

""""""
input Contentstack_footerCopyrightChildrenFilterInput {
  type: StringQueryOperatorInput
  uid: StringQueryOperatorInput
  children: Contentstack_footerCopyrightChildrenChildrenFilterInput
}

""""""
input Contentstack_footerCopyrightChildrenChildrenFilterInput {
  text: StringQueryOperatorInput
}

""""""
input Contentstack_footerNavigationFilterInput {
  link: Contentstack_footerNavigationLinkFilterInput
}

""""""
input Contentstack_footerNavigationLinkFilterInput {
  title: StringQueryOperatorInput
  href: StringQueryOperatorInput
}

""""""
input Contentstack_footerSocialFilterInput {
  social_share: Contentstack_footerSocialSocial_shareFilterInput
}

""""""
input Contentstack_footerSocialSocial_shareFilterInput {
  link: Contentstack_footerSocialSocial_shareLinkFilterInput
  icon: Contentstack_assetsFilterInput
}

""""""
input Contentstack_footerSocialSocial_shareLinkFilterInput {
  title: StringQueryOperatorInput
  href: StringQueryOperatorInput
}

""""""
input Contentstack_footerPublish_detailsFilterInput {
  environment: StringQueryOperatorInput
  locale: StringQueryOperatorInput
  time: DateQueryOperatorInput
  user: StringQueryOperatorInput
}

""""""
type Contentstack_footerConnection {
  totalCount: Int!
  edges: [Contentstack_footerEdge!]!
  nodes: [Contentstack_footer!]!
  pageInfo: PageInfo!
  distinct(field: Contentstack_footerFieldSelector!): [String!]!
  max(field: Contentstack_footerFieldSelector!): Float
  min(field: Contentstack_footerFieldSelector!): Float
  sum(field: Contentstack_footerFieldSelector!): Float
  group(skip: Int, limit: Int, field: Contentstack_footerFieldSelector!): [Contentstack_footerGroupConnection!]!
}

""""""
type Contentstack_footerEdge {
  next: Contentstack_footer
  node: Contentstack_footer!
  previous: Contentstack_footer
}

""""""
input Contentstack_footerFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  _version: FieldSelectorEnum
  locale: FieldSelectorEnum
  uid: FieldSelectorEnum
  copyright: Contentstack_footerCopyrightFieldSelector
  created_at: FieldSelectorEnum
  created_by: FieldSelectorEnum
  logo: Contentstack_assetsFieldSelector
  navigation: Contentstack_footerNavigationFieldSelector
  social: Contentstack_footerSocialFieldSelector
  title: FieldSelectorEnum
  updated_at: FieldSelectorEnum
  updated_by: FieldSelectorEnum
  publish_details: Contentstack_footerPublish_detailsFieldSelector
  cslp__meta: FieldSelectorEnum
}

""""""
input Contentstack_footerCopyrightFieldSelector {
  uid: FieldSelectorEnum
  children: Contentstack_footerCopyrightChildrenFieldSelector
  type: FieldSelectorEnum
  _version: FieldSelectorEnum
}

""""""
input Contentstack_footerCopyrightChildrenFieldSelector {
  type: FieldSelectorEnum
  uid: FieldSelectorEnum
  children: Contentstack_footerCopyrightChildrenChildrenFieldSelector
}

""""""
input Contentstack_footerCopyrightChildrenChildrenFieldSelector {
  text: FieldSelectorEnum
}

""""""
input Contentstack_footerNavigationFieldSelector {
  link: Contentstack_footerNavigationLinkFieldSelector
}

""""""
input Contentstack_footerNavigationLinkFieldSelector {
  title: FieldSelectorEnum
  href: FieldSelectorEnum
}

""""""
input Contentstack_footerSocialFieldSelector {
  social_share: Contentstack_footerSocialSocial_shareFieldSelector
}

""""""
input Contentstack_footerSocialSocial_shareFieldSelector {
  link: Contentstack_footerSocialSocial_shareLinkFieldSelector
  icon: Contentstack_assetsFieldSelector
}

""""""
input Contentstack_footerSocialSocial_shareLinkFieldSelector {
  title: FieldSelectorEnum
  href: FieldSelectorEnum
}

""""""
input Contentstack_footerPublish_detailsFieldSelector {
  environment: FieldSelectorEnum
  locale: FieldSelectorEnum
  time: FieldSelectorEnum
  user: FieldSelectorEnum
}

""""""
type Contentstack_footerGroupConnection {
  totalCount: Int!
  edges: [Contentstack_footerEdge!]!
  nodes: [Contentstack_footer!]!
  pageInfo: PageInfo!
  distinct(field: Contentstack_footerFieldSelector!): [String!]!
  max(field: Contentstack_footerFieldSelector!): Float
  min(field: Contentstack_footerFieldSelector!): Float
  sum(field: Contentstack_footerFieldSelector!): Float
  group(skip: Int, limit: Int, field: Contentstack_footerFieldSelector!): [Contentstack_footerGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
input Contentstack_footerFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  _version: IntQueryOperatorInput
  locale: StringQueryOperatorInput
  uid: StringQueryOperatorInput
  copyright: Contentstack_footerCopyrightFilterInput
  created_at: DateQueryOperatorInput
  created_by: StringQueryOperatorInput
  logo: Contentstack_assetsFilterInput
  navigation: Contentstack_footerNavigationFilterInput
  social: Contentstack_footerSocialFilterInput
  title: StringQueryOperatorInput
  updated_at: DateQueryOperatorInput
  updated_by: StringQueryOperatorInput
  publish_details: Contentstack_footerPublish_detailsFilterInput
  cslp__meta: JSONQueryOperatorInput
}

""""""
input Contentstack_footerSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  _version: SortOrderEnum
  locale: SortOrderEnum
  uid: SortOrderEnum
  copyright: Contentstack_footerCopyrightSortInput
  created_at: SortOrderEnum
  created_by: SortOrderEnum
  logo: Contentstack_assetsSortInput
  navigation: Contentstack_footerNavigationSortInput
  social: Contentstack_footerSocialSortInput
  title: SortOrderEnum
  updated_at: SortOrderEnum
  updated_by: SortOrderEnum
  publish_details: Contentstack_footerPublish_detailsSortInput
  cslp__meta: SortOrderEnum
}

""""""
input Contentstack_footerCopyrightSortInput {
  uid: SortOrderEnum
  children: Contentstack_footerCopyrightChildrenSortInput
  type: SortOrderEnum
  _version: SortOrderEnum
}

""""""
input Contentstack_footerCopyrightChildrenSortInput {
  type: SortOrderEnum
  uid: SortOrderEnum
  children: Contentstack_footerCopyrightChildrenChildrenSortInput
}

""""""
input Contentstack_footerCopyrightChildrenChildrenSortInput {
  text: SortOrderEnum
}

""""""
input Contentstack_footerNavigationSortInput {
  link: Contentstack_footerNavigationLinkSortInput
}

""""""
input Contentstack_footerNavigationLinkSortInput {
  title: SortOrderEnum
  href: SortOrderEnum
}

""""""
input Contentstack_footerSocialSortInput {
  social_share: Contentstack_footerSocialSocial_shareSortInput
}

""""""
input Contentstack_footerSocialSocial_shareSortInput {
  link: Contentstack_footerSocialSocial_shareLinkSortInput
  icon: Contentstack_assetsSortInput
}

""""""
input Contentstack_footerSocialSocial_shareLinkSortInput {
  title: SortOrderEnum
  href: SortOrderEnum
}

""""""
input Contentstack_footerPublish_detailsSortInput {
  environment: SortOrderEnum
  locale: SortOrderEnum
  time: SortOrderEnum
  user: SortOrderEnum
}

""""""
type ContentstackContentTypes implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  title: String
  uid: String
  schema: [ContentstackContentTypesSchema]
  options: ContentstackContentTypesOptions
  DEFAULT_ACL: ContentstackContentTypesDEFAULT_ACL
  SYS_ACL: ContentstackContentTypesSYS_ACL
  created_at(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  updated_at(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  inbuilt_class: Boolean
  description: String
  abilities: ContentstackContentTypesAbilities
  maintain_revisions: Boolean
  _version: Int
}

""""""
type ContentstackContentTypesSchema {
  display_name: String
  uid: String
  data_type: String
  mandatory: Boolean
  unique: Boolean
  field_metadata: ContentstackContentTypesSchemaField_metadata
  multiple: Boolean
  non_localizable: Boolean
  format: String
  error_messages: ContentstackContentTypesSchemaError_messages
  schema: [ContentstackContentTypesSchemaSchema]
  max_instance: Int
  blocks: [ContentstackContentTypesSchemaBlocks]
}

""""""
type ContentstackContentTypesSchemaField_metadata {
  _default: Boolean
  version: Int
  description: String
  rich_text_type: String
  image: Boolean
  multiline: Boolean
  allow_json_rte: Boolean
  embed_entry: Boolean
  ref_multiple: Boolean
  ref_multiple_content_types: Boolean
  date_range: Boolean
}

""""""
type ContentstackContentTypesSchemaError_messages {
  format: String
}

""""""
type ContentstackContentTypesSchemaSchema {
  data_type: String
  display_name: String
  uid: String
  field_metadata: ContentstackContentTypesSchemaSchemaField_metadata
  multiple: Boolean
  mandatory: Boolean
  unique: Boolean
  non_localizable: Boolean
  schema: [ContentstackContentTypesSchemaSchemaSchema]
  format: String
  error_messages: ContentstackContentTypesSchemaSchemaError_messages
  reference_to: [String]
}

""""""
type ContentstackContentTypesSchemaSchemaField_metadata {
  description: String
  isTitle: Boolean
  version: Int
  ref_multiple: Boolean
  ref_multiple_content_types: Boolean
  allow_json_rte: Boolean
  embed_entry: Boolean
  multiline: Boolean
  rich_text_type: String
}

""""""
type ContentstackContentTypesSchemaSchemaSchema {
  data_type: String
  display_name: String
  uid: String
  field_metadata: ContentstackContentTypesSchemaSchemaSchemaField_metadata
  multiple: Boolean
  mandatory: Boolean
  unique: Boolean
  non_localizable: Boolean
}

""""""
type ContentstackContentTypesSchemaSchemaSchemaField_metadata {
  description: String
  default_value: String
  isTitle: Boolean
  rich_text_type: String
  image: Boolean
}

""""""
type ContentstackContentTypesSchemaSchemaError_messages {
  format: String
}

""""""
type ContentstackContentTypesSchemaBlocks {
  title: String
  uid: String
  schema: [ContentstackContentTypesSchemaBlocksSchema]
}

""""""
type ContentstackContentTypesSchemaBlocksSchema {
  data_type: String
  display_name: String
  uid: String
  field_metadata: ContentstackContentTypesSchemaBlocksSchemaField_metadata
  non_localizable: Boolean
  multiple: Boolean
  mandatory: Boolean
  unique: Boolean
  extension_uid: String
  format: String
  error_messages: ContentstackContentTypesSchemaBlocksSchemaError_messages
  schema: [ContentstackContentTypesSchemaBlocksSchemaSchema]
  display_type: String
  enum: ContentstackContentTypesSchemaBlocksSchemaEnum
  max_instance: Int
}

""""""
type ContentstackContentTypesSchemaBlocksSchemaField_metadata {
  description: String
  rich_text_type: String
  image: Boolean
  extension: Boolean
  version: Int
  multiline: Boolean
  allow_json_rte: Boolean
  embed_entry: Boolean
  instruction: String
  ref_multiple: Boolean
  ref_multiple_content_types: Boolean
}

""""""
type ContentstackContentTypesSchemaBlocksSchemaError_messages {
  format: String
}

""""""
type ContentstackContentTypesSchemaBlocksSchemaSchema {
  data_type: String
  display_name: String
  uid: String
  field_metadata: ContentstackContentTypesSchemaBlocksSchemaSchemaField_metadata
  format: String
  error_messages: ContentstackContentTypesSchemaBlocksSchemaSchemaError_messages
  non_localizable: Boolean
  multiple: Boolean
  mandatory: Boolean
  unique: Boolean
  reference_to: [String]
}

""""""
type ContentstackContentTypesSchemaBlocksSchemaSchemaField_metadata {
  description: String
  isTitle: Boolean
  version: Int
  allow_json_rte: Boolean
  embed_entry: Boolean
  multiline: Boolean
  rich_text_type: String
  image: Boolean
}

""""""
type ContentstackContentTypesSchemaBlocksSchemaSchemaError_messages {
  format: String
}

""""""
type ContentstackContentTypesSchemaBlocksSchemaEnum {
  advanced: Boolean
  choices: [ContentstackContentTypesSchemaBlocksSchemaEnumChoices]
}

""""""
type ContentstackContentTypesSchemaBlocksSchemaEnumChoices {
  value: String
}

""""""
type ContentstackContentTypesOptions {
  is_page: Boolean
  singleton: Boolean
  title: String
  url_pattern: String
  url_prefix: String
}

""""""
type ContentstackContentTypesDEFAULT_ACL {
  others: ContentstackContentTypesDEFAULT_ACLOthers
}

""""""
type ContentstackContentTypesDEFAULT_ACLOthers {
  read: Boolean
  create: Boolean
}

""""""
type ContentstackContentTypesSYS_ACL {
  others: ContentstackContentTypesSYS_ACLOthers
}

""""""
type ContentstackContentTypesSYS_ACLOthers {
  read: Boolean
  create: Boolean
  update: Boolean
  delete: Boolean
  sub_acl: ContentstackContentTypesSYS_ACLOthersSub_acl
}

""""""
type ContentstackContentTypesSYS_ACLOthersSub_acl {
  read: Boolean
  create: Boolean
  update: Boolean
  delete: Boolean
  publish: Boolean
}

""""""
type ContentstackContentTypesAbilities {
  get_one_object: Boolean
  get_all_objects: Boolean
  create_object: Boolean
  update_object: Boolean
  delete_object: Boolean
  delete_all_objects: Boolean
}

""""""
input ContentstackContentTypesSchemaFilterListInput {
  elemMatch: ContentstackContentTypesSchemaFilterInput
}

""""""
input ContentstackContentTypesSchemaFilterInput {
  display_name: StringQueryOperatorInput
  uid: StringQueryOperatorInput
  data_type: StringQueryOperatorInput
  mandatory: BooleanQueryOperatorInput
  unique: BooleanQueryOperatorInput
  field_metadata: ContentstackContentTypesSchemaField_metadataFilterInput
  multiple: BooleanQueryOperatorInput
  non_localizable: BooleanQueryOperatorInput
  format: StringQueryOperatorInput
  error_messages: ContentstackContentTypesSchemaError_messagesFilterInput
  schema: ContentstackContentTypesSchemaSchemaFilterInput
  max_instance: IntQueryOperatorInput
  blocks: ContentstackContentTypesSchemaBlocksFilterInput
}

""""""
input ContentstackContentTypesSchemaField_metadataFilterInput {
  _default: BooleanQueryOperatorInput
  version: IntQueryOperatorInput
  description: StringQueryOperatorInput
  rich_text_type: StringQueryOperatorInput
  image: BooleanQueryOperatorInput
  multiline: BooleanQueryOperatorInput
  allow_json_rte: BooleanQueryOperatorInput
  embed_entry: BooleanQueryOperatorInput
  ref_multiple: BooleanQueryOperatorInput
  ref_multiple_content_types: BooleanQueryOperatorInput
  date_range: BooleanQueryOperatorInput
}

""""""
input ContentstackContentTypesSchemaError_messagesFilterInput {
  format: StringQueryOperatorInput
}

""""""
input ContentstackContentTypesSchemaSchemaFilterInput {
  data_type: StringQueryOperatorInput
  display_name: StringQueryOperatorInput
  uid: StringQueryOperatorInput
  field_metadata: ContentstackContentTypesSchemaSchemaField_metadataFilterInput
  multiple: BooleanQueryOperatorInput
  mandatory: BooleanQueryOperatorInput
  unique: BooleanQueryOperatorInput
  non_localizable: BooleanQueryOperatorInput
  schema: ContentstackContentTypesSchemaSchemaSchemaFilterInput
  format: StringQueryOperatorInput
  error_messages: ContentstackContentTypesSchemaSchemaError_messagesFilterInput
  reference_to: StringQueryOperatorInput
}

""""""
input ContentstackContentTypesSchemaSchemaField_metadataFilterInput {
  description: StringQueryOperatorInput
  isTitle: BooleanQueryOperatorInput
  version: IntQueryOperatorInput
  ref_multiple: BooleanQueryOperatorInput
  ref_multiple_content_types: BooleanQueryOperatorInput
  allow_json_rte: BooleanQueryOperatorInput
  embed_entry: BooleanQueryOperatorInput
  multiline: BooleanQueryOperatorInput
  rich_text_type: StringQueryOperatorInput
}

""""""
input ContentstackContentTypesSchemaSchemaSchemaFilterInput {
  data_type: StringQueryOperatorInput
  display_name: StringQueryOperatorInput
  uid: StringQueryOperatorInput
  field_metadata: ContentstackContentTypesSchemaSchemaSchemaField_metadataFilterInput
  multiple: BooleanQueryOperatorInput
  mandatory: BooleanQueryOperatorInput
  unique: BooleanQueryOperatorInput
  non_localizable: BooleanQueryOperatorInput
}

""""""
input ContentstackContentTypesSchemaSchemaSchemaField_metadataFilterInput {
  description: StringQueryOperatorInput
  default_value: StringQueryOperatorInput
  isTitle: BooleanQueryOperatorInput
  rich_text_type: StringQueryOperatorInput
  image: BooleanQueryOperatorInput
}

""""""
input ContentstackContentTypesSchemaSchemaError_messagesFilterInput {
  format: StringQueryOperatorInput
}

""""""
input ContentstackContentTypesSchemaBlocksFilterInput {
  title: StringQueryOperatorInput
  uid: StringQueryOperatorInput
  schema: ContentstackContentTypesSchemaBlocksSchemaFilterInput
}

""""""
input ContentstackContentTypesSchemaBlocksSchemaFilterInput {
  data_type: StringQueryOperatorInput
  display_name: StringQueryOperatorInput
  uid: StringQueryOperatorInput
  field_metadata: ContentstackContentTypesSchemaBlocksSchemaField_metadataFilterInput
  non_localizable: BooleanQueryOperatorInput
  multiple: BooleanQueryOperatorInput
  mandatory: BooleanQueryOperatorInput
  unique: BooleanQueryOperatorInput
  extension_uid: StringQueryOperatorInput
  format: StringQueryOperatorInput
  error_messages: ContentstackContentTypesSchemaBlocksSchemaError_messagesFilterInput
  schema: ContentstackContentTypesSchemaBlocksSchemaSchemaFilterInput
  display_type: StringQueryOperatorInput
  enum: ContentstackContentTypesSchemaBlocksSchemaEnumFilterInput
  max_instance: IntQueryOperatorInput
}

""""""
input ContentstackContentTypesSchemaBlocksSchemaField_metadataFilterInput {
  description: StringQueryOperatorInput
  rich_text_type: StringQueryOperatorInput
  image: BooleanQueryOperatorInput
  extension: BooleanQueryOperatorInput
  version: IntQueryOperatorInput
  multiline: BooleanQueryOperatorInput
  allow_json_rte: BooleanQueryOperatorInput
  embed_entry: BooleanQueryOperatorInput
  instruction: StringQueryOperatorInput
  ref_multiple: BooleanQueryOperatorInput
  ref_multiple_content_types: BooleanQueryOperatorInput
}

""""""
input ContentstackContentTypesSchemaBlocksSchemaError_messagesFilterInput {
  format: StringQueryOperatorInput
}

""""""
input ContentstackContentTypesSchemaBlocksSchemaSchemaFilterInput {
  data_type: StringQueryOperatorInput
  display_name: StringQueryOperatorInput
  uid: StringQueryOperatorInput
  field_metadata: ContentstackContentTypesSchemaBlocksSchemaSchemaField_metadataFilterInput
  format: StringQueryOperatorInput
  error_messages: ContentstackContentTypesSchemaBlocksSchemaSchemaError_messagesFilterInput
  non_localizable: BooleanQueryOperatorInput
  multiple: BooleanQueryOperatorInput
  mandatory: BooleanQueryOperatorInput
  unique: BooleanQueryOperatorInput
  reference_to: StringQueryOperatorInput
}

""""""
input ContentstackContentTypesSchemaBlocksSchemaSchemaField_metadataFilterInput {
  description: StringQueryOperatorInput
  isTitle: BooleanQueryOperatorInput
  version: IntQueryOperatorInput
  allow_json_rte: BooleanQueryOperatorInput
  embed_entry: BooleanQueryOperatorInput
  multiline: BooleanQueryOperatorInput
  rich_text_type: StringQueryOperatorInput
  image: BooleanQueryOperatorInput
}

""""""
input ContentstackContentTypesSchemaBlocksSchemaSchemaError_messagesFilterInput {
  format: StringQueryOperatorInput
}

""""""
input ContentstackContentTypesSchemaBlocksSchemaEnumFilterInput {
  advanced: BooleanQueryOperatorInput
  choices: ContentstackContentTypesSchemaBlocksSchemaEnumChoicesFilterInput
}

""""""
input ContentstackContentTypesSchemaBlocksSchemaEnumChoicesFilterInput {
  value: StringQueryOperatorInput
}

""""""
input ContentstackContentTypesOptionsFilterInput {
  is_page: BooleanQueryOperatorInput
  singleton: BooleanQueryOperatorInput
  title: StringQueryOperatorInput
  url_pattern: StringQueryOperatorInput
  url_prefix: StringQueryOperatorInput
}

""""""
input ContentstackContentTypesDEFAULT_ACLFilterInput {
  others: ContentstackContentTypesDEFAULT_ACLOthersFilterInput
}

""""""
input ContentstackContentTypesDEFAULT_ACLOthersFilterInput {
  read: BooleanQueryOperatorInput
  create: BooleanQueryOperatorInput
}

""""""
input ContentstackContentTypesSYS_ACLFilterInput {
  others: ContentstackContentTypesSYS_ACLOthersFilterInput
}

""""""
input ContentstackContentTypesSYS_ACLOthersFilterInput {
  read: BooleanQueryOperatorInput
  create: BooleanQueryOperatorInput
  update: BooleanQueryOperatorInput
  delete: BooleanQueryOperatorInput
  sub_acl: ContentstackContentTypesSYS_ACLOthersSub_aclFilterInput
}

""""""
input ContentstackContentTypesSYS_ACLOthersSub_aclFilterInput {
  read: BooleanQueryOperatorInput
  create: BooleanQueryOperatorInput
  update: BooleanQueryOperatorInput
  delete: BooleanQueryOperatorInput
  publish: BooleanQueryOperatorInput
}

""""""
input ContentstackContentTypesAbilitiesFilterInput {
  get_one_object: BooleanQueryOperatorInput
  get_all_objects: BooleanQueryOperatorInput
  create_object: BooleanQueryOperatorInput
  update_object: BooleanQueryOperatorInput
  delete_object: BooleanQueryOperatorInput
  delete_all_objects: BooleanQueryOperatorInput
}

""""""
type ContentstackContentTypesConnection {
  totalCount: Int!
  edges: [ContentstackContentTypesEdge!]!
  nodes: [ContentstackContentTypes!]!
  pageInfo: PageInfo!
  distinct(field: ContentstackContentTypesFieldSelector!): [String!]!
  max(field: ContentstackContentTypesFieldSelector!): Float
  min(field: ContentstackContentTypesFieldSelector!): Float
  sum(field: ContentstackContentTypesFieldSelector!): Float
  group(skip: Int, limit: Int, field: ContentstackContentTypesFieldSelector!): [ContentstackContentTypesGroupConnection!]!
}

""""""
type ContentstackContentTypesEdge {
  next: ContentstackContentTypes
  node: ContentstackContentTypes!
  previous: ContentstackContentTypes
}

""""""
input ContentstackContentTypesFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  title: FieldSelectorEnum
  uid: FieldSelectorEnum
  schema: ContentstackContentTypesSchemaFieldSelector
  options: ContentstackContentTypesOptionsFieldSelector
  DEFAULT_ACL: ContentstackContentTypesDEFAULT_ACLFieldSelector
  SYS_ACL: ContentstackContentTypesSYS_ACLFieldSelector
  created_at: FieldSelectorEnum
  updated_at: FieldSelectorEnum
  inbuilt_class: FieldSelectorEnum
  description: FieldSelectorEnum
  abilities: ContentstackContentTypesAbilitiesFieldSelector
  maintain_revisions: FieldSelectorEnum
  _version: FieldSelectorEnum
}

""""""
input ContentstackContentTypesSchemaFieldSelector {
  display_name: FieldSelectorEnum
  uid: FieldSelectorEnum
  data_type: FieldSelectorEnum
  mandatory: FieldSelectorEnum
  unique: FieldSelectorEnum
  field_metadata: ContentstackContentTypesSchemaField_metadataFieldSelector
  multiple: FieldSelectorEnum
  non_localizable: FieldSelectorEnum
  format: FieldSelectorEnum
  error_messages: ContentstackContentTypesSchemaError_messagesFieldSelector
  schema: ContentstackContentTypesSchemaSchemaFieldSelector
  max_instance: FieldSelectorEnum
  blocks: ContentstackContentTypesSchemaBlocksFieldSelector
}

""""""
input ContentstackContentTypesSchemaField_metadataFieldSelector {
  _default: FieldSelectorEnum
  version: FieldSelectorEnum
  description: FieldSelectorEnum
  rich_text_type: FieldSelectorEnum
  image: FieldSelectorEnum
  multiline: FieldSelectorEnum
  allow_json_rte: FieldSelectorEnum
  embed_entry: FieldSelectorEnum
  ref_multiple: FieldSelectorEnum
  ref_multiple_content_types: FieldSelectorEnum
  date_range: FieldSelectorEnum
}

""""""
input ContentstackContentTypesSchemaError_messagesFieldSelector {
  format: FieldSelectorEnum
}

""""""
input ContentstackContentTypesSchemaSchemaFieldSelector {
  data_type: FieldSelectorEnum
  display_name: FieldSelectorEnum
  uid: FieldSelectorEnum
  field_metadata: ContentstackContentTypesSchemaSchemaField_metadataFieldSelector
  multiple: FieldSelectorEnum
  mandatory: FieldSelectorEnum
  unique: FieldSelectorEnum
  non_localizable: FieldSelectorEnum
  schema: ContentstackContentTypesSchemaSchemaSchemaFieldSelector
  format: FieldSelectorEnum
  error_messages: ContentstackContentTypesSchemaSchemaError_messagesFieldSelector
  reference_to: FieldSelectorEnum
}

""""""
input ContentstackContentTypesSchemaSchemaField_metadataFieldSelector {
  description: FieldSelectorEnum
  isTitle: FieldSelectorEnum
  version: FieldSelectorEnum
  ref_multiple: FieldSelectorEnum
  ref_multiple_content_types: FieldSelectorEnum
  allow_json_rte: FieldSelectorEnum
  embed_entry: FieldSelectorEnum
  multiline: FieldSelectorEnum
  rich_text_type: FieldSelectorEnum
}

""""""
input ContentstackContentTypesSchemaSchemaSchemaFieldSelector {
  data_type: FieldSelectorEnum
  display_name: FieldSelectorEnum
  uid: FieldSelectorEnum
  field_metadata: ContentstackContentTypesSchemaSchemaSchemaField_metadataFieldSelector
  multiple: FieldSelectorEnum
  mandatory: FieldSelectorEnum
  unique: FieldSelectorEnum
  non_localizable: FieldSelectorEnum
}

""""""
input ContentstackContentTypesSchemaSchemaSchemaField_metadataFieldSelector {
  description: FieldSelectorEnum
  default_value: FieldSelectorEnum
  isTitle: FieldSelectorEnum
  rich_text_type: FieldSelectorEnum
  image: FieldSelectorEnum
}

""""""
input ContentstackContentTypesSchemaSchemaError_messagesFieldSelector {
  format: FieldSelectorEnum
}

""""""
input ContentstackContentTypesSchemaBlocksFieldSelector {
  title: FieldSelectorEnum
  uid: FieldSelectorEnum
  schema: ContentstackContentTypesSchemaBlocksSchemaFieldSelector
}

""""""
input ContentstackContentTypesSchemaBlocksSchemaFieldSelector {
  data_type: FieldSelectorEnum
  display_name: FieldSelectorEnum
  uid: FieldSelectorEnum
  field_metadata: ContentstackContentTypesSchemaBlocksSchemaField_metadataFieldSelector
  non_localizable: FieldSelectorEnum
  multiple: FieldSelectorEnum
  mandatory: FieldSelectorEnum
  unique: FieldSelectorEnum
  extension_uid: FieldSelectorEnum
  format: FieldSelectorEnum
  error_messages: ContentstackContentTypesSchemaBlocksSchemaError_messagesFieldSelector
  schema: ContentstackContentTypesSchemaBlocksSchemaSchemaFieldSelector
  display_type: FieldSelectorEnum
  enum: ContentstackContentTypesSchemaBlocksSchemaEnumFieldSelector
  max_instance: FieldSelectorEnum
}

""""""
input ContentstackContentTypesSchemaBlocksSchemaField_metadataFieldSelector {
  description: FieldSelectorEnum
  rich_text_type: FieldSelectorEnum
  image: FieldSelectorEnum
  extension: FieldSelectorEnum
  version: FieldSelectorEnum
  multiline: FieldSelectorEnum
  allow_json_rte: FieldSelectorEnum
  embed_entry: FieldSelectorEnum
  instruction: FieldSelectorEnum
  ref_multiple: FieldSelectorEnum
  ref_multiple_content_types: FieldSelectorEnum
}

""""""
input ContentstackContentTypesSchemaBlocksSchemaError_messagesFieldSelector {
  format: FieldSelectorEnum
}

""""""
input ContentstackContentTypesSchemaBlocksSchemaSchemaFieldSelector {
  data_type: FieldSelectorEnum
  display_name: FieldSelectorEnum
  uid: FieldSelectorEnum
  field_metadata: ContentstackContentTypesSchemaBlocksSchemaSchemaField_metadataFieldSelector
  format: FieldSelectorEnum
  error_messages: ContentstackContentTypesSchemaBlocksSchemaSchemaError_messagesFieldSelector
  non_localizable: FieldSelectorEnum
  multiple: FieldSelectorEnum
  mandatory: FieldSelectorEnum
  unique: FieldSelectorEnum
  reference_to: FieldSelectorEnum
}

""""""
input ContentstackContentTypesSchemaBlocksSchemaSchemaField_metadataFieldSelector {
  description: FieldSelectorEnum
  isTitle: FieldSelectorEnum
  version: FieldSelectorEnum
  allow_json_rte: FieldSelectorEnum
  embed_entry: FieldSelectorEnum
  multiline: FieldSelectorEnum
  rich_text_type: FieldSelectorEnum
  image: FieldSelectorEnum
}

""""""
input ContentstackContentTypesSchemaBlocksSchemaSchemaError_messagesFieldSelector {
  format: FieldSelectorEnum
}

""""""
input ContentstackContentTypesSchemaBlocksSchemaEnumFieldSelector {
  advanced: FieldSelectorEnum
  choices: ContentstackContentTypesSchemaBlocksSchemaEnumChoicesFieldSelector
}

""""""
input ContentstackContentTypesSchemaBlocksSchemaEnumChoicesFieldSelector {
  value: FieldSelectorEnum
}

""""""
input ContentstackContentTypesOptionsFieldSelector {
  is_page: FieldSelectorEnum
  singleton: FieldSelectorEnum
  title: FieldSelectorEnum
  url_pattern: FieldSelectorEnum
  url_prefix: FieldSelectorEnum
}

""""""
input ContentstackContentTypesDEFAULT_ACLFieldSelector {
  others: ContentstackContentTypesDEFAULT_ACLOthersFieldSelector
}

""""""
input ContentstackContentTypesDEFAULT_ACLOthersFieldSelector {
  read: FieldSelectorEnum
  create: FieldSelectorEnum
}

""""""
input ContentstackContentTypesSYS_ACLFieldSelector {
  others: ContentstackContentTypesSYS_ACLOthersFieldSelector
}

""""""
input ContentstackContentTypesSYS_ACLOthersFieldSelector {
  read: FieldSelectorEnum
  create: FieldSelectorEnum
  update: FieldSelectorEnum
  delete: FieldSelectorEnum
  sub_acl: ContentstackContentTypesSYS_ACLOthersSub_aclFieldSelector
}

""""""
input ContentstackContentTypesSYS_ACLOthersSub_aclFieldSelector {
  read: FieldSelectorEnum
  create: FieldSelectorEnum
  update: FieldSelectorEnum
  delete: FieldSelectorEnum
  publish: FieldSelectorEnum
}

""""""
input ContentstackContentTypesAbilitiesFieldSelector {
  get_one_object: FieldSelectorEnum
  get_all_objects: FieldSelectorEnum
  create_object: FieldSelectorEnum
  update_object: FieldSelectorEnum
  delete_object: FieldSelectorEnum
  delete_all_objects: FieldSelectorEnum
}

""""""
type ContentstackContentTypesGroupConnection {
  totalCount: Int!
  edges: [ContentstackContentTypesEdge!]!
  nodes: [ContentstackContentTypes!]!
  pageInfo: PageInfo!
  distinct(field: ContentstackContentTypesFieldSelector!): [String!]!
  max(field: ContentstackContentTypesFieldSelector!): Float
  min(field: ContentstackContentTypesFieldSelector!): Float
  sum(field: ContentstackContentTypesFieldSelector!): Float
  group(skip: Int, limit: Int, field: ContentstackContentTypesFieldSelector!): [ContentstackContentTypesGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
input ContentstackContentTypesFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  title: StringQueryOperatorInput
  uid: StringQueryOperatorInput
  schema: ContentstackContentTypesSchemaFilterInput
  options: ContentstackContentTypesOptionsFilterInput
  DEFAULT_ACL: ContentstackContentTypesDEFAULT_ACLFilterInput
  SYS_ACL: ContentstackContentTypesSYS_ACLFilterInput
  created_at: DateQueryOperatorInput
  updated_at: DateQueryOperatorInput
  inbuilt_class: BooleanQueryOperatorInput
  description: StringQueryOperatorInput
  abilities: ContentstackContentTypesAbilitiesFilterInput
  maintain_revisions: BooleanQueryOperatorInput
  _version: IntQueryOperatorInput
}

""""""
input ContentstackContentTypesSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  title: SortOrderEnum
  uid: SortOrderEnum
  schema: ContentstackContentTypesSchemaSortInput
  options: ContentstackContentTypesOptionsSortInput
  DEFAULT_ACL: ContentstackContentTypesDEFAULT_ACLSortInput
  SYS_ACL: ContentstackContentTypesSYS_ACLSortInput
  created_at: SortOrderEnum
  updated_at: SortOrderEnum
  inbuilt_class: SortOrderEnum
  description: SortOrderEnum
  abilities: ContentstackContentTypesAbilitiesSortInput
  maintain_revisions: SortOrderEnum
  _version: SortOrderEnum
}

""""""
input ContentstackContentTypesSchemaSortInput {
  display_name: SortOrderEnum
  uid: SortOrderEnum
  data_type: SortOrderEnum
  mandatory: SortOrderEnum
  unique: SortOrderEnum
  field_metadata: ContentstackContentTypesSchemaField_metadataSortInput
  multiple: SortOrderEnum
  non_localizable: SortOrderEnum
  format: SortOrderEnum
  error_messages: ContentstackContentTypesSchemaError_messagesSortInput
  schema: ContentstackContentTypesSchemaSchemaSortInput
  max_instance: SortOrderEnum
  blocks: ContentstackContentTypesSchemaBlocksSortInput
}

""""""
input ContentstackContentTypesSchemaField_metadataSortInput {
  _default: SortOrderEnum
  version: SortOrderEnum
  description: SortOrderEnum
  rich_text_type: SortOrderEnum
  image: SortOrderEnum
  multiline: SortOrderEnum
  allow_json_rte: SortOrderEnum
  embed_entry: SortOrderEnum
  ref_multiple: SortOrderEnum
  ref_multiple_content_types: SortOrderEnum
  date_range: SortOrderEnum
}

""""""
input ContentstackContentTypesSchemaError_messagesSortInput {
  format: SortOrderEnum
}

""""""
input ContentstackContentTypesSchemaSchemaSortInput {
  data_type: SortOrderEnum
  display_name: SortOrderEnum
  uid: SortOrderEnum
  field_metadata: ContentstackContentTypesSchemaSchemaField_metadataSortInput
  multiple: SortOrderEnum
  mandatory: SortOrderEnum
  unique: SortOrderEnum
  non_localizable: SortOrderEnum
  schema: ContentstackContentTypesSchemaSchemaSchemaSortInput
  format: SortOrderEnum
  error_messages: ContentstackContentTypesSchemaSchemaError_messagesSortInput
  reference_to: SortOrderEnum
}

""""""
input ContentstackContentTypesSchemaSchemaField_metadataSortInput {
  description: SortOrderEnum
  isTitle: SortOrderEnum
  version: SortOrderEnum
  ref_multiple: SortOrderEnum
  ref_multiple_content_types: SortOrderEnum
  allow_json_rte: SortOrderEnum
  embed_entry: SortOrderEnum
  multiline: SortOrderEnum
  rich_text_type: SortOrderEnum
}

""""""
input ContentstackContentTypesSchemaSchemaSchemaSortInput {
  data_type: SortOrderEnum
  display_name: SortOrderEnum
  uid: SortOrderEnum
  field_metadata: ContentstackContentTypesSchemaSchemaSchemaField_metadataSortInput
  multiple: SortOrderEnum
  mandatory: SortOrderEnum
  unique: SortOrderEnum
  non_localizable: SortOrderEnum
}

""""""
input ContentstackContentTypesSchemaSchemaSchemaField_metadataSortInput {
  description: SortOrderEnum
  default_value: SortOrderEnum
  isTitle: SortOrderEnum
  rich_text_type: SortOrderEnum
  image: SortOrderEnum
}

""""""
input ContentstackContentTypesSchemaSchemaError_messagesSortInput {
  format: SortOrderEnum
}

""""""
input ContentstackContentTypesSchemaBlocksSortInput {
  title: SortOrderEnum
  uid: SortOrderEnum
  schema: ContentstackContentTypesSchemaBlocksSchemaSortInput
}

""""""
input ContentstackContentTypesSchemaBlocksSchemaSortInput {
  data_type: SortOrderEnum
  display_name: SortOrderEnum
  uid: SortOrderEnum
  field_metadata: ContentstackContentTypesSchemaBlocksSchemaField_metadataSortInput
  non_localizable: SortOrderEnum
  multiple: SortOrderEnum
  mandatory: SortOrderEnum
  unique: SortOrderEnum
  extension_uid: SortOrderEnum
  format: SortOrderEnum
  error_messages: ContentstackContentTypesSchemaBlocksSchemaError_messagesSortInput
  schema: ContentstackContentTypesSchemaBlocksSchemaSchemaSortInput
  display_type: SortOrderEnum
  enum: ContentstackContentTypesSchemaBlocksSchemaEnumSortInput
  max_instance: SortOrderEnum
}

""""""
input ContentstackContentTypesSchemaBlocksSchemaField_metadataSortInput {
  description: SortOrderEnum
  rich_text_type: SortOrderEnum
  image: SortOrderEnum
  extension: SortOrderEnum
  version: SortOrderEnum
  multiline: SortOrderEnum
  allow_json_rte: SortOrderEnum
  embed_entry: SortOrderEnum
  instruction: SortOrderEnum
  ref_multiple: SortOrderEnum
  ref_multiple_content_types: SortOrderEnum
}

""""""
input ContentstackContentTypesSchemaBlocksSchemaError_messagesSortInput {
  format: SortOrderEnum
}

""""""
input ContentstackContentTypesSchemaBlocksSchemaSchemaSortInput {
  data_type: SortOrderEnum
  display_name: SortOrderEnum
  uid: SortOrderEnum
  field_metadata: ContentstackContentTypesSchemaBlocksSchemaSchemaField_metadataSortInput
  format: SortOrderEnum
  error_messages: ContentstackContentTypesSchemaBlocksSchemaSchemaError_messagesSortInput
  non_localizable: SortOrderEnum
  multiple: SortOrderEnum
  mandatory: SortOrderEnum
  unique: SortOrderEnum
  reference_to: SortOrderEnum
}

""""""
input ContentstackContentTypesSchemaBlocksSchemaSchemaField_metadataSortInput {
  description: SortOrderEnum
  isTitle: SortOrderEnum
  version: SortOrderEnum
  allow_json_rte: SortOrderEnum
  embed_entry: SortOrderEnum
  multiline: SortOrderEnum
  rich_text_type: SortOrderEnum
  image: SortOrderEnum
}

""""""
input ContentstackContentTypesSchemaBlocksSchemaSchemaError_messagesSortInput {
  format: SortOrderEnum
}

""""""
input ContentstackContentTypesSchemaBlocksSchemaEnumSortInput {
  advanced: SortOrderEnum
  choices: ContentstackContentTypesSchemaBlocksSchemaEnumChoicesSortInput
}

""""""
input ContentstackContentTypesSchemaBlocksSchemaEnumChoicesSortInput {
  value: SortOrderEnum
}

""""""
input ContentstackContentTypesOptionsSortInput {
  is_page: SortOrderEnum
  singleton: SortOrderEnum
  title: SortOrderEnum
  url_pattern: SortOrderEnum
  url_prefix: SortOrderEnum
}

""""""
input ContentstackContentTypesDEFAULT_ACLSortInput {
  others: ContentstackContentTypesDEFAULT_ACLOthersSortInput
}

""""""
input ContentstackContentTypesDEFAULT_ACLOthersSortInput {
  read: SortOrderEnum
  create: SortOrderEnum
}

""""""
input ContentstackContentTypesSYS_ACLSortInput {
  others: ContentstackContentTypesSYS_ACLOthersSortInput
}

""""""
input ContentstackContentTypesSYS_ACLOthersSortInput {
  read: SortOrderEnum
  create: SortOrderEnum
  update: SortOrderEnum
  delete: SortOrderEnum
  sub_acl: ContentstackContentTypesSYS_ACLOthersSub_aclSortInput
}

""""""
input ContentstackContentTypesSYS_ACLOthersSub_aclSortInput {
  read: SortOrderEnum
  create: SortOrderEnum
  update: SortOrderEnum
  delete: SortOrderEnum
  publish: SortOrderEnum
}

""""""
input ContentstackContentTypesAbilitiesSortInput {
  get_one_object: SortOrderEnum
  get_all_objects: SortOrderEnum
  create_object: SortOrderEnum
  update_object: SortOrderEnum
  delete_object: SortOrderEnum
  delete_all_objects: SortOrderEnum
}

""""""
type ContentfulContentType implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  name: String
  displayField: String
  description: String
  sys: ContentfulContentTypeSys
}

""""""
type ContentfulContentTypeSys {
  type: String
}

""""""
input ContentfulContentTypeSysFilterInput {
  type: StringQueryOperatorInput
}

""""""
type ContentfulContentTypeConnection {
  totalCount: Int!
  edges: [ContentfulContentTypeEdge!]!
  nodes: [ContentfulContentType!]!
  pageInfo: PageInfo!
  distinct(field: ContentfulContentTypeFieldSelector!): [String!]!
  max(field: ContentfulContentTypeFieldSelector!): Float
  min(field: ContentfulContentTypeFieldSelector!): Float
  sum(field: ContentfulContentTypeFieldSelector!): Float
  group(skip: Int, limit: Int, field: ContentfulContentTypeFieldSelector!): [ContentfulContentTypeGroupConnection!]!
}

""""""
type ContentfulContentTypeEdge {
  next: ContentfulContentType
  node: ContentfulContentType!
  previous: ContentfulContentType
}

""""""
input ContentfulContentTypeFieldSelector {
  id: FieldSelectorEnum
  parent: NodeFieldSelector
  children: NodeFieldSelector
  internal: InternalFieldSelector
  name: FieldSelectorEnum
  displayField: FieldSelectorEnum
  description: FieldSelectorEnum
  sys: ContentfulContentTypeSysFieldSelector
}

""""""
input ContentfulContentTypeSysFieldSelector {
  type: FieldSelectorEnum
}

""""""
type ContentfulContentTypeGroupConnection {
  totalCount: Int!
  edges: [ContentfulContentTypeEdge!]!
  nodes: [ContentfulContentType!]!
  pageInfo: PageInfo!
  distinct(field: ContentfulContentTypeFieldSelector!): [String!]!
  max(field: ContentfulContentTypeFieldSelector!): Float
  min(field: ContentfulContentTypeFieldSelector!): Float
  sum(field: ContentfulContentTypeFieldSelector!): Float
  group(skip: Int, limit: Int, field: ContentfulContentTypeFieldSelector!): [ContentfulContentTypeGroupConnection!]!
  field: String!
  fieldValue: String
}

""""""
input ContentfulContentTypeFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterInput
  internal: InternalFilterInput
  name: StringQueryOperatorInput
  displayField: StringQueryOperatorInput
  description: StringQueryOperatorInput
  sys: ContentfulContentTypeSysFilterInput
}

""""""
input ContentfulContentTypeSortInput {
  id: SortOrderEnum
  parent: NodeSortInput
  children: NodeSortInput
  internal: InternalSortInput
  name: SortOrderEnum
  displayField: SortOrderEnum
  description: SortOrderEnum
  sys: ContentfulContentTypeSysSortInput
}

""""""
input ContentfulContentTypeSysSortInput {
  type: SortOrderEnum
}